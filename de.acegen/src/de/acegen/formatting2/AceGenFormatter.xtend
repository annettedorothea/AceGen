/*
 * generated by Xtext 2.20.0
 */
package de.acegen.formatting2

import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

//import org.eclipse.xtext.formatting2.IFormattableDocument

class AceGenFormatter extends AbstractFormatter2 {
	
	override format(Object obj, IFormattableDocument document) {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
	//@Inject extension AceGenGrammarAccess

/*
	def dispatch void format(Project project, extension IFormattableDocument document) {
		//println(textRegionAccess.toString)
		//project.httpClient.format()
		//project.httpServer.format()
	}

	def dispatch void format(HttpClient httpClient, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (httpClientAce : httpClient.aceOperations) {
			httpClientAce.format(document)
		}
		httpClient.appState.format(document)
	}
	
	def dispatch void format(HttpClientAce it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpClientOutcome it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpClientStateElement it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpClientTypeDefinition it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServer it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServerAceWrite it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServerAceRead it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServerView it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(AuthUser it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(Model it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(Scenario it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(WhenBlock it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(ThenBlock it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(DataDefinition it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(AttributeDefinitionList it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(ListAttributeDefinitionList it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(AttributeDefinition it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(Value it, extension IFormattableDocument document) {
	}
	*/
}
