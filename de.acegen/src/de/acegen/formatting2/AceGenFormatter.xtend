/*
 * generated by Xtext 2.20.0
 */
package de.acegen.formatting2

import com.google.inject.Inject
import de.acegen.aceGen.AttributeDefinition
import de.acegen.aceGen.AttributeDefinitionList
import de.acegen.aceGen.AuthUser
import de.acegen.aceGen.DataDefinition
import de.acegen.aceGen.HttpClient
import de.acegen.aceGen.HttpClientAce
import de.acegen.aceGen.HttpClientOutcome
import de.acegen.aceGen.HttpClientStateElement
import de.acegen.aceGen.HttpClientTypeDefinition
import de.acegen.aceGen.HttpServer
import de.acegen.aceGen.HttpServerAceRead
import de.acegen.aceGen.HttpServerAceWrite
import de.acegen.aceGen.HttpServerView
import de.acegen.aceGen.ListAttributeDefinitionList
import de.acegen.aceGen.Model
import de.acegen.aceGen.Project
import de.acegen.aceGen.Scenario
import de.acegen.aceGen.ThenBlock
import de.acegen.aceGen.Value
import de.acegen.aceGen.WhenBlock
import de.acegen.services.AceGenGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class AceGenFormatter extends AbstractFormatter2 {
	
	@Inject extension AceGenGrammarAccess

	def dispatch void format(Project project, extension IFormattableDocument document) {
		//println(textRegionAccess.toString)
		//project.httpClient.format()
		//project.httpServer.format()
	}

	def dispatch void format(HttpClient httpClient, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		/*for (httpClientAce : httpClient.aceOperations) {
			httpClientAce.format(document)
		}
		httpClient.appState.format(document)*/
	}
	
	def dispatch void format(HttpClientAce it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpClientOutcome it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpClientStateElement it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpClientTypeDefinition it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServer it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServerAceWrite it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServerAceRead it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(HttpServerView it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(AuthUser it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(Model it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(Scenario it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(WhenBlock it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(ThenBlock it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(DataDefinition it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(AttributeDefinitionList it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(ListAttributeDefinitionList it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(AttributeDefinition it, extension IFormattableDocument document) {
	}
	
	def dispatch void format(Value it, extension IFormattableDocument document) {
	}
}
