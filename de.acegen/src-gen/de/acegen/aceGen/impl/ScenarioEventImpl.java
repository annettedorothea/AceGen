/**
 * generated by Xtext 2.16.0
 */
package de.acegen.aceGen.impl;

import de.acegen.aceGen.AceGenPackage;
import de.acegen.aceGen.DataDefinition;
import de.acegen.aceGen.HttpServerAceWrite;
import de.acegen.aceGen.ScenarioEvent;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Scenario Event</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioEventImpl#getEvent <em>Event</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioEventImpl#getDataDefinition <em>Data Definition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ScenarioEventImpl extends MinimalEObjectImpl.Container implements ScenarioEvent
{
  /**
   * The cached value of the '{@link #getEvent() <em>Event</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected HttpServerAceWrite event;

  /**
   * The cached value of the '{@link #getDataDefinition() <em>Data Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataDefinition()
   * @generated
   * @ordered
   */
  protected DataDefinition dataDefinition;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ScenarioEventImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AceGenPackage.Literals.SCENARIO_EVENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HttpServerAceWrite getEvent()
  {
    if (event != null && event.eIsProxy())
    {
      InternalEObject oldEvent = (InternalEObject)event;
      event = (HttpServerAceWrite)eResolveProxy(oldEvent);
      if (event != oldEvent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AceGenPackage.SCENARIO_EVENT__EVENT, oldEvent, event));
      }
    }
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HttpServerAceWrite basicGetEvent()
  {
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEvent(HttpServerAceWrite newEvent)
  {
    HttpServerAceWrite oldEvent = event;
    event = newEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO_EVENT__EVENT, oldEvent, event));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDefinition getDataDefinition()
  {
    return dataDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDataDefinition(DataDefinition newDataDefinition, NotificationChain msgs)
  {
    DataDefinition oldDataDefinition = dataDefinition;
    dataDefinition = newDataDefinition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION, oldDataDefinition, newDataDefinition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDataDefinition(DataDefinition newDataDefinition)
  {
    if (newDataDefinition != dataDefinition)
    {
      NotificationChain msgs = null;
      if (dataDefinition != null)
        msgs = ((InternalEObject)dataDefinition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION, null, msgs);
      if (newDataDefinition != null)
        msgs = ((InternalEObject)newDataDefinition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION, null, msgs);
      msgs = basicSetDataDefinition(newDataDefinition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION, newDataDefinition, newDataDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION:
        return basicSetDataDefinition(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO_EVENT__EVENT:
        if (resolve) return getEvent();
        return basicGetEvent();
      case AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION:
        return getDataDefinition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO_EVENT__EVENT:
        setEvent((HttpServerAceWrite)newValue);
        return;
      case AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION:
        setDataDefinition((DataDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO_EVENT__EVENT:
        setEvent((HttpServerAceWrite)null);
        return;
      case AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION:
        setDataDefinition((DataDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO_EVENT__EVENT:
        return event != null;
      case AceGenPackage.SCENARIO_EVENT__DATA_DEFINITION:
        return dataDefinition != null;
    }
    return super.eIsSet(featureID);
  }

} //ScenarioEventImpl
