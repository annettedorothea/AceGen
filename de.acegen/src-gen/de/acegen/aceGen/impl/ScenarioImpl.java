/**
 * generated by Xtext 2.16.0
 */
package de.acegen.aceGen.impl;

import de.acegen.aceGen.AceGenPackage;
import de.acegen.aceGen.AttributeDefinitionList;
import de.acegen.aceGen.Authorization;
import de.acegen.aceGen.DataDefinition;
import de.acegen.aceGen.HttpServerAce;
import de.acegen.aceGen.Scenario;
import de.acegen.aceGen.ScenarioEvent;
import de.acegen.aceGen.Verification;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Scenario</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getEvents <em>Events</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getAction <em>Action</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getDataDefinition <em>Data Definition</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getAuthorization <em>Authorization</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getStatusCode <em>Status Code</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getResponse <em>Response</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ScenarioImpl#getVerifications <em>Verifications</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ScenarioImpl extends MinimalEObjectImpl.Container implements Scenario
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEvents() <em>Events</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected EList<ScenarioEvent> events;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected HttpServerAce action;

  /**
   * The cached value of the '{@link #getDataDefinition() <em>Data Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataDefinition()
   * @generated
   * @ordered
   */
  protected DataDefinition dataDefinition;

  /**
   * The cached value of the '{@link #getAuthorization() <em>Authorization</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthorization()
   * @generated
   * @ordered
   */
  protected Authorization authorization;

  /**
   * The default value of the '{@link #getStatusCode() <em>Status Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatusCode()
   * @generated
   * @ordered
   */
  protected static final int STATUS_CODE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getStatusCode() <em>Status Code</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatusCode()
   * @generated
   * @ordered
   */
  protected int statusCode = STATUS_CODE_EDEFAULT;

  /**
   * The cached value of the '{@link #getResponse() <em>Response</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResponse()
   * @generated
   * @ordered
   */
  protected AttributeDefinitionList response;

  /**
   * The cached value of the '{@link #getVerifications() <em>Verifications</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVerifications()
   * @generated
   * @ordered
   */
  protected EList<Verification> verifications;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ScenarioImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AceGenPackage.Literals.SCENARIO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ScenarioEvent> getEvents()
  {
    if (events == null)
    {
      events = new EObjectContainmentEList<ScenarioEvent>(ScenarioEvent.class, this, AceGenPackage.SCENARIO__EVENTS);
    }
    return events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HttpServerAce getAction()
  {
    if (action != null && action.eIsProxy())
    {
      InternalEObject oldAction = (InternalEObject)action;
      action = (HttpServerAce)eResolveProxy(oldAction);
      if (action != oldAction)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AceGenPackage.SCENARIO__ACTION, oldAction, action));
      }
    }
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HttpServerAce basicGetAction()
  {
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAction(HttpServerAce newAction)
  {
    HttpServerAce oldAction = action;
    action = newAction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__ACTION, oldAction, action));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDefinition getDataDefinition()
  {
    return dataDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDataDefinition(DataDefinition newDataDefinition, NotificationChain msgs)
  {
    DataDefinition oldDataDefinition = dataDefinition;
    dataDefinition = newDataDefinition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__DATA_DEFINITION, oldDataDefinition, newDataDefinition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDataDefinition(DataDefinition newDataDefinition)
  {
    if (newDataDefinition != dataDefinition)
    {
      NotificationChain msgs = null;
      if (dataDefinition != null)
        msgs = ((InternalEObject)dataDefinition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO__DATA_DEFINITION, null, msgs);
      if (newDataDefinition != null)
        msgs = ((InternalEObject)newDataDefinition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO__DATA_DEFINITION, null, msgs);
      msgs = basicSetDataDefinition(newDataDefinition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__DATA_DEFINITION, newDataDefinition, newDataDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Authorization getAuthorization()
  {
    return authorization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAuthorization(Authorization newAuthorization, NotificationChain msgs)
  {
    Authorization oldAuthorization = authorization;
    authorization = newAuthorization;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__AUTHORIZATION, oldAuthorization, newAuthorization);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAuthorization(Authorization newAuthorization)
  {
    if (newAuthorization != authorization)
    {
      NotificationChain msgs = null;
      if (authorization != null)
        msgs = ((InternalEObject)authorization).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO__AUTHORIZATION, null, msgs);
      if (newAuthorization != null)
        msgs = ((InternalEObject)newAuthorization).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO__AUTHORIZATION, null, msgs);
      msgs = basicSetAuthorization(newAuthorization, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__AUTHORIZATION, newAuthorization, newAuthorization));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getStatusCode()
  {
    return statusCode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStatusCode(int newStatusCode)
  {
    int oldStatusCode = statusCode;
    statusCode = newStatusCode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__STATUS_CODE, oldStatusCode, statusCode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AttributeDefinitionList getResponse()
  {
    return response;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetResponse(AttributeDefinitionList newResponse, NotificationChain msgs)
  {
    AttributeDefinitionList oldResponse = response;
    response = newResponse;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__RESPONSE, oldResponse, newResponse);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResponse(AttributeDefinitionList newResponse)
  {
    if (newResponse != response)
    {
      NotificationChain msgs = null;
      if (response != null)
        msgs = ((InternalEObject)response).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO__RESPONSE, null, msgs);
      if (newResponse != null)
        msgs = ((InternalEObject)newResponse).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AceGenPackage.SCENARIO__RESPONSE, null, msgs);
      msgs = basicSetResponse(newResponse, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.SCENARIO__RESPONSE, newResponse, newResponse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Verification> getVerifications()
  {
    if (verifications == null)
    {
      verifications = new EObjectContainmentEList<Verification>(Verification.class, this, AceGenPackage.SCENARIO__VERIFICATIONS);
    }
    return verifications;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO__EVENTS:
        return ((InternalEList<?>)getEvents()).basicRemove(otherEnd, msgs);
      case AceGenPackage.SCENARIO__DATA_DEFINITION:
        return basicSetDataDefinition(null, msgs);
      case AceGenPackage.SCENARIO__AUTHORIZATION:
        return basicSetAuthorization(null, msgs);
      case AceGenPackage.SCENARIO__RESPONSE:
        return basicSetResponse(null, msgs);
      case AceGenPackage.SCENARIO__VERIFICATIONS:
        return ((InternalEList<?>)getVerifications()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO__NAME:
        return getName();
      case AceGenPackage.SCENARIO__EVENTS:
        return getEvents();
      case AceGenPackage.SCENARIO__ACTION:
        if (resolve) return getAction();
        return basicGetAction();
      case AceGenPackage.SCENARIO__DATA_DEFINITION:
        return getDataDefinition();
      case AceGenPackage.SCENARIO__AUTHORIZATION:
        return getAuthorization();
      case AceGenPackage.SCENARIO__STATUS_CODE:
        return getStatusCode();
      case AceGenPackage.SCENARIO__RESPONSE:
        return getResponse();
      case AceGenPackage.SCENARIO__VERIFICATIONS:
        return getVerifications();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO__NAME:
        setName((String)newValue);
        return;
      case AceGenPackage.SCENARIO__EVENTS:
        getEvents().clear();
        getEvents().addAll((Collection<? extends ScenarioEvent>)newValue);
        return;
      case AceGenPackage.SCENARIO__ACTION:
        setAction((HttpServerAce)newValue);
        return;
      case AceGenPackage.SCENARIO__DATA_DEFINITION:
        setDataDefinition((DataDefinition)newValue);
        return;
      case AceGenPackage.SCENARIO__AUTHORIZATION:
        setAuthorization((Authorization)newValue);
        return;
      case AceGenPackage.SCENARIO__STATUS_CODE:
        setStatusCode((Integer)newValue);
        return;
      case AceGenPackage.SCENARIO__RESPONSE:
        setResponse((AttributeDefinitionList)newValue);
        return;
      case AceGenPackage.SCENARIO__VERIFICATIONS:
        getVerifications().clear();
        getVerifications().addAll((Collection<? extends Verification>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AceGenPackage.SCENARIO__EVENTS:
        getEvents().clear();
        return;
      case AceGenPackage.SCENARIO__ACTION:
        setAction((HttpServerAce)null);
        return;
      case AceGenPackage.SCENARIO__DATA_DEFINITION:
        setDataDefinition((DataDefinition)null);
        return;
      case AceGenPackage.SCENARIO__AUTHORIZATION:
        setAuthorization((Authorization)null);
        return;
      case AceGenPackage.SCENARIO__STATUS_CODE:
        setStatusCode(STATUS_CODE_EDEFAULT);
        return;
      case AceGenPackage.SCENARIO__RESPONSE:
        setResponse((AttributeDefinitionList)null);
        return;
      case AceGenPackage.SCENARIO__VERIFICATIONS:
        getVerifications().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.SCENARIO__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AceGenPackage.SCENARIO__EVENTS:
        return events != null && !events.isEmpty();
      case AceGenPackage.SCENARIO__ACTION:
        return action != null;
      case AceGenPackage.SCENARIO__DATA_DEFINITION:
        return dataDefinition != null;
      case AceGenPackage.SCENARIO__AUTHORIZATION:
        return authorization != null;
      case AceGenPackage.SCENARIO__STATUS_CODE:
        return statusCode != STATUS_CODE_EDEFAULT;
      case AceGenPackage.SCENARIO__RESPONSE:
        return response != null;
      case AceGenPackage.SCENARIO__VERIFICATIONS:
        return verifications != null && !verifications.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", statusCode: ");
    result.append(statusCode);
    result.append(')');
    return result.toString();
  }

} //ScenarioImpl
