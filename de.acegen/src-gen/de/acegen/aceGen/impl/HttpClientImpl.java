/**
 * generated by Xtext 2.23.0
 */
package de.acegen.aceGen.impl;

import de.acegen.aceGen.AceGenPackage;
import de.acegen.aceGen.ClientAttribute;
import de.acegen.aceGen.ClientScenario;
import de.acegen.aceGen.HttpClient;
import de.acegen.aceGen.HttpClientAce;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Http Client</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientImpl#isReact16_8 <em>React16 8</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientImpl#getAceOperations <em>Ace Operations</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientImpl#isUiPresent <em>Ui Present</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientImpl#getUi <em>Ui</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientImpl#getScenarios <em>Scenarios</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HttpClientImpl extends MinimalEObjectImpl.Container implements HttpClient
{
  /**
   * The default value of the '{@link #isReact16_8() <em>React16 8</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReact16_8()
   * @generated
   * @ordered
   */
  protected static final boolean REACT16_8_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isReact16_8() <em>React16 8</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReact16_8()
   * @generated
   * @ordered
   */
  protected boolean react16_8 = REACT16_8_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAceOperations() <em>Ace Operations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAceOperations()
   * @generated
   * @ordered
   */
  protected EList<HttpClientAce> aceOperations;

  /**
   * The default value of the '{@link #isUiPresent() <em>Ui Present</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUiPresent()
   * @generated
   * @ordered
   */
  protected static final boolean UI_PRESENT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isUiPresent() <em>Ui Present</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUiPresent()
   * @generated
   * @ordered
   */
  protected boolean uiPresent = UI_PRESENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getUi() <em>Ui</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUi()
   * @generated
   * @ordered
   */
  protected EList<ClientAttribute> ui;

  /**
   * The cached value of the '{@link #getScenarios() <em>Scenarios</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScenarios()
   * @generated
   * @ordered
   */
  protected EList<ClientScenario> scenarios;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HttpClientImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AceGenPackage.Literals.HTTP_CLIENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isReact16_8()
  {
    return react16_8;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReact16_8(boolean newReact16_8)
  {
    boolean oldReact16_8 = react16_8;
    react16_8 = newReact16_8;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.HTTP_CLIENT__REACT16_8, oldReact16_8, react16_8));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.HTTP_CLIENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<HttpClientAce> getAceOperations()
  {
    if (aceOperations == null)
    {
      aceOperations = new EObjectContainmentEList<HttpClientAce>(HttpClientAce.class, this, AceGenPackage.HTTP_CLIENT__ACE_OPERATIONS);
    }
    return aceOperations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isUiPresent()
  {
    return uiPresent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUiPresent(boolean newUiPresent)
  {
    boolean oldUiPresent = uiPresent;
    uiPresent = newUiPresent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.HTTP_CLIENT__UI_PRESENT, oldUiPresent, uiPresent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ClientAttribute> getUi()
  {
    if (ui == null)
    {
      ui = new EObjectContainmentEList<ClientAttribute>(ClientAttribute.class, this, AceGenPackage.HTTP_CLIENT__UI);
    }
    return ui;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ClientScenario> getScenarios()
  {
    if (scenarios == null)
    {
      scenarios = new EObjectContainmentEList<ClientScenario>(ClientScenario.class, this, AceGenPackage.HTTP_CLIENT__SCENARIOS);
    }
    return scenarios;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT__ACE_OPERATIONS:
        return ((InternalEList<?>)getAceOperations()).basicRemove(otherEnd, msgs);
      case AceGenPackage.HTTP_CLIENT__UI:
        return ((InternalEList<?>)getUi()).basicRemove(otherEnd, msgs);
      case AceGenPackage.HTTP_CLIENT__SCENARIOS:
        return ((InternalEList<?>)getScenarios()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT__REACT16_8:
        return isReact16_8();
      case AceGenPackage.HTTP_CLIENT__NAME:
        return getName();
      case AceGenPackage.HTTP_CLIENT__ACE_OPERATIONS:
        return getAceOperations();
      case AceGenPackage.HTTP_CLIENT__UI_PRESENT:
        return isUiPresent();
      case AceGenPackage.HTTP_CLIENT__UI:
        return getUi();
      case AceGenPackage.HTTP_CLIENT__SCENARIOS:
        return getScenarios();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT__REACT16_8:
        setReact16_8((Boolean)newValue);
        return;
      case AceGenPackage.HTTP_CLIENT__NAME:
        setName((String)newValue);
        return;
      case AceGenPackage.HTTP_CLIENT__ACE_OPERATIONS:
        getAceOperations().clear();
        getAceOperations().addAll((Collection<? extends HttpClientAce>)newValue);
        return;
      case AceGenPackage.HTTP_CLIENT__UI_PRESENT:
        setUiPresent((Boolean)newValue);
        return;
      case AceGenPackage.HTTP_CLIENT__UI:
        getUi().clear();
        getUi().addAll((Collection<? extends ClientAttribute>)newValue);
        return;
      case AceGenPackage.HTTP_CLIENT__SCENARIOS:
        getScenarios().clear();
        getScenarios().addAll((Collection<? extends ClientScenario>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT__REACT16_8:
        setReact16_8(REACT16_8_EDEFAULT);
        return;
      case AceGenPackage.HTTP_CLIENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AceGenPackage.HTTP_CLIENT__ACE_OPERATIONS:
        getAceOperations().clear();
        return;
      case AceGenPackage.HTTP_CLIENT__UI_PRESENT:
        setUiPresent(UI_PRESENT_EDEFAULT);
        return;
      case AceGenPackage.HTTP_CLIENT__UI:
        getUi().clear();
        return;
      case AceGenPackage.HTTP_CLIENT__SCENARIOS:
        getScenarios().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT__REACT16_8:
        return react16_8 != REACT16_8_EDEFAULT;
      case AceGenPackage.HTTP_CLIENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AceGenPackage.HTTP_CLIENT__ACE_OPERATIONS:
        return aceOperations != null && !aceOperations.isEmpty();
      case AceGenPackage.HTTP_CLIENT__UI_PRESENT:
        return uiPresent != UI_PRESENT_EDEFAULT;
      case AceGenPackage.HTTP_CLIENT__UI:
        return ui != null && !ui.isEmpty();
      case AceGenPackage.HTTP_CLIENT__SCENARIOS:
        return scenarios != null && !scenarios.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (react16_8: ");
    result.append(react16_8);
    result.append(", name: ");
    result.append(name);
    result.append(", uiPresent: ");
    result.append(uiPresent);
    result.append(')');
    return result.toString();
  }

} //HttpClientImpl
