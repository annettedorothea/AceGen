/*
 * generated by Xtext 2.21.0
 */
package de.acegen.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AceGenGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cHttpClientKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cHttpClientAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cHttpClientHttpClientParserRuleCall_1_0_1_0 = (RuleCall)cHttpClientAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cHttpServerKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cHttpServerAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cHttpServerHttpServerParserRuleCall_1_1_1_0 = (RuleCall)cHttpServerAssignment_1_1_1.eContents().get(0);
		
		//Project:
		//	{Project} ('HttpClient' httpClient=HttpClient? | 'HttpServer' httpServer=HttpServer?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Project} ('HttpClient' httpClient=HttpClient? | 'HttpServer' httpServer=HttpServer?)?
		public Group getGroup() { return cGroup; }
		
		//{Project}
		public Action getProjectAction_0() { return cProjectAction_0; }
		
		//('HttpClient' httpClient=HttpClient? | 'HttpServer' httpServer=HttpServer?)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'HttpClient' httpClient=HttpClient?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'HttpClient'
		public Keyword getHttpClientKeyword_1_0_0() { return cHttpClientKeyword_1_0_0; }
		
		//httpClient=HttpClient?
		public Assignment getHttpClientAssignment_1_0_1() { return cHttpClientAssignment_1_0_1; }
		
		//HttpClient
		public RuleCall getHttpClientHttpClientParserRuleCall_1_0_1_0() { return cHttpClientHttpClientParserRuleCall_1_0_1_0; }
		
		//'HttpServer' httpServer=HttpServer?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'HttpServer'
		public Keyword getHttpServerKeyword_1_1_0() { return cHttpServerKeyword_1_1_0; }
		
		//httpServer=HttpServer?
		public Assignment getHttpServerAssignment_1_1_1() { return cHttpServerAssignment_1_1_1; }
		
		//HttpServer
		public RuleCall getHttpServerHttpServerParserRuleCall_1_1_1_0() { return cHttpServerHttpServerParserRuleCall_1_1_1_0; }
	}
	public class HttpClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQualifiedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cACEKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAceOperationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAceOperationsHttpClientAceParserRuleCall_1_1_0 = (RuleCall)cAceOperationsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cAppStatePresentAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cAppStatePresentAppStateKeyword_2_0_0 = (Keyword)cAppStatePresentAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cAppStateAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cAppStateClientAttributeParserRuleCall_2_1_1_0 = (RuleCall)cAppStateAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cScenariosKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cScenariosAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cScenariosClientScenarioParserRuleCall_3_1_0 = (RuleCall)cScenariosAssignment_3_1.eContents().get(0);
		
		//HttpClient:
		//	name=QualifiedName ('ACE' aceOperations+=HttpClientAce*)? (appStatePresent?='appState' ('{'
		//	appState+=ClientAttribute*
		//	'}')?)? ('scenarios' scenarios+=ClientScenario*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QualifiedName ('ACE' aceOperations+=HttpClientAce*)? (appStatePresent?='appState' ('{' appState+=ClientAttribute*
		//'}')?)? ('scenarios' scenarios+=ClientScenario*)?
		public Group getGroup() { return cGroup; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0_0() { return cNameQualifiedNameParserRuleCall_0_0; }
		
		//('ACE' aceOperations+=HttpClientAce*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'ACE'
		public Keyword getACEKeyword_1_0() { return cACEKeyword_1_0; }
		
		//aceOperations+=HttpClientAce*
		public Assignment getAceOperationsAssignment_1_1() { return cAceOperationsAssignment_1_1; }
		
		//HttpClientAce
		public RuleCall getAceOperationsHttpClientAceParserRuleCall_1_1_0() { return cAceOperationsHttpClientAceParserRuleCall_1_1_0; }
		
		//(appStatePresent?='appState' ('{' appState+=ClientAttribute* '}')?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//appStatePresent?='appState'
		public Assignment getAppStatePresentAssignment_2_0() { return cAppStatePresentAssignment_2_0; }
		
		//'appState'
		public Keyword getAppStatePresentAppStateKeyword_2_0_0() { return cAppStatePresentAppStateKeyword_2_0_0; }
		
		//('{' appState+=ClientAttribute* '}')?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }
		
		//appState+=ClientAttribute*
		public Assignment getAppStateAssignment_2_1_1() { return cAppStateAssignment_2_1_1; }
		
		//ClientAttribute
		public RuleCall getAppStateClientAttributeParserRuleCall_2_1_1_0() { return cAppStateClientAttributeParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_2() { return cRightCurlyBracketKeyword_2_1_2; }
		
		//('scenarios' scenarios+=ClientScenario*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'scenarios'
		public Keyword getScenariosKeyword_3_0() { return cScenariosKeyword_3_0; }
		
		//scenarios+=ClientScenario*
		public Assignment getScenariosAssignment_3_1() { return cScenariosAssignment_3_1; }
		
		//ClientScenario
		public RuleCall getScenariosClientScenarioParserRuleCall_3_1_0() { return cScenariosClientScenarioParserRuleCall_3_1_0; }
	}
	public class HttpClientAceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientAce");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAsyncAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAsyncAsyncKeyword_0_0 = (Keyword)cAsyncAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInputAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cInputInputParserRuleCall_2_1_0 = (RuleCall)cInputAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cInputAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cInputInputParserRuleCall_2_2_1_0 = (RuleCall)cInputAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAppStateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cStateElementsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cStateElementsClientAttributeCrossReference_3_2_0 = (CrossReference)cStateElementsAssignment_3_2.eContents().get(0);
		private final RuleCall cStateElementsClientAttributeQualifiedNameParserRuleCall_3_2_0_1 = (RuleCall)cStateElementsClientAttributeCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cStateElementsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cStateElementsClientAttributeCrossReference_3_3_1_0 = (CrossReference)cStateElementsAssignment_3_3_1.eContents().get(0);
		private final RuleCall cStateElementsClientAttributeQualifiedNameParserRuleCall_3_3_1_0_1 = (RuleCall)cStateElementsClientAttributeCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCallKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cServerCallAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cServerCallHttpServerAceCrossReference_4_1_0 = (CrossReference)cServerCallAssignment_4_1.eContents().get(0);
		private final RuleCall cServerCallHttpServerAceQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cServerCallHttpServerAceCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLoadingFlagKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLoadingFlagAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cLoadingFlagClientAttributeCrossReference_5_1_0 = (CrossReference)cLoadingFlagAssignment_5_1.eContents().get(0);
		private final RuleCall cLoadingFlagClientAttributeQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cLoadingFlagClientAttributeCrossReference_5_1_0.eContents().get(1);
		private final Assignment cOutcomesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOutcomesHttpClientOutcomeParserRuleCall_6_0 = (RuleCall)cOutcomesAssignment_6.eContents().get(0);
		
		//HttpClientAce:
		//	async?='async'? name=ID ('(' input+=Input (',' input+=Input)* ')')? ('appState' '('
		//	stateElements+=[ClientAttribute|QualifiedName] (',' stateElements+=[ClientAttribute|QualifiedName])* ')')? ('call'
		//	serverCall=[HttpServerAce|QualifiedName])? ('loadingFlag' loadingFlag=[ClientAttribute|QualifiedName])?
		//	outcomes+=HttpClientOutcome*;
		@Override public ParserRule getRule() { return rule; }
		
		//async?='async'? name=ID ('(' input+=Input (',' input+=Input)* ')')? ('appState' '('
		//stateElements+=[ClientAttribute|QualifiedName] (',' stateElements+=[ClientAttribute|QualifiedName])* ')')? ('call'
		//serverCall=[HttpServerAce|QualifiedName])? ('loadingFlag' loadingFlag=[ClientAttribute|QualifiedName])?
		//outcomes+=HttpClientOutcome*
		public Group getGroup() { return cGroup; }
		
		//async?='async'?
		public Assignment getAsyncAssignment_0() { return cAsyncAssignment_0; }
		
		//'async'
		public Keyword getAsyncAsyncKeyword_0_0() { return cAsyncAsyncKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('(' input+=Input (',' input+=Input)* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//input+=Input
		public Assignment getInputAssignment_2_1() { return cInputAssignment_2_1; }
		
		//Input
		public RuleCall getInputInputParserRuleCall_2_1_0() { return cInputInputParserRuleCall_2_1_0; }
		
		//(',' input+=Input)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//input+=Input
		public Assignment getInputAssignment_2_2_1() { return cInputAssignment_2_2_1; }
		
		//Input
		public RuleCall getInputInputParserRuleCall_2_2_1_0() { return cInputInputParserRuleCall_2_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//('appState' '(' stateElements+=[ClientAttribute|QualifiedName] (',' stateElements+=[ClientAttribute|QualifiedName])*
		//')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'appState'
		public Keyword getAppStateKeyword_3_0() { return cAppStateKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//stateElements+=[ClientAttribute|QualifiedName]
		public Assignment getStateElementsAssignment_3_2() { return cStateElementsAssignment_3_2; }
		
		//[ClientAttribute|QualifiedName]
		public CrossReference getStateElementsClientAttributeCrossReference_3_2_0() { return cStateElementsClientAttributeCrossReference_3_2_0; }
		
		//QualifiedName
		public RuleCall getStateElementsClientAttributeQualifiedNameParserRuleCall_3_2_0_1() { return cStateElementsClientAttributeQualifiedNameParserRuleCall_3_2_0_1; }
		
		//(',' stateElements+=[ClientAttribute|QualifiedName])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//stateElements+=[ClientAttribute|QualifiedName]
		public Assignment getStateElementsAssignment_3_3_1() { return cStateElementsAssignment_3_3_1; }
		
		//[ClientAttribute|QualifiedName]
		public CrossReference getStateElementsClientAttributeCrossReference_3_3_1_0() { return cStateElementsClientAttributeCrossReference_3_3_1_0; }
		
		//QualifiedName
		public RuleCall getStateElementsClientAttributeQualifiedNameParserRuleCall_3_3_1_0_1() { return cStateElementsClientAttributeQualifiedNameParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//('call' serverCall=[HttpServerAce|QualifiedName])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'call'
		public Keyword getCallKeyword_4_0() { return cCallKeyword_4_0; }
		
		//serverCall=[HttpServerAce|QualifiedName]
		public Assignment getServerCallAssignment_4_1() { return cServerCallAssignment_4_1; }
		
		//[HttpServerAce|QualifiedName]
		public CrossReference getServerCallHttpServerAceCrossReference_4_1_0() { return cServerCallHttpServerAceCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getServerCallHttpServerAceQualifiedNameParserRuleCall_4_1_0_1() { return cServerCallHttpServerAceQualifiedNameParserRuleCall_4_1_0_1; }
		
		//('loadingFlag' loadingFlag=[ClientAttribute|QualifiedName])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'loadingFlag'
		public Keyword getLoadingFlagKeyword_5_0() { return cLoadingFlagKeyword_5_0; }
		
		//loadingFlag=[ClientAttribute|QualifiedName]
		public Assignment getLoadingFlagAssignment_5_1() { return cLoadingFlagAssignment_5_1; }
		
		//[ClientAttribute|QualifiedName]
		public CrossReference getLoadingFlagClientAttributeCrossReference_5_1_0() { return cLoadingFlagClientAttributeCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getLoadingFlagClientAttributeQualifiedNameParserRuleCall_5_1_0_1() { return cLoadingFlagClientAttributeQualifiedNameParserRuleCall_5_1_0_1; }
		
		//outcomes+=HttpClientOutcome*
		public Assignment getOutcomesAssignment_6() { return cOutcomesAssignment_6; }
		
		//HttpClientOutcome
		public RuleCall getOutcomesHttpClientOutcomeParserRuleCall_6_0() { return cOutcomesHttpClientOutcomeParserRuleCall_6_0; }
	}
	public class InputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Input");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Input:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class HttpClientOutcomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientOutcome");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cListenersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cListenersHttpClientStateFunctionParserRuleCall_2_1_0 = (RuleCall)cListenersAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTriggersKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cAceOperationsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cAceOperationsHttpClientAceCrossReference_3_2_0 = (CrossReference)cAceOperationsAssignment_3_2.eContents().get(0);
		private final RuleCall cAceOperationsHttpClientAceQualifiedNameParserRuleCall_3_2_0_1 = (RuleCall)cAceOperationsHttpClientAceCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//HttpClientOutcome:
		//	'on' name=ID ('(' listeners+=HttpClientStateFunction* ')')? ('triggers' '('
		//	aceOperations+=[HttpClientAce|QualifiedName]* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'on' name=ID ('(' listeners+=HttpClientStateFunction* ')')? ('triggers' '('
		//aceOperations+=[HttpClientAce|QualifiedName]* ')')?
		public Group getGroup() { return cGroup; }
		
		//'on'
		public Keyword getOnKeyword_0() { return cOnKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('(' listeners+=HttpClientStateFunction* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//listeners+=HttpClientStateFunction*
		public Assignment getListenersAssignment_2_1() { return cListenersAssignment_2_1; }
		
		//HttpClientStateFunction
		public RuleCall getListenersHttpClientStateFunctionParserRuleCall_2_1_0() { return cListenersHttpClientStateFunctionParserRuleCall_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
		
		//('triggers' '(' aceOperations+=[HttpClientAce|QualifiedName]* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'triggers'
		public Keyword getTriggersKeyword_3_0() { return cTriggersKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//aceOperations+=[HttpClientAce|QualifiedName]*
		public Assignment getAceOperationsAssignment_3_2() { return cAceOperationsAssignment_3_2; }
		
		//[HttpClientAce|QualifiedName]
		public CrossReference getAceOperationsHttpClientAceCrossReference_3_2_0() { return cAceOperationsHttpClientAceCrossReference_3_2_0; }
		
		//QualifiedName
		public RuleCall getAceOperationsHttpClientAceQualifiedNameParserRuleCall_3_2_0_1() { return cAceOperationsHttpClientAceQualifiedNameParserRuleCall_3_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}
	public class HttpClientStateFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientStateFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStateFunctionTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStateFunctionTypeHttpClientStateFunctionTypeParserRuleCall_0_0 = (RuleCall)cStateFunctionTypeAssignment_0.eContents().get(0);
		private final Assignment cStateElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cStateElementClientAttributeCrossReference_1_0 = (CrossReference)cStateElementAssignment_1.eContents().get(0);
		private final RuleCall cStateElementClientAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cStateElementClientAttributeCrossReference_1_0.eContents().get(1);
		
		//HttpClientStateFunction:
		//	stateFunctionType=HttpClientStateFunctionType stateElement=[ClientAttribute|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//stateFunctionType=HttpClientStateFunctionType stateElement=[ClientAttribute|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//stateFunctionType=HttpClientStateFunctionType
		public Assignment getStateFunctionTypeAssignment_0() { return cStateFunctionTypeAssignment_0; }
		
		//HttpClientStateFunctionType
		public RuleCall getStateFunctionTypeHttpClientStateFunctionTypeParserRuleCall_0_0() { return cStateFunctionTypeHttpClientStateFunctionTypeParserRuleCall_0_0; }
		
		//stateElement=[ClientAttribute|QualifiedName]
		public Assignment getStateElementAssignment_1() { return cStateElementAssignment_1; }
		
		//[ClientAttribute|QualifiedName]
		public CrossReference getStateElementClientAttributeCrossReference_1_0() { return cStateElementClientAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getStateElementClientAttributeQualifiedNameParserRuleCall_1_0_1() { return cStateElementClientAttributeQualifiedNameParserRuleCall_1_0_1; }
	}
	public class HttpClientStateFunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientStateFunctionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMergeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cResetKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//HttpClientStateFunctionType:
		//	'set' | 'merge' | 'reset';
		@Override public ParserRule getRule() { return rule; }
		
		//'set' | 'merge' | 'reset'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'set'
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }
		
		//'merge'
		public Keyword getMergeKeyword_1() { return cMergeKeyword_1; }
		
		//'reset'
		public Keyword getResetKeyword_2() { return cResetKeyword_2; }
	}
	public class ClientAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNotNullAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNotNullNotNullKeyword_0_0 = (Keyword)cNotNullAssignment_0.eContents().get(0);
		private final Assignment cListAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cListListKeyword_1_0 = (Keyword)cListAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeTypeParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cServerModelKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cModelAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cModelModelCrossReference_4_1_0 = (CrossReference)cModelAssignment_4_1.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cModelModelCrossReference_4_1_0.eContents().get(1);
		private final Assignment cHashAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cHashLocationHashKeyword_5_0 = (Keyword)cHashAssignment_5.eContents().get(0);
		private final Assignment cStorageAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cStorageStorageKeyword_6_0 = (Keyword)cStorageAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cAttributesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cAttributesClientAttributeParserRuleCall_7_1_0 = (RuleCall)cAttributesAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//ClientAttribute:
		//	notNull?='NotNull'?
		//	list?='List'?
		//	type=Type?
		//	name=ID ('serverModel' model=[Model|QualifiedName])?
		//	hash?='location.hash'?
		//	storage?='storage'? ('{'
		//	attributes+=ClientAttribute*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//notNull?='NotNull'? list?='List'? type=Type? name=ID ('serverModel' model=[Model|QualifiedName])? hash?='location.hash'?
		//storage?='storage'? ('{' attributes+=ClientAttribute* '}')?
		public Group getGroup() { return cGroup; }
		
		//notNull?='NotNull'?
		public Assignment getNotNullAssignment_0() { return cNotNullAssignment_0; }
		
		//'NotNull'
		public Keyword getNotNullNotNullKeyword_0_0() { return cNotNullNotNullKeyword_0_0; }
		
		//list?='List'?
		public Assignment getListAssignment_1() { return cListAssignment_1; }
		
		//'List'
		public Keyword getListListKeyword_1_0() { return cListListKeyword_1_0; }
		
		//type=Type?
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//Type
		public RuleCall getTypeTypeParserRuleCall_2_0() { return cTypeTypeParserRuleCall_2_0; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//('serverModel' model=[Model|QualifiedName])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'serverModel'
		public Keyword getServerModelKeyword_4_0() { return cServerModelKeyword_4_0; }
		
		//model=[Model|QualifiedName]
		public Assignment getModelAssignment_4_1() { return cModelAssignment_4_1; }
		
		//[Model|QualifiedName]
		public CrossReference getModelModelCrossReference_4_1_0() { return cModelModelCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_4_1_0_1() { return cModelModelQualifiedNameParserRuleCall_4_1_0_1; }
		
		//hash?='location.hash'?
		public Assignment getHashAssignment_5() { return cHashAssignment_5; }
		
		//'location.hash'
		public Keyword getHashLocationHashKeyword_5_0() { return cHashLocationHashKeyword_5_0; }
		
		//storage?='storage'?
		public Assignment getStorageAssignment_6() { return cStorageAssignment_6; }
		
		//'storage'
		public Keyword getStorageStorageKeyword_6_0() { return cStorageStorageKeyword_6_0; }
		
		//('{' attributes+=ClientAttribute* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_0() { return cLeftCurlyBracketKeyword_7_0; }
		
		//attributes+=ClientAttribute*
		public Assignment getAttributesAssignment_7_1() { return cAttributesAssignment_7_1; }
		
		//ClientAttribute
		public RuleCall getAttributesClientAttributeParserRuleCall_7_1_0() { return cAttributesClientAttributeParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_2() { return cRightCurlyBracketKeyword_7_2; }
	}
	public class ClientScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientScenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cGIVENKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cGivenRefsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cGivenRefsClientScenarioCrossReference_1_1_0 = (CrossReference)cGivenRefsAssignment_1_1.eContents().get(0);
		private final RuleCall cGivenRefsClientScenarioQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cGivenRefsClientScenarioCrossReference_1_1_0.eContents().get(1);
		private final Keyword cWHENKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cWhenBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWhenBlockClientWhenBlockParserRuleCall_3_0 = (RuleCall)cWhenBlockAssignment_3.eContents().get(0);
		private final Keyword cTHENKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cThenBlockAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cThenBlockClientThenBlockParserRuleCall_5_0 = (RuleCall)cThenBlockAssignment_5.eContents().get(0);
		
		//ClientScenario:
		//	name=ID ('GIVEN' givenRefs+=[ClientScenario|QualifiedName]*)?
		//	'WHEN' whenBlock=ClientWhenBlock
		//	'THEN' thenBlock=ClientThenBlock;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('GIVEN' givenRefs+=[ClientScenario|QualifiedName]*)? 'WHEN' whenBlock=ClientWhenBlock 'THEN'
		//thenBlock=ClientThenBlock
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('GIVEN' givenRefs+=[ClientScenario|QualifiedName]*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'GIVEN'
		public Keyword getGIVENKeyword_1_0() { return cGIVENKeyword_1_0; }
		
		//givenRefs+=[ClientScenario|QualifiedName]*
		public Assignment getGivenRefsAssignment_1_1() { return cGivenRefsAssignment_1_1; }
		
		//[ClientScenario|QualifiedName]
		public CrossReference getGivenRefsClientScenarioCrossReference_1_1_0() { return cGivenRefsClientScenarioCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getGivenRefsClientScenarioQualifiedNameParserRuleCall_1_1_0_1() { return cGivenRefsClientScenarioQualifiedNameParserRuleCall_1_1_0_1; }
		
		//'WHEN'
		public Keyword getWHENKeyword_2() { return cWHENKeyword_2; }
		
		//whenBlock=ClientWhenBlock
		public Assignment getWhenBlockAssignment_3() { return cWhenBlockAssignment_3; }
		
		//ClientWhenBlock
		public RuleCall getWhenBlockClientWhenBlockParserRuleCall_3_0() { return cWhenBlockClientWhenBlockParserRuleCall_3_0; }
		
		//'THEN'
		public Keyword getTHENKeyword_4() { return cTHENKeyword_4; }
		
		//thenBlock=ClientThenBlock
		public Assignment getThenBlockAssignment_5() { return cThenBlockAssignment_5; }
		
		//ClientThenBlock
		public RuleCall getThenBlockClientThenBlockParserRuleCall_5_0() { return cThenBlockClientThenBlockParserRuleCall_5_0; }
	}
	public class ClientWhenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientWhenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cActionHttpClientAceCrossReference_0_0 = (CrossReference)cActionAssignment_0.eContents().get(0);
		private final RuleCall cActionHttpClientAceQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cActionHttpClientAceCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Assignment cInputValuesAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cInputValuesInputValueParserRuleCall_1_1_0_0 = (RuleCall)cInputValuesAssignment_1_1_0.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cInputValuesAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cInputValuesInputValueParserRuleCall_1_1_1_1_0 = (RuleCall)cInputValuesAssignment_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cWithKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cResponseKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cStatusCodeAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cStatusCodeINTTerminalRuleCall_2_2_0 = (RuleCall)cStatusCodeAssignment_2_2.eContents().get(0);
		private final Assignment cResponseAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cResponseJsonObjectParserRuleCall_2_3_0 = (RuleCall)cResponseAssignment_2_3.eContents().get(0);
		
		//ClientWhenBlock:
		//	action=[HttpClientAce|QualifiedName] ('(' (inputValues+=InputValue (',' inputValues+=InputValue)*)? ')')? ('with'
		//	'response'
		//	statusCode=INT
		//	response=JsonObject?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//action=[HttpClientAce|QualifiedName] ('(' (inputValues+=InputValue (',' inputValues+=InputValue)*)? ')')? ('with'
		//'response' statusCode=INT response=JsonObject?)?
		public Group getGroup() { return cGroup; }
		
		//action=[HttpClientAce|QualifiedName]
		public Assignment getActionAssignment_0() { return cActionAssignment_0; }
		
		//[HttpClientAce|QualifiedName]
		public CrossReference getActionHttpClientAceCrossReference_0_0() { return cActionHttpClientAceCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getActionHttpClientAceQualifiedNameParserRuleCall_0_0_1() { return cActionHttpClientAceQualifiedNameParserRuleCall_0_0_1; }
		
		//('(' (inputValues+=InputValue (',' inputValues+=InputValue)*)? ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//(inputValues+=InputValue (',' inputValues+=InputValue)*)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//inputValues+=InputValue
		public Assignment getInputValuesAssignment_1_1_0() { return cInputValuesAssignment_1_1_0; }
		
		//InputValue
		public RuleCall getInputValuesInputValueParserRuleCall_1_1_0_0() { return cInputValuesInputValueParserRuleCall_1_1_0_0; }
		
		//(',' inputValues+=InputValue)*
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_1_0() { return cCommaKeyword_1_1_1_0; }
		
		//inputValues+=InputValue
		public Assignment getInputValuesAssignment_1_1_1_1() { return cInputValuesAssignment_1_1_1_1; }
		
		//InputValue
		public RuleCall getInputValuesInputValueParserRuleCall_1_1_1_1_0() { return cInputValuesInputValueParserRuleCall_1_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
		
		//('with' 'response' statusCode=INT response=JsonObject?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'with'
		public Keyword getWithKeyword_2_0() { return cWithKeyword_2_0; }
		
		//'response'
		public Keyword getResponseKeyword_2_1() { return cResponseKeyword_2_1; }
		
		//statusCode=INT
		public Assignment getStatusCodeAssignment_2_2() { return cStatusCodeAssignment_2_2; }
		
		//INT
		public RuleCall getStatusCodeINTTerminalRuleCall_2_2_0() { return cStatusCodeINTTerminalRuleCall_2_2_0; }
		
		//response=JsonObject?
		public Assignment getResponseAssignment_2_3() { return cResponseAssignment_2_3; }
		
		//JsonObject
		public RuleCall getResponseJsonObjectParserRuleCall_2_3_0() { return cResponseJsonObjectParserRuleCall_2_3_0; }
	}
	public class InputValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.InputValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInputAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cInputInputCrossReference_0_0 = (CrossReference)cInputAssignment_0.eContents().get(0);
		private final RuleCall cInputInputQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cInputInputCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//InputValue:
		//	input=[Input|QualifiedName] ':' value=PrimitiveValue;
		@Override public ParserRule getRule() { return rule; }
		
		//input=[Input|QualifiedName] ':' value=PrimitiveValue
		public Group getGroup() { return cGroup; }
		
		//input=[Input|QualifiedName]
		public Assignment getInputAssignment_0() { return cInputAssignment_0; }
		
		//[Input|QualifiedName]
		public CrossReference getInputInputCrossReference_0_0() { return cInputInputCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getInputInputQualifiedNameParserRuleCall_0_0_1() { return cInputInputQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_2_0() { return cValuePrimitiveValueParserRuleCall_2_0; }
	}
	public class ClientThenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientThenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClientThenBlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cExpectedServerCallKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cServerCallAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cServerCallServerCallParserRuleCall_1_1_0 = (RuleCall)cServerCallAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExpectedStateKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStateVerificationsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStateVerificationsStateVerificationParserRuleCall_2_1_0 = (RuleCall)cStateVerificationsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTriggeredActionsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTriggeredActionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTriggeredActionTriggeredActionParserRuleCall_3_1_0 = (RuleCall)cTriggeredActionAssignment_3_1.eContents().get(0);
		
		//ClientThenBlock:
		//	{ClientThenBlock} ('expectedServerCall' serverCall=ServerCall)? ('expectedState'
		//	stateVerifications+=StateVerification*)? ('triggeredActions' triggeredAction+=TriggeredAction*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ClientThenBlock} ('expectedServerCall' serverCall=ServerCall)? ('expectedState'
		//stateVerifications+=StateVerification*)? ('triggeredActions' triggeredAction+=TriggeredAction*)?
		public Group getGroup() { return cGroup; }
		
		//{ClientThenBlock}
		public Action getClientThenBlockAction_0() { return cClientThenBlockAction_0; }
		
		//('expectedServerCall' serverCall=ServerCall)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'expectedServerCall'
		public Keyword getExpectedServerCallKeyword_1_0() { return cExpectedServerCallKeyword_1_0; }
		
		//serverCall=ServerCall
		public Assignment getServerCallAssignment_1_1() { return cServerCallAssignment_1_1; }
		
		//ServerCall
		public RuleCall getServerCallServerCallParserRuleCall_1_1_0() { return cServerCallServerCallParserRuleCall_1_1_0; }
		
		//('expectedState' stateVerifications+=StateVerification*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'expectedState'
		public Keyword getExpectedStateKeyword_2_0() { return cExpectedStateKeyword_2_0; }
		
		//stateVerifications+=StateVerification*
		public Assignment getStateVerificationsAssignment_2_1() { return cStateVerificationsAssignment_2_1; }
		
		//StateVerification
		public RuleCall getStateVerificationsStateVerificationParserRuleCall_2_1_0() { return cStateVerificationsStateVerificationParserRuleCall_2_1_0; }
		
		//('triggeredActions' triggeredAction+=TriggeredAction*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'triggeredActions'
		public Keyword getTriggeredActionsKeyword_3_0() { return cTriggeredActionsKeyword_3_0; }
		
		//triggeredAction+=TriggeredAction*
		public Assignment getTriggeredActionAssignment_3_1() { return cTriggeredActionAssignment_3_1; }
		
		//TriggeredAction
		public RuleCall getTriggeredActionTriggeredActionParserRuleCall_3_1_0() { return cTriggeredActionTriggeredActionParserRuleCall_3_1_0; }
	}
	public class ServerCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ServerCall");
		private final Assignment cJsonObjectAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cJsonObjectJsonObjectParserRuleCall_0 = (RuleCall)cJsonObjectAssignment.eContents().get(0);
		
		//ServerCall:
		//	jsonObject=JsonObject;
		@Override public ParserRule getRule() { return rule; }
		
		//jsonObject=JsonObject
		public Assignment getJsonObjectAssignment() { return cJsonObjectAssignment; }
		
		//JsonObject
		public RuleCall getJsonObjectJsonObjectParserRuleCall_0() { return cJsonObjectJsonObjectParserRuleCall_0; }
	}
	public class TriggeredActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.TriggeredAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cHttpClientAceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cHttpClientAceHttpClientAceCrossReference_0_0 = (CrossReference)cHttpClientAceAssignment_0.eContents().get(0);
		private final RuleCall cHttpClientAceHttpClientAceQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cHttpClientAceHttpClientAceCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInputValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInputValuesInputValueParserRuleCall_2_0 = (RuleCall)cInputValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInputValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInputValuesInputValueParserRuleCall_3_1_0 = (RuleCall)cInputValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TriggeredAction:
		//	httpClientAce=[HttpClientAce|QualifiedName] '(' inputValues+=InputValue (',' inputValues+=InputValue)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//httpClientAce=[HttpClientAce|QualifiedName] '(' inputValues+=InputValue (',' inputValues+=InputValue)* ')'
		public Group getGroup() { return cGroup; }
		
		//httpClientAce=[HttpClientAce|QualifiedName]
		public Assignment getHttpClientAceAssignment_0() { return cHttpClientAceAssignment_0; }
		
		//[HttpClientAce|QualifiedName]
		public CrossReference getHttpClientAceHttpClientAceCrossReference_0_0() { return cHttpClientAceHttpClientAceCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getHttpClientAceHttpClientAceQualifiedNameParserRuleCall_0_0_1() { return cHttpClientAceHttpClientAceQualifiedNameParserRuleCall_0_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//inputValues+=InputValue
		public Assignment getInputValuesAssignment_2() { return cInputValuesAssignment_2; }
		
		//InputValue
		public RuleCall getInputValuesInputValueParserRuleCall_2_0() { return cInputValuesInputValueParserRuleCall_2_0; }
		
		//(',' inputValues+=InputValue)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//inputValues+=InputValue
		public Assignment getInputValuesAssignment_3_1() { return cInputValuesAssignment_3_1; }
		
		//InputValue
		public RuleCall getInputValuesInputValueParserRuleCall_3_1_0() { return cInputValuesInputValueParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class StateVerificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.StateVerification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cStateRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cStateRefClientAttributeCrossReference_1_0 = (CrossReference)cStateRefAssignment_1.eContents().get(0);
		private final RuleCall cStateRefClientAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cStateRefClientAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cShouldBeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueJsonValueClientParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//StateVerification:
		//	name=ID stateRef=[ClientAttribute|QualifiedName] 'shouldBe' value=JsonValueClient;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID stateRef=[ClientAttribute|QualifiedName] 'shouldBe' value=JsonValueClient
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//stateRef=[ClientAttribute|QualifiedName]
		public Assignment getStateRefAssignment_1() { return cStateRefAssignment_1; }
		
		//[ClientAttribute|QualifiedName]
		public CrossReference getStateRefClientAttributeCrossReference_1_0() { return cStateRefClientAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getStateRefClientAttributeQualifiedNameParserRuleCall_1_0_1() { return cStateRefClientAttributeQualifiedNameParserRuleCall_1_0_1; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_2() { return cShouldBeKeyword_2; }
		
		//value=JsonValueClient
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//JsonValueClient
		public RuleCall getValueJsonValueClientParserRuleCall_3_0() { return cValueJsonValueClientParserRuleCall_3_0; }
	}
	public class JsonObjectClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonObjectClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonObjectClientAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMembersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMembersJsonMemberClientParserRuleCall_2_0 = (RuleCall)cMembersAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMembersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMembersJsonMemberClientParserRuleCall_3_1_0 = (RuleCall)cMembersAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonObjectClient:
		//	{JsonObjectClient} '{'
		//	members+=JsonMemberClient? (',' members+=JsonMemberClient)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonObjectClient} '{' members+=JsonMemberClient? (',' members+=JsonMemberClient)* '}'
		public Group getGroup() { return cGroup; }
		
		//{JsonObjectClient}
		public Action getJsonObjectClientAction_0() { return cJsonObjectClientAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//members+=JsonMemberClient?
		public Assignment getMembersAssignment_2() { return cMembersAssignment_2; }
		
		//JsonMemberClient
		public RuleCall getMembersJsonMemberClientParserRuleCall_2_0() { return cMembersJsonMemberClientParserRuleCall_2_0; }
		
		//(',' members+=JsonMemberClient)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//members+=JsonMemberClient
		public Assignment getMembersAssignment_3_1() { return cMembersAssignment_3_1; }
		
		//JsonMemberClient
		public RuleCall getMembersJsonMemberClientParserRuleCall_3_1_0() { return cMembersJsonMemberClientParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class JsonMemberClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonMemberClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeClientAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeClientAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeClientAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonValueClientParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonMemberClient:
		//	attribute=[ClientAttribute|QualifiedName] ':' value=JsonValueClient;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[ClientAttribute|QualifiedName] ':' value=JsonValueClient
		public Group getGroup() { return cGroup; }
		
		//attribute=[ClientAttribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[ClientAttribute|QualifiedName]
		public CrossReference getAttributeClientAttributeCrossReference_0_0() { return cAttributeClientAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeClientAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeClientAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=JsonValueClient
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//JsonValueClient
		public RuleCall getValueJsonValueClientParserRuleCall_2_0() { return cValueJsonValueClientParserRuleCall_2_0; }
	}
	public class JsonValueClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonValueClient");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJsonObjectClientParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJsonArrayClientParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cNullTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLongTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cJsonDateTimeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//JsonValueClient:
		//	JsonObjectClient | StringType | JsonArrayClient | BooleanType | NullType | LongType | JsonDateTime;
		@Override public ParserRule getRule() { return rule; }
		
		//JsonObjectClient | StringType | JsonArrayClient | BooleanType | NullType | LongType | JsonDateTime
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JsonObjectClient
		public RuleCall getJsonObjectClientParserRuleCall_0() { return cJsonObjectClientParserRuleCall_0; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_1() { return cStringTypeParserRuleCall_1; }
		
		//JsonArrayClient
		public RuleCall getJsonArrayClientParserRuleCall_2() { return cJsonArrayClientParserRuleCall_2; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_3() { return cBooleanTypeParserRuleCall_3; }
		
		//NullType
		public RuleCall getNullTypeParserRuleCall_4() { return cNullTypeParserRuleCall_4; }
		
		//LongType
		public RuleCall getLongTypeParserRuleCall_5() { return cLongTypeParserRuleCall_5; }
		
		//JsonDateTime
		public RuleCall getJsonDateTimeParserRuleCall_6() { return cJsonDateTimeParserRuleCall_6; }
	}
	public class JsonArrayClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonArrayClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonArrayClientAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesJsonValueClientParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesJsonValueClientParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonArrayClient:
		//	{JsonArrayClient} '[' values+=JsonValueClient? (',' values+=JsonValueClient)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonArrayClient} '[' values+=JsonValueClient? (',' values+=JsonValueClient)* ']'
		public Group getGroup() { return cGroup; }
		
		//{JsonArrayClient}
		public Action getJsonArrayClientAction_0() { return cJsonArrayClientAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//values+=JsonValueClient?
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }
		
		//JsonValueClient
		public RuleCall getValuesJsonValueClientParserRuleCall_2_0() { return cValuesJsonValueClientParserRuleCall_2_0; }
		
		//(',' values+=JsonValueClient)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//values+=JsonValueClient
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }
		
		//JsonValueClient
		public RuleCall getValuesJsonValueClientParserRuleCall_3_1_0() { return cValuesJsonValueClientParserRuleCall_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class HttpServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLanguageAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cLanguageJavaKeyword_0_0 = (Keyword)cLanguageAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeDropwizardKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Assignment cPersistenceLayerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cPersistenceLayerJDBI3Keyword_2_0 = (Keyword)cPersistenceLayerAssignment_2.eContents().get(0);
		private final Assignment cMigrationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cMigrationsLiquibaseKeyword_3_0 = (Keyword)cMigrationsAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameQualifiedNameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAuthorizationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAuthUserAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAuthUserAuthUserParserRuleCall_5_1_0 = (RuleCall)cAuthUserAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cImportKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAuthUserRefAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cAuthUserRefAuthUserCrossReference_6_1_0 = (CrossReference)cAuthUserRefAssignment_6_1.eContents().get(0);
		private final RuleCall cAuthUserRefAuthUserQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cAuthUserRefAuthUserCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cACEKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cAceOperationsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cAceOperationsHttpServerAceParserRuleCall_7_1_0 = (RuleCall)cAceOperationsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cViewsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cViewsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cViewsHttpServerViewParserRuleCall_8_1_0 = (RuleCall)cViewsAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cModelsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cModelsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cModelsModelParserRuleCall_9_1_0 = (RuleCall)cModelsAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cScenariosKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cScenariosAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cScenariosScenarioParserRuleCall_10_1_0 = (RuleCall)cScenariosAssignment_10_1.eContents().get(0);
		
		//HttpServer:
		//	language='Java' type='Dropwizard'?
		//	persistenceLayer='JDBI3'?
		//	migrations='Liquibase'?
		//	name=QualifiedName ('Authorization' authUser=AuthUser)? ('import' authUserRef=[AuthUser|QualifiedName])? ('ACE'
		//	aceOperations+=HttpServerAce*)? ('views' views+=HttpServerView*)? ('models' models+=Model*)? ('scenarios'
		//	scenarios+=Scenario*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//language='Java' type='Dropwizard'? persistenceLayer='JDBI3'? migrations='Liquibase'? name=QualifiedName ('Authorization'
		//authUser=AuthUser)? ('import' authUserRef=[AuthUser|QualifiedName])? ('ACE' aceOperations+=HttpServerAce*)? ('views'
		//views+=HttpServerView*)? ('models' models+=Model*)? ('scenarios' scenarios+=Scenario*)?
		public Group getGroup() { return cGroup; }
		
		//language='Java'
		public Assignment getLanguageAssignment_0() { return cLanguageAssignment_0; }
		
		//'Java'
		public Keyword getLanguageJavaKeyword_0_0() { return cLanguageJavaKeyword_0_0; }
		
		//type='Dropwizard'?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//'Dropwizard'
		public Keyword getTypeDropwizardKeyword_1_0() { return cTypeDropwizardKeyword_1_0; }
		
		//persistenceLayer='JDBI3'?
		public Assignment getPersistenceLayerAssignment_2() { return cPersistenceLayerAssignment_2; }
		
		//'JDBI3'
		public Keyword getPersistenceLayerJDBI3Keyword_2_0() { return cPersistenceLayerJDBI3Keyword_2_0; }
		
		//migrations='Liquibase'?
		public Assignment getMigrationsAssignment_3() { return cMigrationsAssignment_3; }
		
		//'Liquibase'
		public Keyword getMigrationsLiquibaseKeyword_3_0() { return cMigrationsLiquibaseKeyword_3_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_4_0() { return cNameQualifiedNameParserRuleCall_4_0; }
		
		//('Authorization' authUser=AuthUser)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Authorization'
		public Keyword getAuthorizationKeyword_5_0() { return cAuthorizationKeyword_5_0; }
		
		//authUser=AuthUser
		public Assignment getAuthUserAssignment_5_1() { return cAuthUserAssignment_5_1; }
		
		//AuthUser
		public RuleCall getAuthUserAuthUserParserRuleCall_5_1_0() { return cAuthUserAuthUserParserRuleCall_5_1_0; }
		
		//('import' authUserRef=[AuthUser|QualifiedName])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'import'
		public Keyword getImportKeyword_6_0() { return cImportKeyword_6_0; }
		
		//authUserRef=[AuthUser|QualifiedName]
		public Assignment getAuthUserRefAssignment_6_1() { return cAuthUserRefAssignment_6_1; }
		
		//[AuthUser|QualifiedName]
		public CrossReference getAuthUserRefAuthUserCrossReference_6_1_0() { return cAuthUserRefAuthUserCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getAuthUserRefAuthUserQualifiedNameParserRuleCall_6_1_0_1() { return cAuthUserRefAuthUserQualifiedNameParserRuleCall_6_1_0_1; }
		
		//('ACE' aceOperations+=HttpServerAce*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'ACE'
		public Keyword getACEKeyword_7_0() { return cACEKeyword_7_0; }
		
		//aceOperations+=HttpServerAce*
		public Assignment getAceOperationsAssignment_7_1() { return cAceOperationsAssignment_7_1; }
		
		//HttpServerAce
		public RuleCall getAceOperationsHttpServerAceParserRuleCall_7_1_0() { return cAceOperationsHttpServerAceParserRuleCall_7_1_0; }
		
		//('views' views+=HttpServerView*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'views'
		public Keyword getViewsKeyword_8_0() { return cViewsKeyword_8_0; }
		
		//views+=HttpServerView*
		public Assignment getViewsAssignment_8_1() { return cViewsAssignment_8_1; }
		
		//HttpServerView
		public RuleCall getViewsHttpServerViewParserRuleCall_8_1_0() { return cViewsHttpServerViewParserRuleCall_8_1_0; }
		
		//('models' models+=Model*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'models'
		public Keyword getModelsKeyword_9_0() { return cModelsKeyword_9_0; }
		
		//models+=Model*
		public Assignment getModelsAssignment_9_1() { return cModelsAssignment_9_1; }
		
		//Model
		public RuleCall getModelsModelParserRuleCall_9_1_0() { return cModelsModelParserRuleCall_9_1_0; }
		
		//('scenarios' scenarios+=Scenario*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'scenarios'
		public Keyword getScenariosKeyword_10_0() { return cScenariosKeyword_10_0; }
		
		//scenarios+=Scenario*
		public Assignment getScenariosAssignment_10_1() { return cScenariosAssignment_10_1; }
		
		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_10_1_0() { return cScenariosScenarioParserRuleCall_10_1_0; }
	}
	public class HttpServerAceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerAce");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHttpServerAceWriteParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHttpServerAceReadParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//HttpServerAce:
		//	HttpServerAceWrite | HttpServerAceRead;
		@Override public ParserRule getRule() { return rule; }
		
		//HttpServerAceWrite | HttpServerAceRead
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//HttpServerAceWrite
		public RuleCall getHttpServerAceWriteParserRuleCall_0() { return cHttpServerAceWriteParserRuleCall_0; }
		
		//HttpServerAceRead
		public RuleCall getHttpServerAceReadParserRuleCall_1() { return cHttpServerAceReadParserRuleCall_1; }
	}
	public class HttpServerAceWriteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerAceWrite");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProxyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cProxyProxyKeyword_0_0 = (Keyword)cProxyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cModelModelCrossReference_3_0 = (CrossReference)cModelAssignment_3.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cModelModelCrossReference_3_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeWriteFunctionTypeParserRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Assignment cUrlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUrlSTRINGTerminalRuleCall_6_0 = (RuleCall)cUrlAssignment_6.eContents().get(0);
		private final Assignment cAuthorizeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cAuthorizeAuthorizeKeyword_7_0 = (Keyword)cAuthorizeAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPathParamsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPathParamsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPathParamsAttributeParamRefParserRuleCall_8_1_0 = (RuleCall)cPathParamsAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cQueryParamsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cQueryParamsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cQueryParamsAttributeParamRefParserRuleCall_9_1_0 = (RuleCall)cQueryParamsAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPayloadKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cPayloadAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cPayloadAttributeParamRefParserRuleCall_10_1_0 = (RuleCall)cPayloadAssignment_10_1.eContents().get(0);
		private final Assignment cOutcomesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOutcomesHttpServerOutcomeParserRuleCall_11_0 = (RuleCall)cOutcomesAssignment_11.eContents().get(0);
		
		//HttpServerAceWrite:
		//	proxy?='proxy'? name=ID '<' model=[Model|QualifiedName] '>'
		//	type=WriteFunctionType
		//	url=STRING
		//	authorize?='authorize'? ('pathParams' pathParams+=AttributeParamRef*)? ('queryParams'
		//	queryParams+=AttributeParamRef*)? ('payload' payload+=AttributeParamRef*)?
		//	outcomes+=HttpServerOutcome*;
		@Override public ParserRule getRule() { return rule; }
		
		//proxy?='proxy'? name=ID '<' model=[Model|QualifiedName] '>' type=WriteFunctionType url=STRING authorize?='authorize'?
		//('pathParams' pathParams+=AttributeParamRef*)? ('queryParams' queryParams+=AttributeParamRef*)? ('payload'
		//payload+=AttributeParamRef*)? outcomes+=HttpServerOutcome*
		public Group getGroup() { return cGroup; }
		
		//proxy?='proxy'?
		public Assignment getProxyAssignment_0() { return cProxyAssignment_0; }
		
		//'proxy'
		public Keyword getProxyProxyKeyword_0_0() { return cProxyProxyKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//model=[Model|QualifiedName]
		public Assignment getModelAssignment_3() { return cModelAssignment_3; }
		
		//[Model|QualifiedName]
		public CrossReference getModelModelCrossReference_3_0() { return cModelModelCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_3_0_1() { return cModelModelQualifiedNameParserRuleCall_3_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4() { return cGreaterThanSignKeyword_4; }
		
		//type=WriteFunctionType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//WriteFunctionType
		public RuleCall getTypeWriteFunctionTypeParserRuleCall_5_0() { return cTypeWriteFunctionTypeParserRuleCall_5_0; }
		
		//url=STRING
		public Assignment getUrlAssignment_6() { return cUrlAssignment_6; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_6_0() { return cUrlSTRINGTerminalRuleCall_6_0; }
		
		//authorize?='authorize'?
		public Assignment getAuthorizeAssignment_7() { return cAuthorizeAssignment_7; }
		
		//'authorize'
		public Keyword getAuthorizeAuthorizeKeyword_7_0() { return cAuthorizeAuthorizeKeyword_7_0; }
		
		//('pathParams' pathParams+=AttributeParamRef*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'pathParams'
		public Keyword getPathParamsKeyword_8_0() { return cPathParamsKeyword_8_0; }
		
		//pathParams+=AttributeParamRef*
		public Assignment getPathParamsAssignment_8_1() { return cPathParamsAssignment_8_1; }
		
		//AttributeParamRef
		public RuleCall getPathParamsAttributeParamRefParserRuleCall_8_1_0() { return cPathParamsAttributeParamRefParserRuleCall_8_1_0; }
		
		//('queryParams' queryParams+=AttributeParamRef*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'queryParams'
		public Keyword getQueryParamsKeyword_9_0() { return cQueryParamsKeyword_9_0; }
		
		//queryParams+=AttributeParamRef*
		public Assignment getQueryParamsAssignment_9_1() { return cQueryParamsAssignment_9_1; }
		
		//AttributeParamRef
		public RuleCall getQueryParamsAttributeParamRefParserRuleCall_9_1_0() { return cQueryParamsAttributeParamRefParserRuleCall_9_1_0; }
		
		//('payload' payload+=AttributeParamRef*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'payload'
		public Keyword getPayloadKeyword_10_0() { return cPayloadKeyword_10_0; }
		
		//payload+=AttributeParamRef*
		public Assignment getPayloadAssignment_10_1() { return cPayloadAssignment_10_1; }
		
		//AttributeParamRef
		public RuleCall getPayloadAttributeParamRefParserRuleCall_10_1_0() { return cPayloadAttributeParamRefParserRuleCall_10_1_0; }
		
		//outcomes+=HttpServerOutcome*
		public Assignment getOutcomesAssignment_11() { return cOutcomesAssignment_11; }
		
		//HttpServerOutcome
		public RuleCall getOutcomesHttpServerOutcomeParserRuleCall_11_0() { return cOutcomesHttpServerOutcomeParserRuleCall_11_0; }
	}
	public class HttpServerOutcomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerOutcome");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cListenersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cListenersHttpServerViewFunctionCrossReference_2_1_0 = (CrossReference)cListenersAssignment_2_1.eContents().get(0);
		private final RuleCall cListenersHttpServerViewFunctionQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cListenersHttpServerViewFunctionCrossReference_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//HttpServerOutcome:
		//	'on' name=ID ('(' listeners+=[HttpServerViewFunction|QualifiedName]* ')')*;
		@Override public ParserRule getRule() { return rule; }
		
		//'on' name=ID ('(' listeners+=[HttpServerViewFunction|QualifiedName]* ')')*
		public Group getGroup() { return cGroup; }
		
		//'on'
		public Keyword getOnKeyword_0() { return cOnKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('(' listeners+=[HttpServerViewFunction|QualifiedName]* ')')*
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//listeners+=[HttpServerViewFunction|QualifiedName]*
		public Assignment getListenersAssignment_2_1() { return cListenersAssignment_2_1; }
		
		//[HttpServerViewFunction|QualifiedName]
		public CrossReference getListenersHttpServerViewFunctionCrossReference_2_1_0() { return cListenersHttpServerViewFunctionCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getListenersHttpServerViewFunctionQualifiedNameParserRuleCall_2_1_0_1() { return cListenersHttpServerViewFunctionQualifiedNameParserRuleCall_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	public class HttpServerAceReadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerAceRead");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProxyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cProxyProxyKeyword_0_0 = (Keyword)cProxyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cModelModelCrossReference_3_0 = (CrossReference)cModelAssignment_3.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cModelModelCrossReference_3_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeReadFunctionTypeParserRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Assignment cUrlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUrlSTRINGTerminalRuleCall_6_0 = (RuleCall)cUrlAssignment_6.eContents().get(0);
		private final Assignment cAuthorizeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cAuthorizeAuthorizeKeyword_7_0 = (Keyword)cAuthorizeAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPathParamsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPathParamsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPathParamsAttributeParamRefParserRuleCall_8_1_0 = (RuleCall)cPathParamsAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cQueryParamsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cQueryParamsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cQueryParamsAttributeParamRefParserRuleCall_9_1_0 = (RuleCall)cQueryParamsAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPayloadKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cPayloadAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cPayloadAttributeParamRefParserRuleCall_10_1_0 = (RuleCall)cPayloadAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cResponseKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cResponseAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cResponseAttributeCrossReference_11_1_0 = (CrossReference)cResponseAssignment_11_1.eContents().get(0);
		private final RuleCall cResponseAttributeQualifiedNameParserRuleCall_11_1_0_1 = (RuleCall)cResponseAttributeCrossReference_11_1_0.eContents().get(1);
		
		//HttpServerAceRead:
		//	proxy?='proxy'? name=ID '<' model=[Model|QualifiedName] '>'
		//	type=ReadFunctionType
		//	url=STRING
		//	authorize?='authorize'? ('pathParams' pathParams+=AttributeParamRef*)? ('queryParams'
		//	queryParams+=AttributeParamRef*)? ('payload' payload+=AttributeParamRef*)? ('response'
		//	response+=[Attribute|QualifiedName]*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//proxy?='proxy'? name=ID '<' model=[Model|QualifiedName] '>' type=ReadFunctionType url=STRING authorize?='authorize'?
		//('pathParams' pathParams+=AttributeParamRef*)? ('queryParams' queryParams+=AttributeParamRef*)? ('payload'
		//payload+=AttributeParamRef*)? ('response' response+=[Attribute|QualifiedName]*)?
		public Group getGroup() { return cGroup; }
		
		//proxy?='proxy'?
		public Assignment getProxyAssignment_0() { return cProxyAssignment_0; }
		
		//'proxy'
		public Keyword getProxyProxyKeyword_0_0() { return cProxyProxyKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }
		
		//model=[Model|QualifiedName]
		public Assignment getModelAssignment_3() { return cModelAssignment_3; }
		
		//[Model|QualifiedName]
		public CrossReference getModelModelCrossReference_3_0() { return cModelModelCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_3_0_1() { return cModelModelQualifiedNameParserRuleCall_3_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4() { return cGreaterThanSignKeyword_4; }
		
		//type=ReadFunctionType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//ReadFunctionType
		public RuleCall getTypeReadFunctionTypeParserRuleCall_5_0() { return cTypeReadFunctionTypeParserRuleCall_5_0; }
		
		//url=STRING
		public Assignment getUrlAssignment_6() { return cUrlAssignment_6; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_6_0() { return cUrlSTRINGTerminalRuleCall_6_0; }
		
		//authorize?='authorize'?
		public Assignment getAuthorizeAssignment_7() { return cAuthorizeAssignment_7; }
		
		//'authorize'
		public Keyword getAuthorizeAuthorizeKeyword_7_0() { return cAuthorizeAuthorizeKeyword_7_0; }
		
		//('pathParams' pathParams+=AttributeParamRef*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'pathParams'
		public Keyword getPathParamsKeyword_8_0() { return cPathParamsKeyword_8_0; }
		
		//pathParams+=AttributeParamRef*
		public Assignment getPathParamsAssignment_8_1() { return cPathParamsAssignment_8_1; }
		
		//AttributeParamRef
		public RuleCall getPathParamsAttributeParamRefParserRuleCall_8_1_0() { return cPathParamsAttributeParamRefParserRuleCall_8_1_0; }
		
		//('queryParams' queryParams+=AttributeParamRef*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'queryParams'
		public Keyword getQueryParamsKeyword_9_0() { return cQueryParamsKeyword_9_0; }
		
		//queryParams+=AttributeParamRef*
		public Assignment getQueryParamsAssignment_9_1() { return cQueryParamsAssignment_9_1; }
		
		//AttributeParamRef
		public RuleCall getQueryParamsAttributeParamRefParserRuleCall_9_1_0() { return cQueryParamsAttributeParamRefParserRuleCall_9_1_0; }
		
		//('payload' payload+=AttributeParamRef*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'payload'
		public Keyword getPayloadKeyword_10_0() { return cPayloadKeyword_10_0; }
		
		//payload+=AttributeParamRef*
		public Assignment getPayloadAssignment_10_1() { return cPayloadAssignment_10_1; }
		
		//AttributeParamRef
		public RuleCall getPayloadAttributeParamRefParserRuleCall_10_1_0() { return cPayloadAttributeParamRefParserRuleCall_10_1_0; }
		
		//('response' response+=[Attribute|QualifiedName]*)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'response'
		public Keyword getResponseKeyword_11_0() { return cResponseKeyword_11_0; }
		
		//response+=[Attribute|QualifiedName]*
		public Assignment getResponseAssignment_11_1() { return cResponseAssignment_11_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getResponseAttributeCrossReference_11_1_0() { return cResponseAttributeCrossReference_11_1_0; }
		
		//QualifiedName
		public RuleCall getResponseAttributeQualifiedNameParserRuleCall_11_1_0_1() { return cResponseAttributeQualifiedNameParserRuleCall_11_1_0_1; }
	}
	public class AttributeParamRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.AttributeParamRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNotNullAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNotNullNotNullKeyword_0_0 = (Keyword)cNotNullAssignment_0.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_1_0.eContents().get(1);
		
		//AttributeParamRef:
		//	notNull?='NotNull'? attribute=[Attribute|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//notNull?='NotNull'? attribute=[Attribute|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//notNull?='NotNull'?
		public Assignment getNotNullAssignment_0() { return cNotNullAssignment_0; }
		
		//'NotNull'
		public Keyword getNotNullNotNullKeyword_0_0() { return cNotNullNotNullKeyword_0_0; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_1_0() { return cAttributeAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_1_0_1; }
	}
	public class HttpServerViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRenderFunctionsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRenderFunctionsHttpServerViewFunctionParserRuleCall_1_1_0 = (RuleCall)cRenderFunctionsAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//HttpServerView:
		//	name=ID ('{'
		//	renderFunctions+=HttpServerViewFunction*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('{' renderFunctions+=HttpServerViewFunction* '}')?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('{' renderFunctions+=HttpServerViewFunction* '}')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//renderFunctions+=HttpServerViewFunction*
		public Assignment getRenderFunctionsAssignment_1_1() { return cRenderFunctionsAssignment_1_1; }
		
		//HttpServerViewFunction
		public RuleCall getRenderFunctionsHttpServerViewFunctionParserRuleCall_1_1_0() { return cRenderFunctionsHttpServerViewFunctionParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class HttpServerViewFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerViewFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cModelModelCrossReference_2_0 = (CrossReference)cModelAssignment_2.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cModelModelCrossReference_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//HttpServerViewFunction:
		//	name=ID '(' model=[Model|QualifiedName] ')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '(' model=[Model|QualifiedName] ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//model=[Model|QualifiedName]
		public Assignment getModelAssignment_2() { return cModelAssignment_2; }
		
		//[Model|QualifiedName]
		public CrossReference getModelModelCrossReference_2_0() { return cModelModelCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_2_0_1() { return cModelModelQualifiedNameParserRuleCall_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class AuthUserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.AuthUser");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAttributesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_1_1_0 = (RuleCall)cAttributesAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//AuthUser:
		//	name=ID ('{'
		//	attributes+=Attribute*
		//	'}');
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('{' attributes+=Attribute* '}')
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('{' attributes+=Attribute* '}')
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_1_1() { return cAttributesAssignment_1_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_1_1_0() { return cAttributesAttributeParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPersistentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPersistentPersistentKeyword_0_0 = (Keyword)cPersistentAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperModelsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperModelsModelCrossReference_2_1_0 = (CrossReference)cSuperModelsAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperModelsModelQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cSuperModelsModelCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cSuperModelsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cSuperModelsModelCrossReference_2_2_1_0 = (CrossReference)cSuperModelsAssignment_2_2_1.eContents().get(0);
		private final RuleCall cSuperModelsModelQualifiedNameParserRuleCall_2_2_1_0_1 = (RuleCall)cSuperModelsModelCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_3_1_0 = (RuleCall)cAttributesAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//Model:
		//	persistent?='persistent'? name=ID ('extends' superModels+=[Model|QualifiedName] (','
		//	superModels+=[Model|QualifiedName])*)? ('{'
		//	attributes+=Attribute*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//persistent?='persistent'? name=ID ('extends' superModels+=[Model|QualifiedName] (','
		//superModels+=[Model|QualifiedName])*)? ('{' attributes+=Attribute* '}')?
		public Group getGroup() { return cGroup; }
		
		//persistent?='persistent'?
		public Assignment getPersistentAssignment_0() { return cPersistentAssignment_0; }
		
		//'persistent'
		public Keyword getPersistentPersistentKeyword_0_0() { return cPersistentPersistentKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superModels+=[Model|QualifiedName] (',' superModels+=[Model|QualifiedName])*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superModels+=[Model|QualifiedName]
		public Assignment getSuperModelsAssignment_2_1() { return cSuperModelsAssignment_2_1; }
		
		//[Model|QualifiedName]
		public CrossReference getSuperModelsModelCrossReference_2_1_0() { return cSuperModelsModelCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperModelsModelQualifiedNameParserRuleCall_2_1_0_1() { return cSuperModelsModelQualifiedNameParserRuleCall_2_1_0_1; }
		
		//(',' superModels+=[Model|QualifiedName])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//superModels+=[Model|QualifiedName]
		public Assignment getSuperModelsAssignment_2_2_1() { return cSuperModelsAssignment_2_2_1; }
		
		//[Model|QualifiedName]
		public CrossReference getSuperModelsModelCrossReference_2_2_1_0() { return cSuperModelsModelCrossReference_2_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperModelsModelQualifiedNameParserRuleCall_2_2_1_0_1() { return cSuperModelsModelQualifiedNameParserRuleCall_2_2_1_0_1; }
		
		//('{' attributes+=Attribute* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_3_1() { return cAttributesAssignment_3_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_1_0() { return cAttributesAttributeParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cGIVENKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cGivenRefsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cGivenRefsGivenRefParserRuleCall_1_1_0 = (RuleCall)cGivenRefsAssignment_1_1.eContents().get(0);
		private final Keyword cWHENKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cWhenBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWhenBlockWhenBlockParserRuleCall_3_0 = (RuleCall)cWhenBlockAssignment_3.eContents().get(0);
		private final Keyword cTHENKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cThenBlockAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cThenBlockThenBlockParserRuleCall_5_0 = (RuleCall)cThenBlockAssignment_5.eContents().get(0);
		
		//Scenario:
		//	name=ID ('GIVEN' givenRefs+=GivenRef*)?
		//	'WHEN' whenBlock=WhenBlock
		//	'THEN' thenBlock=ThenBlock;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('GIVEN' givenRefs+=GivenRef*)? 'WHEN' whenBlock=WhenBlock 'THEN' thenBlock=ThenBlock
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('GIVEN' givenRefs+=GivenRef*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'GIVEN'
		public Keyword getGIVENKeyword_1_0() { return cGIVENKeyword_1_0; }
		
		//givenRefs+=GivenRef*
		public Assignment getGivenRefsAssignment_1_1() { return cGivenRefsAssignment_1_1; }
		
		//GivenRef
		public RuleCall getGivenRefsGivenRefParserRuleCall_1_1_0() { return cGivenRefsGivenRefParserRuleCall_1_1_0; }
		
		//'WHEN'
		public Keyword getWHENKeyword_2() { return cWHENKeyword_2; }
		
		//whenBlock=WhenBlock
		public Assignment getWhenBlockAssignment_3() { return cWhenBlockAssignment_3; }
		
		//WhenBlock
		public RuleCall getWhenBlockWhenBlockParserRuleCall_3_0() { return cWhenBlockWhenBlockParserRuleCall_3_0; }
		
		//'THEN'
		public Keyword getTHENKeyword_4() { return cTHENKeyword_4; }
		
		//thenBlock=ThenBlock
		public Assignment getThenBlockAssignment_5() { return cThenBlockAssignment_5; }
		
		//ThenBlock
		public RuleCall getThenBlockThenBlockParserRuleCall_5_0() { return cThenBlockThenBlockParserRuleCall_5_0; }
	}
	public class GivenRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.GivenRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cScenarioAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cScenarioScenarioCrossReference_0_0 = (CrossReference)cScenarioAssignment_0.eContents().get(0);
		private final RuleCall cScenarioScenarioQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cScenarioScenarioCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cTimesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cTimesINTTerminalRuleCall_1_0_0 = (RuleCall)cTimesAssignment_1_0.eContents().get(0);
		private final Keyword cXKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cExcludeGivenAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cExcludeGivenExcludeGIVENKeyword_2_0 = (Keyword)cExcludeGivenAssignment_2.eContents().get(0);
		
		//GivenRef:
		//	scenario=[Scenario|QualifiedName] (times=INT 'x')? excludeGiven?='excludeGIVEN'?;
		@Override public ParserRule getRule() { return rule; }
		
		//scenario=[Scenario|QualifiedName] (times=INT 'x')? excludeGiven?='excludeGIVEN'?
		public Group getGroup() { return cGroup; }
		
		//scenario=[Scenario|QualifiedName]
		public Assignment getScenarioAssignment_0() { return cScenarioAssignment_0; }
		
		//[Scenario|QualifiedName]
		public CrossReference getScenarioScenarioCrossReference_0_0() { return cScenarioScenarioCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getScenarioScenarioQualifiedNameParserRuleCall_0_0_1() { return cScenarioScenarioQualifiedNameParserRuleCall_0_0_1; }
		
		//(times=INT 'x')?
		public Group getGroup_1() { return cGroup_1; }
		
		//times=INT
		public Assignment getTimesAssignment_1_0() { return cTimesAssignment_1_0; }
		
		//INT
		public RuleCall getTimesINTTerminalRuleCall_1_0_0() { return cTimesINTTerminalRuleCall_1_0_0; }
		
		//'x'
		public Keyword getXKeyword_1_1() { return cXKeyword_1_1; }
		
		//excludeGiven?='excludeGIVEN'?
		public Assignment getExcludeGivenAssignment_2() { return cExcludeGivenAssignment_2; }
		
		//'excludeGIVEN'
		public Keyword getExcludeGivenExcludeGIVENKeyword_2_0() { return cExcludeGivenExcludeGIVENKeyword_2_0; }
	}
	public class WhenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.WhenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cActionHttpServerAceCrossReference_0_0 = (CrossReference)cActionAssignment_0.eContents().get(0);
		private final RuleCall cActionHttpServerAceQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cActionHttpServerAceCrossReference_0_0.eContents().get(1);
		private final Assignment cDataDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDataDefinitionDataDefinitionParserRuleCall_1_0 = (RuleCall)cDataDefinitionAssignment_1.eContents().get(0);
		private final Assignment cAuthorizationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAuthorizationAuthorizationParserRuleCall_2_0 = (RuleCall)cAuthorizationAssignment_2.eContents().get(0);
		
		//WhenBlock:
		//	action=[HttpServerAce|QualifiedName] dataDefinition=DataDefinition
		//	authorization=Authorization?;
		@Override public ParserRule getRule() { return rule; }
		
		//action=[HttpServerAce|QualifiedName] dataDefinition=DataDefinition authorization=Authorization?
		public Group getGroup() { return cGroup; }
		
		//action=[HttpServerAce|QualifiedName]
		public Assignment getActionAssignment_0() { return cActionAssignment_0; }
		
		//[HttpServerAce|QualifiedName]
		public CrossReference getActionHttpServerAceCrossReference_0_0() { return cActionHttpServerAceCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getActionHttpServerAceQualifiedNameParserRuleCall_0_0_1() { return cActionHttpServerAceQualifiedNameParserRuleCall_0_0_1; }
		
		//dataDefinition=DataDefinition
		public Assignment getDataDefinitionAssignment_1() { return cDataDefinitionAssignment_1; }
		
		//DataDefinition
		public RuleCall getDataDefinitionDataDefinitionParserRuleCall_1_0() { return cDataDefinitionDataDefinitionParserRuleCall_1_0; }
		
		//authorization=Authorization?
		public Assignment getAuthorizationAssignment_2() { return cAuthorizationAssignment_2; }
		
		//Authorization
		public RuleCall getAuthorizationAuthorizationParserRuleCall_2_0() { return cAuthorizationAuthorizationParserRuleCall_2_0; }
	}
	public class ThenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ThenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStatusCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStatusCodeINTTerminalRuleCall_0_0 = (RuleCall)cStatusCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cResponseKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cShouldBeKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cResponseAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cResponseDataDefinitionParserRuleCall_1_2_0 = (RuleCall)cResponseAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPersistenceKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPersistenceVerificationsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPersistenceVerificationsPersistenceVerificationParserRuleCall_2_1_0 = (RuleCall)cPersistenceVerificationsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cVerificationsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cVerificationsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cVerificationsVerificationParserRuleCall_3_1_0 = (RuleCall)cVerificationsAssignment_3_1.eContents().get(0);
		
		//ThenBlock:
		//	statusCode=INT ('response' 'shouldBe' response=DataDefinition)? ('persistence'
		//	persistenceVerifications+=PersistenceVerification*)? ('verifications' verifications+=Verification*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//statusCode=INT ('response' 'shouldBe' response=DataDefinition)? ('persistence'
		//persistenceVerifications+=PersistenceVerification*)? ('verifications' verifications+=Verification*)?
		public Group getGroup() { return cGroup; }
		
		//statusCode=INT
		public Assignment getStatusCodeAssignment_0() { return cStatusCodeAssignment_0; }
		
		//INT
		public RuleCall getStatusCodeINTTerminalRuleCall_0_0() { return cStatusCodeINTTerminalRuleCall_0_0; }
		
		//('response' 'shouldBe' response=DataDefinition)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'response'
		public Keyword getResponseKeyword_1_0() { return cResponseKeyword_1_0; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_1_1() { return cShouldBeKeyword_1_1; }
		
		//response=DataDefinition
		public Assignment getResponseAssignment_1_2() { return cResponseAssignment_1_2; }
		
		//DataDefinition
		public RuleCall getResponseDataDefinitionParserRuleCall_1_2_0() { return cResponseDataDefinitionParserRuleCall_1_2_0; }
		
		//('persistence' persistenceVerifications+=PersistenceVerification*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'persistence'
		public Keyword getPersistenceKeyword_2_0() { return cPersistenceKeyword_2_0; }
		
		//persistenceVerifications+=PersistenceVerification*
		public Assignment getPersistenceVerificationsAssignment_2_1() { return cPersistenceVerificationsAssignment_2_1; }
		
		//PersistenceVerification
		public RuleCall getPersistenceVerificationsPersistenceVerificationParserRuleCall_2_1_0() { return cPersistenceVerificationsPersistenceVerificationParserRuleCall_2_1_0; }
		
		//('verifications' verifications+=Verification*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'verifications'
		public Keyword getVerificationsKeyword_3_0() { return cVerificationsKeyword_3_0; }
		
		//verifications+=Verification*
		public Assignment getVerificationsAssignment_3_1() { return cVerificationsAssignment_3_1; }
		
		//Verification
		public RuleCall getVerificationsVerificationParserRuleCall_3_1_0() { return cVerificationsVerificationParserRuleCall_3_1_0; }
	}
	public class PersistenceVerificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.PersistenceVerification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cModelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cModelModelCrossReference_1_0 = (CrossReference)cModelAssignment_1.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cModelModelCrossReference_1_0.eContents().get(1);
		private final Assignment cExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpressionPersistenceVerificationExpressionParserRuleCall_2_0 = (RuleCall)cExpressionAssignment_2.eContents().get(0);
		
		//PersistenceVerification:
		//	name=ID model=[Model|QualifiedName] expression=PersistenceVerificationExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID model=[Model|QualifiedName] expression=PersistenceVerificationExpression
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//model=[Model|QualifiedName]
		public Assignment getModelAssignment_1() { return cModelAssignment_1; }
		
		//[Model|QualifiedName]
		public CrossReference getModelModelCrossReference_1_0() { return cModelModelCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_1_0_1() { return cModelModelQualifiedNameParserRuleCall_1_0_1; }
		
		//expression=PersistenceVerificationExpression
		public Assignment getExpressionAssignment_2() { return cExpressionAssignment_2; }
		
		//PersistenceVerificationExpression
		public RuleCall getExpressionPersistenceVerificationExpressionParserRuleCall_2_0() { return cExpressionPersistenceVerificationExpressionParserRuleCall_2_0; }
	}
	public class PersistenceVerificationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.PersistenceVerificationExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSelectByUniqueAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSelectByPrimaryKeysParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCountParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//PersistenceVerificationExpression:
		//	SelectByUniqueAttribute | SelectByPrimaryKeys | Count;
		@Override public ParserRule getRule() { return rule; }
		
		//SelectByUniqueAttribute | SelectByPrimaryKeys | Count
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SelectByUniqueAttribute
		public RuleCall getSelectByUniqueAttributeParserRuleCall_0() { return cSelectByUniqueAttributeParserRuleCall_0; }
		
		//SelectByPrimaryKeys
		public RuleCall getSelectByPrimaryKeysParserRuleCall_1() { return cSelectByPrimaryKeysParserRuleCall_1; }
		
		//Count
		public RuleCall getCountParserRuleCall_2() { return cCountParserRuleCall_2; }
	}
	public class SelectByPrimaryKeysElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.SelectByPrimaryKeys");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectByPrimaryKeyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAndValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_2_0 = (RuleCall)cAttributeAndValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributeAndValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0 = (RuleCall)cAttributeAndValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cShouldBeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cExpectedAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cExpectedSelectByExpectationParserRuleCall_6_0 = (RuleCall)cExpectedAssignment_6.eContents().get(0);
		
		//SelectByPrimaryKeys:
		//	'selectByPrimaryKey' '(' attributeAndValues+=AttributeAndValue (',' attributeAndValues+=AttributeAndValue*)? ')'
		//	'shouldBe' expected=SelectByExpectation;
		@Override public ParserRule getRule() { return rule; }
		
		//'selectByPrimaryKey' '(' attributeAndValues+=AttributeAndValue (',' attributeAndValues+=AttributeAndValue*)? ')'
		//'shouldBe' expected=SelectByExpectation
		public Group getGroup() { return cGroup; }
		
		//'selectByPrimaryKey'
		public Keyword getSelectByPrimaryKeyKeyword_0() { return cSelectByPrimaryKeyKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attributeAndValues+=AttributeAndValue
		public Assignment getAttributeAndValuesAssignment_2() { return cAttributeAndValuesAssignment_2; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_2_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_2_0; }
		
		//(',' attributeAndValues+=AttributeAndValue*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//attributeAndValues+=AttributeAndValue*
		public Assignment getAttributeAndValuesAssignment_3_1() { return cAttributeAndValuesAssignment_3_1; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_5() { return cShouldBeKeyword_5; }
		
		//expected=SelectByExpectation
		public Assignment getExpectedAssignment_6() { return cExpectedAssignment_6; }
		
		//SelectByExpectation
		public RuleCall getExpectedSelectByExpectationParserRuleCall_6_0() { return cExpectedSelectByExpectationParserRuleCall_6_0; }
	}
	public class SelectByUniqueAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.SelectByUniqueAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAndValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeAndValueAttributeAndValueParserRuleCall_2_0 = (RuleCall)cAttributeAndValueAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cShouldBeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpectedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpectedSelectByExpectationParserRuleCall_5_0 = (RuleCall)cExpectedAssignment_5.eContents().get(0);
		
		//SelectByUniqueAttribute:
		//	'selectBy' '(' attributeAndValue=AttributeAndValue ')' 'shouldBe' expected=SelectByExpectation;
		@Override public ParserRule getRule() { return rule; }
		
		//'selectBy' '(' attributeAndValue=AttributeAndValue ')' 'shouldBe' expected=SelectByExpectation
		public Group getGroup() { return cGroup; }
		
		//'selectBy'
		public Keyword getSelectByKeyword_0() { return cSelectByKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attributeAndValue=AttributeAndValue
		public Assignment getAttributeAndValueAssignment_2() { return cAttributeAndValueAssignment_2; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValueAttributeAndValueParserRuleCall_2_0() { return cAttributeAndValueAttributeAndValueParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_4() { return cShouldBeKeyword_4; }
		
		//expected=SelectByExpectation
		public Assignment getExpectedAssignment_5() { return cExpectedAssignment_5; }
		
		//SelectByExpectation
		public RuleCall getExpectedSelectByExpectationParserRuleCall_5_0() { return cExpectedSelectByExpectationParserRuleCall_5_0; }
	}
	public class CountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Count");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFilterAndCountByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAndValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_2_0 = (RuleCall)cAttributeAndValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributeAndValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0 = (RuleCall)cAttributeAndValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cShouldBeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cExpectedAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cExpectedINTTerminalRuleCall_6_0 = (RuleCall)cExpectedAssignment_6.eContents().get(0);
		
		//Count:
		//	'filterAndCountBy' '(' attributeAndValues+=AttributeAndValue (',' attributeAndValues+=AttributeAndValue*)? ')'
		//	'shouldBe' expected=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'filterAndCountBy' '(' attributeAndValues+=AttributeAndValue (',' attributeAndValues+=AttributeAndValue*)? ')'
		//'shouldBe' expected=INT
		public Group getGroup() { return cGroup; }
		
		//'filterAndCountBy'
		public Keyword getFilterAndCountByKeyword_0() { return cFilterAndCountByKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attributeAndValues+=AttributeAndValue
		public Assignment getAttributeAndValuesAssignment_2() { return cAttributeAndValuesAssignment_2; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_2_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_2_0; }
		
		//(',' attributeAndValues+=AttributeAndValue*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//attributeAndValues+=AttributeAndValue*
		public Assignment getAttributeAndValuesAssignment_3_1() { return cAttributeAndValuesAssignment_3_1; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_5() { return cShouldBeKeyword_5; }
		
		//expected=INT
		public Assignment getExpectedAssignment_6() { return cExpectedAssignment_6; }
		
		//INT
		public RuleCall getExpectedINTTerminalRuleCall_6_0() { return cExpectedINTTerminalRuleCall_6_0; }
	}
	public class AttributeAndValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.AttributeAndValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//AttributeAndValue:
		//	attribute=[Attribute|QualifiedName] ':' value=PrimitiveValue;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute|QualifiedName] ':' value=PrimitiveValue
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=PrimitiveValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_2_0() { return cValuePrimitiveValueParserRuleCall_2_0; }
	}
	public class VerificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Verification");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Verification:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class SelectByExpectationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.SelectByExpectation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cObjectAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cObjectJsonObjectParserRuleCall_0_0 = (RuleCall)cObjectAssignment_0.eContents().get(0);
		private final Assignment cIsNotNullAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cIsNotNullNotNullKeyword_1_0 = (Keyword)cIsNotNullAssignment_1.eContents().get(0);
		private final Assignment cIsNullAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cIsNullNullKeyword_2_0 = (Keyword)cIsNullAssignment_2.eContents().get(0);
		
		//SelectByExpectation:
		//	object=JsonObject | isNotNull?='notNull' | isNull?='null';
		@Override public ParserRule getRule() { return rule; }
		
		//object=JsonObject | isNotNull?='notNull' | isNull?='null'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//object=JsonObject
		public Assignment getObjectAssignment_0() { return cObjectAssignment_0; }
		
		//JsonObject
		public RuleCall getObjectJsonObjectParserRuleCall_0_0() { return cObjectJsonObjectParserRuleCall_0_0; }
		
		//isNotNull?='notNull'
		public Assignment getIsNotNullAssignment_1() { return cIsNotNullAssignment_1; }
		
		//'notNull'
		public Keyword getIsNotNullNotNullKeyword_1_0() { return cIsNotNullNotNullKeyword_1_0; }
		
		//isNull?='null'
		public Assignment getIsNullAssignment_2() { return cIsNullAssignment_2; }
		
		//'null'
		public Keyword getIsNullNullKeyword_2_0() { return cIsNullNullKeyword_2_0; }
	}
	public class DataDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.DataDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cUuidKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cUuidAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cUuidSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cUuidAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSystemTimeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSystemtimeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSystemtimeSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cSystemtimeAssignment_2_1.eContents().get(0);
		private final Assignment cPatternAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cPatternSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cPatternAssignment_2_2.eContents().get(0);
		private final Assignment cDataAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDataJsonObjectParserRuleCall_3_0 = (RuleCall)cDataAssignment_3.eContents().get(0);
		
		//DataDefinition:
		//	{DataDefinition} ('uuid' uuid=STRING)? ('systemTime' systemtime=STRING pattern=STRING)?
		//	data=JsonObject?;
		@Override public ParserRule getRule() { return rule; }
		
		//{DataDefinition} ('uuid' uuid=STRING)? ('systemTime' systemtime=STRING pattern=STRING)? data=JsonObject?
		public Group getGroup() { return cGroup; }
		
		//{DataDefinition}
		public Action getDataDefinitionAction_0() { return cDataDefinitionAction_0; }
		
		//('uuid' uuid=STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'uuid'
		public Keyword getUuidKeyword_1_0() { return cUuidKeyword_1_0; }
		
		//uuid=STRING
		public Assignment getUuidAssignment_1_1() { return cUuidAssignment_1_1; }
		
		//STRING
		public RuleCall getUuidSTRINGTerminalRuleCall_1_1_0() { return cUuidSTRINGTerminalRuleCall_1_1_0; }
		
		//('systemTime' systemtime=STRING pattern=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'systemTime'
		public Keyword getSystemTimeKeyword_2_0() { return cSystemTimeKeyword_2_0; }
		
		//systemtime=STRING
		public Assignment getSystemtimeAssignment_2_1() { return cSystemtimeAssignment_2_1; }
		
		//STRING
		public RuleCall getSystemtimeSTRINGTerminalRuleCall_2_1_0() { return cSystemtimeSTRINGTerminalRuleCall_2_1_0; }
		
		//pattern=STRING
		public Assignment getPatternAssignment_2_2() { return cPatternAssignment_2_2; }
		
		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_2_2_0() { return cPatternSTRINGTerminalRuleCall_2_2_0; }
		
		//data=JsonObject?
		public Assignment getDataAssignment_3() { return cDataAssignment_3; }
		
		//JsonObject
		public RuleCall getDataJsonObjectParserRuleCall_3_0() { return cDataJsonObjectParserRuleCall_3_0; }
	}
	public class AuthorizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Authorization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAuthorizationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUsernameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUsernameSTRINGTerminalRuleCall_1_0 = (RuleCall)cUsernameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPasswordAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPasswordSTRINGTerminalRuleCall_3_0 = (RuleCall)cPasswordAssignment_3.eContents().get(0);
		
		//Authorization:
		//	'authorization' username=STRING ':' password=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'authorization' username=STRING ':' password=STRING
		public Group getGroup() { return cGroup; }
		
		//'authorization'
		public Keyword getAuthorizationKeyword_0() { return cAuthorizationKeyword_0; }
		
		//username=STRING
		public Assignment getUsernameAssignment_1() { return cUsernameAssignment_1; }
		
		//STRING
		public RuleCall getUsernameSTRINGTerminalRuleCall_1_0() { return cUsernameSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//password=STRING
		public Assignment getPasswordAssignment_3() { return cPasswordAssignment_3; }
		
		//STRING
		public RuleCall getPasswordSTRINGTerminalRuleCall_3_0() { return cPasswordSTRINGTerminalRuleCall_3_0; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cUniqueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cUniqueUniqueKeyword_0_0 = (Keyword)cUniqueAssignment_0.eContents().get(0);
		private final Assignment cPrimaryKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPrimaryKeyPrimaryKeyKeyword_1_0 = (Keyword)cPrimaryKeyAssignment_1.eContents().get(0);
		private final Assignment cNotNullAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNotNullNotNullKeyword_2_0 = (Keyword)cNotNullAssignment_2.eContents().get(0);
		private final Assignment cListAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cListListKeyword_3_0 = (Keyword)cListAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cTypeTypeParserRuleCall_4_0_0 = (RuleCall)cTypeAssignment_4_0.eContents().get(0);
		private final Assignment cModelAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final CrossReference cModelModelCrossReference_4_1_0 = (CrossReference)cModelAssignment_4_1.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cModelModelCrossReference_4_1_0.eContents().get(1);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReferencesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cForeignKeyAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cForeignKeyAttributeCrossReference_6_1_0 = (CrossReference)cForeignKeyAssignment_6_1.eContents().get(0);
		private final RuleCall cForeignKeyAttributeQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cForeignKeyAttributeCrossReference_6_1_0.eContents().get(1);
		private final Assignment cNotReplayableAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cNotReplayableNotReplayableKeyword_7_0 = (Keyword)cNotReplayableAssignment_7.eContents().get(0);
		
		//Attribute:
		//	unique?='Unique'?
		//	primaryKey?='PrimaryKey'?
		//	notNull?='NotNull'?
		//	list?='List'? (type=Type | model=[Model|QualifiedName]) name=ID ('references' foreignKey=[Attribute|QualifiedName])?
		//	notReplayable?='notReplayable'?;
		@Override public ParserRule getRule() { return rule; }
		
		//unique?='Unique'? primaryKey?='PrimaryKey'? notNull?='NotNull'? list?='List'? (type=Type | model=[Model|QualifiedName])
		//name=ID ('references' foreignKey=[Attribute|QualifiedName])? notReplayable?='notReplayable'?
		public Group getGroup() { return cGroup; }
		
		//unique?='Unique'?
		public Assignment getUniqueAssignment_0() { return cUniqueAssignment_0; }
		
		//'Unique'
		public Keyword getUniqueUniqueKeyword_0_0() { return cUniqueUniqueKeyword_0_0; }
		
		//primaryKey?='PrimaryKey'?
		public Assignment getPrimaryKeyAssignment_1() { return cPrimaryKeyAssignment_1; }
		
		//'PrimaryKey'
		public Keyword getPrimaryKeyPrimaryKeyKeyword_1_0() { return cPrimaryKeyPrimaryKeyKeyword_1_0; }
		
		//notNull?='NotNull'?
		public Assignment getNotNullAssignment_2() { return cNotNullAssignment_2; }
		
		//'NotNull'
		public Keyword getNotNullNotNullKeyword_2_0() { return cNotNullNotNullKeyword_2_0; }
		
		//list?='List'?
		public Assignment getListAssignment_3() { return cListAssignment_3; }
		
		//'List'
		public Keyword getListListKeyword_3_0() { return cListListKeyword_3_0; }
		
		//(type=Type | model=[Model|QualifiedName])
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//type=Type
		public Assignment getTypeAssignment_4_0() { return cTypeAssignment_4_0; }
		
		//Type
		public RuleCall getTypeTypeParserRuleCall_4_0_0() { return cTypeTypeParserRuleCall_4_0_0; }
		
		//model=[Model|QualifiedName]
		public Assignment getModelAssignment_4_1() { return cModelAssignment_4_1; }
		
		//[Model|QualifiedName]
		public CrossReference getModelModelCrossReference_4_1_0() { return cModelModelCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_4_1_0_1() { return cModelModelQualifiedNameParserRuleCall_4_1_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//('references' foreignKey=[Attribute|QualifiedName])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'references'
		public Keyword getReferencesKeyword_6_0() { return cReferencesKeyword_6_0; }
		
		//foreignKey=[Attribute|QualifiedName]
		public Assignment getForeignKeyAssignment_6_1() { return cForeignKeyAssignment_6_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getForeignKeyAttributeCrossReference_6_1_0() { return cForeignKeyAttributeCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getForeignKeyAttributeQualifiedNameParserRuleCall_6_1_0_1() { return cForeignKeyAttributeQualifiedNameParserRuleCall_6_1_0_1; }
		
		//notReplayable?='notReplayable'?
		public Assignment getNotReplayableAssignment_7() { return cNotReplayableAssignment_7; }
		
		//'notReplayable'
		public Keyword getNotReplayableNotReplayableKeyword_7_0() { return cNotReplayableNotReplayableKeyword_7_0; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class WriteFunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.WriteFunctionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPOSTKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPUTKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDELETEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//WriteFunctionType:
		//	'POST' | 'PUT' | 'DELETE';
		@Override public ParserRule getRule() { return rule; }
		
		//'POST' | 'PUT' | 'DELETE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'POST'
		public Keyword getPOSTKeyword_0() { return cPOSTKeyword_0; }
		
		//'PUT'
		public Keyword getPUTKeyword_1() { return cPUTKeyword_1; }
		
		//'DELETE'
		public Keyword getDELETEKeyword_2() { return cDELETEKeyword_2; }
	}
	public class ReadFunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ReadFunctionType");
		private final Keyword cGETKeyword = (Keyword)rule.eContents().get(1);
		
		//ReadFunctionType:
		//	'GET';
		@Override public ParserRule getRule() { return rule; }
		
		//'GET'
		public Keyword getGETKeyword() { return cGETKeyword; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cIntegerKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cStringKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cFloatKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cBooleanKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cDateTimeKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cLongKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//Type:
		//	'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long';
		@Override public ParserRule getRule() { return rule; }
		
		//'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Integer'
		public Keyword getIntegerKeyword_0() { return cIntegerKeyword_0; }
		
		//'String'
		public Keyword getStringKeyword_1() { return cStringKeyword_1; }
		
		//'Float'
		public Keyword getFloatKeyword_2() { return cFloatKeyword_2; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_3() { return cBooleanKeyword_3; }
		
		//'DateTime'
		public Keyword getDateTimeKeyword_4() { return cDateTimeKeyword_4; }
		
		//'Long'
		public Keyword getLongKeyword_5() { return cLongKeyword_5; }
	}
	public class JsonDateTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonDateTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDateTimeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDateTimeSTRINGTerminalRuleCall_0_0 = (RuleCall)cDateTimeAssignment_0.eContents().get(0);
		private final Assignment cPatternAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPatternSTRINGTerminalRuleCall_1_0 = (RuleCall)cPatternAssignment_1.eContents().get(0);
		
		//JsonDateTime:
		//	dateTime=STRING pattern=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//dateTime=STRING pattern=STRING
		public Group getGroup() { return cGroup; }
		
		//dateTime=STRING
		public Assignment getDateTimeAssignment_0() { return cDateTimeAssignment_0; }
		
		//STRING
		public RuleCall getDateTimeSTRINGTerminalRuleCall_0_0() { return cDateTimeSTRINGTerminalRuleCall_0_0; }
		
		//pattern=STRING
		public Assignment getPatternAssignment_1() { return cPatternAssignment_1; }
		
		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_1_0() { return cPatternSTRINGTerminalRuleCall_1_0; }
	}
	public class JsonObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMembersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMembersJsonMemberParserRuleCall_2_0 = (RuleCall)cMembersAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMembersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMembersJsonMemberParserRuleCall_3_1_0 = (RuleCall)cMembersAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonObject:
		//	{JsonObject} '{'
		//	members+=JsonMember? (',' members+=JsonMember)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonObject} '{' members+=JsonMember? (',' members+=JsonMember)* '}'
		public Group getGroup() { return cGroup; }
		
		//{JsonObject}
		public Action getJsonObjectAction_0() { return cJsonObjectAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//members+=JsonMember?
		public Assignment getMembersAssignment_2() { return cMembersAssignment_2; }
		
		//JsonMember
		public RuleCall getMembersJsonMemberParserRuleCall_2_0() { return cMembersJsonMemberParserRuleCall_2_0; }
		
		//(',' members+=JsonMember)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//members+=JsonMember
		public Assignment getMembersAssignment_3_1() { return cMembersAssignment_3_1; }
		
		//JsonMember
		public RuleCall getMembersJsonMemberParserRuleCall_3_1_0() { return cMembersJsonMemberParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class JsonMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonMember:
		//	attribute=[Attribute|QualifiedName] ':' value=JsonValue;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute|QualifiedName] ':' value=JsonValue
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=JsonValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//JsonValue
		public RuleCall getValueJsonValueParserRuleCall_2_0() { return cValueJsonValueParserRuleCall_2_0; }
	}
	public class JsonValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJsonObjectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJsonArrayParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cNullTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLongTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cJsonDateTimeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//JsonValue:
		//	JsonObject | StringType | JsonArray | BooleanType | NullType | LongType | JsonDateTime;
		@Override public ParserRule getRule() { return rule; }
		
		//JsonObject | StringType | JsonArray | BooleanType | NullType | LongType | JsonDateTime
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JsonObject
		public RuleCall getJsonObjectParserRuleCall_0() { return cJsonObjectParserRuleCall_0; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_1() { return cStringTypeParserRuleCall_1; }
		
		//JsonArray
		public RuleCall getJsonArrayParserRuleCall_2() { return cJsonArrayParserRuleCall_2; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_3() { return cBooleanTypeParserRuleCall_3; }
		
		//NullType
		public RuleCall getNullTypeParserRuleCall_4() { return cNullTypeParserRuleCall_4; }
		
		//LongType
		public RuleCall getLongTypeParserRuleCall_5() { return cLongTypeParserRuleCall_5; }
		
		//JsonDateTime
		public RuleCall getJsonDateTimeParserRuleCall_6() { return cJsonDateTimeParserRuleCall_6; }
	}
	public class JsonArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesJsonValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesJsonValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonArray:
		//	{JsonArray} '[' values+=JsonValue? (',' values+=JsonValue)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonArray} '[' values+=JsonValue? (',' values+=JsonValue)* ']'
		public Group getGroup() { return cGroup; }
		
		//{JsonArray}
		public Action getJsonArrayAction_0() { return cJsonArrayAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//values+=JsonValue?
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }
		
		//JsonValue
		public RuleCall getValuesJsonValueParserRuleCall_2_0() { return cValuesJsonValueParserRuleCall_2_0; }
		
		//(',' values+=JsonValue)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//values+=JsonValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }
		
		//JsonValue
		public RuleCall getValuesJsonValueParserRuleCall_3_1_0() { return cValuesJsonValueParserRuleCall_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class StringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.StringType");
		private final Assignment cStringAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStringSTRINGTerminalRuleCall_0 = (RuleCall)cStringAssignment.eContents().get(0);
		
		//StringType:
		//	string=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//string=STRING
		public Assignment getStringAssignment() { return cStringAssignment; }
		
		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_0() { return cStringSTRINGTerminalRuleCall_0; }
	}
	public class BooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.BooleanType");
		private final Assignment cBooleanAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBooleanJsonBooleanParserRuleCall_0 = (RuleCall)cBooleanAssignment.eContents().get(0);
		
		//BooleanType:
		//	boolean=JsonBoolean;
		@Override public ParserRule getRule() { return rule; }
		
		//boolean=JsonBoolean
		public Assignment getBooleanAssignment() { return cBooleanAssignment; }
		
		//JsonBoolean
		public RuleCall getBooleanJsonBooleanParserRuleCall_0() { return cBooleanJsonBooleanParserRuleCall_0; }
	}
	public class NullTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.NullType");
		private final Assignment cNullAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNullJsonNullParserRuleCall_0 = (RuleCall)cNullAssignment.eContents().get(0);
		
		//NullType:
		//	null=JsonNull;
		@Override public ParserRule getRule() { return rule; }
		
		//null=JsonNull
		public Assignment getNullAssignment() { return cNullAssignment; }
		
		//JsonNull
		public RuleCall getNullJsonNullParserRuleCall_0() { return cNullJsonNullParserRuleCall_0; }
	}
	public class LongTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.LongType");
		private final Assignment cLongAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cLongINTTerminalRuleCall_0 = (RuleCall)cLongAssignment.eContents().get(0);
		
		//LongType:
		//	long=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//long=INT
		public Assignment getLongAssignment() { return cLongAssignment; }
		
		//INT
		public RuleCall getLongINTTerminalRuleCall_0() { return cLongINTTerminalRuleCall_0; }
	}
	public class JsonBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//JsonBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class JsonNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonNull");
		private final Keyword cNullKeyword = (Keyword)rule.eContents().get(1);
		
		//JsonNull:
		//	'null';
		@Override public ParserRule getRule() { return rule; }
		
		//'null'
		public Keyword getNullKeyword() { return cNullKeyword; }
	}
	public class PrimitiveValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.PrimitiveValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cStringAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cStringSTRINGTerminalRuleCall_0_0 = (RuleCall)cStringAssignment_0.eContents().get(0);
		private final Assignment cLongAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cLongINTTerminalRuleCall_1_0 = (RuleCall)cLongAssignment_1.eContents().get(0);
		
		//PrimitiveValue:
		//	string=STRING | long=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//string=STRING | long=INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//string=STRING
		public Assignment getStringAssignment_0() { return cStringAssignment_0; }
		
		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_0_0() { return cStringSTRINGTerminalRuleCall_0_0; }
		
		//long=INT
		public Assignment getLongAssignment_1() { return cLongAssignment_1; }
		
		//INT
		public RuleCall getLongINTTerminalRuleCall_1_0() { return cLongINTTerminalRuleCall_1_0; }
	}
	
	
	private final ProjectElements pProject;
	private final HttpClientElements pHttpClient;
	private final HttpClientAceElements pHttpClientAce;
	private final InputElements pInput;
	private final HttpClientOutcomeElements pHttpClientOutcome;
	private final HttpClientStateFunctionElements pHttpClientStateFunction;
	private final HttpClientStateFunctionTypeElements pHttpClientStateFunctionType;
	private final ClientAttributeElements pClientAttribute;
	private final ClientScenarioElements pClientScenario;
	private final ClientWhenBlockElements pClientWhenBlock;
	private final InputValueElements pInputValue;
	private final ClientThenBlockElements pClientThenBlock;
	private final ServerCallElements pServerCall;
	private final TriggeredActionElements pTriggeredAction;
	private final StateVerificationElements pStateVerification;
	private final JsonObjectClientElements pJsonObjectClient;
	private final JsonMemberClientElements pJsonMemberClient;
	private final JsonValueClientElements pJsonValueClient;
	private final JsonArrayClientElements pJsonArrayClient;
	private final HttpServerElements pHttpServer;
	private final HttpServerAceElements pHttpServerAce;
	private final HttpServerAceWriteElements pHttpServerAceWrite;
	private final HttpServerOutcomeElements pHttpServerOutcome;
	private final HttpServerAceReadElements pHttpServerAceRead;
	private final AttributeParamRefElements pAttributeParamRef;
	private final HttpServerViewElements pHttpServerView;
	private final HttpServerViewFunctionElements pHttpServerViewFunction;
	private final AuthUserElements pAuthUser;
	private final ModelElements pModel;
	private final ScenarioElements pScenario;
	private final GivenRefElements pGivenRef;
	private final WhenBlockElements pWhenBlock;
	private final ThenBlockElements pThenBlock;
	private final PersistenceVerificationElements pPersistenceVerification;
	private final PersistenceVerificationExpressionElements pPersistenceVerificationExpression;
	private final SelectByPrimaryKeysElements pSelectByPrimaryKeys;
	private final SelectByUniqueAttributeElements pSelectByUniqueAttribute;
	private final CountElements pCount;
	private final AttributeAndValueElements pAttributeAndValue;
	private final VerificationElements pVerification;
	private final SelectByExpectationElements pSelectByExpectation;
	private final DataDefinitionElements pDataDefinition;
	private final AuthorizationElements pAuthorization;
	private final AttributeElements pAttribute;
	private final QualifiedNameElements pQualifiedName;
	private final WriteFunctionTypeElements pWriteFunctionType;
	private final ReadFunctionTypeElements pReadFunctionType;
	private final TypeElements pType;
	private final JsonDateTimeElements pJsonDateTime;
	private final JsonObjectElements pJsonObject;
	private final JsonMemberElements pJsonMember;
	private final JsonValueElements pJsonValue;
	private final JsonArrayElements pJsonArray;
	private final StringTypeElements pStringType;
	private final BooleanTypeElements pBooleanType;
	private final NullTypeElements pNullType;
	private final LongTypeElements pLongType;
	private final JsonBooleanElements pJsonBoolean;
	private final JsonNullElements pJsonNull;
	private final PrimitiveValueElements pPrimitiveValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AceGenGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProject = new ProjectElements();
		this.pHttpClient = new HttpClientElements();
		this.pHttpClientAce = new HttpClientAceElements();
		this.pInput = new InputElements();
		this.pHttpClientOutcome = new HttpClientOutcomeElements();
		this.pHttpClientStateFunction = new HttpClientStateFunctionElements();
		this.pHttpClientStateFunctionType = new HttpClientStateFunctionTypeElements();
		this.pClientAttribute = new ClientAttributeElements();
		this.pClientScenario = new ClientScenarioElements();
		this.pClientWhenBlock = new ClientWhenBlockElements();
		this.pInputValue = new InputValueElements();
		this.pClientThenBlock = new ClientThenBlockElements();
		this.pServerCall = new ServerCallElements();
		this.pTriggeredAction = new TriggeredActionElements();
		this.pStateVerification = new StateVerificationElements();
		this.pJsonObjectClient = new JsonObjectClientElements();
		this.pJsonMemberClient = new JsonMemberClientElements();
		this.pJsonValueClient = new JsonValueClientElements();
		this.pJsonArrayClient = new JsonArrayClientElements();
		this.pHttpServer = new HttpServerElements();
		this.pHttpServerAce = new HttpServerAceElements();
		this.pHttpServerAceWrite = new HttpServerAceWriteElements();
		this.pHttpServerOutcome = new HttpServerOutcomeElements();
		this.pHttpServerAceRead = new HttpServerAceReadElements();
		this.pAttributeParamRef = new AttributeParamRefElements();
		this.pHttpServerView = new HttpServerViewElements();
		this.pHttpServerViewFunction = new HttpServerViewFunctionElements();
		this.pAuthUser = new AuthUserElements();
		this.pModel = new ModelElements();
		this.pScenario = new ScenarioElements();
		this.pGivenRef = new GivenRefElements();
		this.pWhenBlock = new WhenBlockElements();
		this.pThenBlock = new ThenBlockElements();
		this.pPersistenceVerification = new PersistenceVerificationElements();
		this.pPersistenceVerificationExpression = new PersistenceVerificationExpressionElements();
		this.pSelectByPrimaryKeys = new SelectByPrimaryKeysElements();
		this.pSelectByUniqueAttribute = new SelectByUniqueAttributeElements();
		this.pCount = new CountElements();
		this.pAttributeAndValue = new AttributeAndValueElements();
		this.pVerification = new VerificationElements();
		this.pSelectByExpectation = new SelectByExpectationElements();
		this.pDataDefinition = new DataDefinitionElements();
		this.pAuthorization = new AuthorizationElements();
		this.pAttribute = new AttributeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pWriteFunctionType = new WriteFunctionTypeElements();
		this.pReadFunctionType = new ReadFunctionTypeElements();
		this.pType = new TypeElements();
		this.pJsonDateTime = new JsonDateTimeElements();
		this.pJsonObject = new JsonObjectElements();
		this.pJsonMember = new JsonMemberElements();
		this.pJsonValue = new JsonValueElements();
		this.pJsonArray = new JsonArrayElements();
		this.pStringType = new StringTypeElements();
		this.pBooleanType = new BooleanTypeElements();
		this.pNullType = new NullTypeElements();
		this.pLongType = new LongTypeElements();
		this.pJsonBoolean = new JsonBooleanElements();
		this.pJsonNull = new JsonNullElements();
		this.pPrimitiveValue = new PrimitiveValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.acegen.AceGen".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Project:
	//	{Project} ('HttpClient' httpClient=HttpClient? | 'HttpServer' httpServer=HttpServer?)?;
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//HttpClient:
	//	name=QualifiedName ('ACE' aceOperations+=HttpClientAce*)? (appStatePresent?='appState' ('{'
	//	appState+=ClientAttribute*
	//	'}')?)? ('scenarios' scenarios+=ClientScenario*)?;
	public HttpClientElements getHttpClientAccess() {
		return pHttpClient;
	}
	
	public ParserRule getHttpClientRule() {
		return getHttpClientAccess().getRule();
	}
	
	//HttpClientAce:
	//	async?='async'? name=ID ('(' input+=Input (',' input+=Input)* ')')? ('appState' '('
	//	stateElements+=[ClientAttribute|QualifiedName] (',' stateElements+=[ClientAttribute|QualifiedName])* ')')? ('call'
	//	serverCall=[HttpServerAce|QualifiedName])? ('loadingFlag' loadingFlag=[ClientAttribute|QualifiedName])?
	//	outcomes+=HttpClientOutcome*;
	public HttpClientAceElements getHttpClientAceAccess() {
		return pHttpClientAce;
	}
	
	public ParserRule getHttpClientAceRule() {
		return getHttpClientAceAccess().getRule();
	}
	
	//Input:
	//	name=ID;
	public InputElements getInputAccess() {
		return pInput;
	}
	
	public ParserRule getInputRule() {
		return getInputAccess().getRule();
	}
	
	//HttpClientOutcome:
	//	'on' name=ID ('(' listeners+=HttpClientStateFunction* ')')? ('triggers' '('
	//	aceOperations+=[HttpClientAce|QualifiedName]* ')')?;
	public HttpClientOutcomeElements getHttpClientOutcomeAccess() {
		return pHttpClientOutcome;
	}
	
	public ParserRule getHttpClientOutcomeRule() {
		return getHttpClientOutcomeAccess().getRule();
	}
	
	//HttpClientStateFunction:
	//	stateFunctionType=HttpClientStateFunctionType stateElement=[ClientAttribute|QualifiedName];
	public HttpClientStateFunctionElements getHttpClientStateFunctionAccess() {
		return pHttpClientStateFunction;
	}
	
	public ParserRule getHttpClientStateFunctionRule() {
		return getHttpClientStateFunctionAccess().getRule();
	}
	
	//HttpClientStateFunctionType:
	//	'set' | 'merge' | 'reset';
	public HttpClientStateFunctionTypeElements getHttpClientStateFunctionTypeAccess() {
		return pHttpClientStateFunctionType;
	}
	
	public ParserRule getHttpClientStateFunctionTypeRule() {
		return getHttpClientStateFunctionTypeAccess().getRule();
	}
	
	//ClientAttribute:
	//	notNull?='NotNull'?
	//	list?='List'?
	//	type=Type?
	//	name=ID ('serverModel' model=[Model|QualifiedName])?
	//	hash?='location.hash'?
	//	storage?='storage'? ('{'
	//	attributes+=ClientAttribute*
	//	'}')?;
	public ClientAttributeElements getClientAttributeAccess() {
		return pClientAttribute;
	}
	
	public ParserRule getClientAttributeRule() {
		return getClientAttributeAccess().getRule();
	}
	
	//ClientScenario:
	//	name=ID ('GIVEN' givenRefs+=[ClientScenario|QualifiedName]*)?
	//	'WHEN' whenBlock=ClientWhenBlock
	//	'THEN' thenBlock=ClientThenBlock;
	public ClientScenarioElements getClientScenarioAccess() {
		return pClientScenario;
	}
	
	public ParserRule getClientScenarioRule() {
		return getClientScenarioAccess().getRule();
	}
	
	//ClientWhenBlock:
	//	action=[HttpClientAce|QualifiedName] ('(' (inputValues+=InputValue (',' inputValues+=InputValue)*)? ')')? ('with'
	//	'response'
	//	statusCode=INT
	//	response=JsonObject?)?;
	public ClientWhenBlockElements getClientWhenBlockAccess() {
		return pClientWhenBlock;
	}
	
	public ParserRule getClientWhenBlockRule() {
		return getClientWhenBlockAccess().getRule();
	}
	
	//InputValue:
	//	input=[Input|QualifiedName] ':' value=PrimitiveValue;
	public InputValueElements getInputValueAccess() {
		return pInputValue;
	}
	
	public ParserRule getInputValueRule() {
		return getInputValueAccess().getRule();
	}
	
	//ClientThenBlock:
	//	{ClientThenBlock} ('expectedServerCall' serverCall=ServerCall)? ('expectedState'
	//	stateVerifications+=StateVerification*)? ('triggeredActions' triggeredAction+=TriggeredAction*)?;
	public ClientThenBlockElements getClientThenBlockAccess() {
		return pClientThenBlock;
	}
	
	public ParserRule getClientThenBlockRule() {
		return getClientThenBlockAccess().getRule();
	}
	
	//ServerCall:
	//	jsonObject=JsonObject;
	public ServerCallElements getServerCallAccess() {
		return pServerCall;
	}
	
	public ParserRule getServerCallRule() {
		return getServerCallAccess().getRule();
	}
	
	//TriggeredAction:
	//	httpClientAce=[HttpClientAce|QualifiedName] '(' inputValues+=InputValue (',' inputValues+=InputValue)* ')';
	public TriggeredActionElements getTriggeredActionAccess() {
		return pTriggeredAction;
	}
	
	public ParserRule getTriggeredActionRule() {
		return getTriggeredActionAccess().getRule();
	}
	
	//StateVerification:
	//	name=ID stateRef=[ClientAttribute|QualifiedName] 'shouldBe' value=JsonValueClient;
	public StateVerificationElements getStateVerificationAccess() {
		return pStateVerification;
	}
	
	public ParserRule getStateVerificationRule() {
		return getStateVerificationAccess().getRule();
	}
	
	//JsonObjectClient:
	//	{JsonObjectClient} '{'
	//	members+=JsonMemberClient? (',' members+=JsonMemberClient)*
	//	'}';
	public JsonObjectClientElements getJsonObjectClientAccess() {
		return pJsonObjectClient;
	}
	
	public ParserRule getJsonObjectClientRule() {
		return getJsonObjectClientAccess().getRule();
	}
	
	//JsonMemberClient:
	//	attribute=[ClientAttribute|QualifiedName] ':' value=JsonValueClient;
	public JsonMemberClientElements getJsonMemberClientAccess() {
		return pJsonMemberClient;
	}
	
	public ParserRule getJsonMemberClientRule() {
		return getJsonMemberClientAccess().getRule();
	}
	
	//JsonValueClient:
	//	JsonObjectClient | StringType | JsonArrayClient | BooleanType | NullType | LongType | JsonDateTime;
	public JsonValueClientElements getJsonValueClientAccess() {
		return pJsonValueClient;
	}
	
	public ParserRule getJsonValueClientRule() {
		return getJsonValueClientAccess().getRule();
	}
	
	//JsonArrayClient:
	//	{JsonArrayClient} '[' values+=JsonValueClient? (',' values+=JsonValueClient)* ']';
	public JsonArrayClientElements getJsonArrayClientAccess() {
		return pJsonArrayClient;
	}
	
	public ParserRule getJsonArrayClientRule() {
		return getJsonArrayClientAccess().getRule();
	}
	
	//HttpServer:
	//	language='Java' type='Dropwizard'?
	//	persistenceLayer='JDBI3'?
	//	migrations='Liquibase'?
	//	name=QualifiedName ('Authorization' authUser=AuthUser)? ('import' authUserRef=[AuthUser|QualifiedName])? ('ACE'
	//	aceOperations+=HttpServerAce*)? ('views' views+=HttpServerView*)? ('models' models+=Model*)? ('scenarios'
	//	scenarios+=Scenario*)?;
	public HttpServerElements getHttpServerAccess() {
		return pHttpServer;
	}
	
	public ParserRule getHttpServerRule() {
		return getHttpServerAccess().getRule();
	}
	
	//HttpServerAce:
	//	HttpServerAceWrite | HttpServerAceRead;
	public HttpServerAceElements getHttpServerAceAccess() {
		return pHttpServerAce;
	}
	
	public ParserRule getHttpServerAceRule() {
		return getHttpServerAceAccess().getRule();
	}
	
	//HttpServerAceWrite:
	//	proxy?='proxy'? name=ID '<' model=[Model|QualifiedName] '>'
	//	type=WriteFunctionType
	//	url=STRING
	//	authorize?='authorize'? ('pathParams' pathParams+=AttributeParamRef*)? ('queryParams'
	//	queryParams+=AttributeParamRef*)? ('payload' payload+=AttributeParamRef*)?
	//	outcomes+=HttpServerOutcome*;
	public HttpServerAceWriteElements getHttpServerAceWriteAccess() {
		return pHttpServerAceWrite;
	}
	
	public ParserRule getHttpServerAceWriteRule() {
		return getHttpServerAceWriteAccess().getRule();
	}
	
	//HttpServerOutcome:
	//	'on' name=ID ('(' listeners+=[HttpServerViewFunction|QualifiedName]* ')')*;
	public HttpServerOutcomeElements getHttpServerOutcomeAccess() {
		return pHttpServerOutcome;
	}
	
	public ParserRule getHttpServerOutcomeRule() {
		return getHttpServerOutcomeAccess().getRule();
	}
	
	//HttpServerAceRead:
	//	proxy?='proxy'? name=ID '<' model=[Model|QualifiedName] '>'
	//	type=ReadFunctionType
	//	url=STRING
	//	authorize?='authorize'? ('pathParams' pathParams+=AttributeParamRef*)? ('queryParams'
	//	queryParams+=AttributeParamRef*)? ('payload' payload+=AttributeParamRef*)? ('response'
	//	response+=[Attribute|QualifiedName]*)?;
	public HttpServerAceReadElements getHttpServerAceReadAccess() {
		return pHttpServerAceRead;
	}
	
	public ParserRule getHttpServerAceReadRule() {
		return getHttpServerAceReadAccess().getRule();
	}
	
	//AttributeParamRef:
	//	notNull?='NotNull'? attribute=[Attribute|QualifiedName];
	public AttributeParamRefElements getAttributeParamRefAccess() {
		return pAttributeParamRef;
	}
	
	public ParserRule getAttributeParamRefRule() {
		return getAttributeParamRefAccess().getRule();
	}
	
	//HttpServerView:
	//	name=ID ('{'
	//	renderFunctions+=HttpServerViewFunction*
	//	'}')?;
	public HttpServerViewElements getHttpServerViewAccess() {
		return pHttpServerView;
	}
	
	public ParserRule getHttpServerViewRule() {
		return getHttpServerViewAccess().getRule();
	}
	
	//HttpServerViewFunction:
	//	name=ID '(' model=[Model|QualifiedName] ')';
	public HttpServerViewFunctionElements getHttpServerViewFunctionAccess() {
		return pHttpServerViewFunction;
	}
	
	public ParserRule getHttpServerViewFunctionRule() {
		return getHttpServerViewFunctionAccess().getRule();
	}
	
	//AuthUser:
	//	name=ID ('{'
	//	attributes+=Attribute*
	//	'}');
	public AuthUserElements getAuthUserAccess() {
		return pAuthUser;
	}
	
	public ParserRule getAuthUserRule() {
		return getAuthUserAccess().getRule();
	}
	
	//Model:
	//	persistent?='persistent'? name=ID ('extends' superModels+=[Model|QualifiedName] (','
	//	superModels+=[Model|QualifiedName])*)? ('{'
	//	attributes+=Attribute*
	//	'}')?;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Scenario:
	//	name=ID ('GIVEN' givenRefs+=GivenRef*)?
	//	'WHEN' whenBlock=WhenBlock
	//	'THEN' thenBlock=ThenBlock;
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//GivenRef:
	//	scenario=[Scenario|QualifiedName] (times=INT 'x')? excludeGiven?='excludeGIVEN'?;
	public GivenRefElements getGivenRefAccess() {
		return pGivenRef;
	}
	
	public ParserRule getGivenRefRule() {
		return getGivenRefAccess().getRule();
	}
	
	//WhenBlock:
	//	action=[HttpServerAce|QualifiedName] dataDefinition=DataDefinition
	//	authorization=Authorization?;
	public WhenBlockElements getWhenBlockAccess() {
		return pWhenBlock;
	}
	
	public ParserRule getWhenBlockRule() {
		return getWhenBlockAccess().getRule();
	}
	
	//ThenBlock:
	//	statusCode=INT ('response' 'shouldBe' response=DataDefinition)? ('persistence'
	//	persistenceVerifications+=PersistenceVerification*)? ('verifications' verifications+=Verification*)?;
	public ThenBlockElements getThenBlockAccess() {
		return pThenBlock;
	}
	
	public ParserRule getThenBlockRule() {
		return getThenBlockAccess().getRule();
	}
	
	//PersistenceVerification:
	//	name=ID model=[Model|QualifiedName] expression=PersistenceVerificationExpression;
	public PersistenceVerificationElements getPersistenceVerificationAccess() {
		return pPersistenceVerification;
	}
	
	public ParserRule getPersistenceVerificationRule() {
		return getPersistenceVerificationAccess().getRule();
	}
	
	//PersistenceVerificationExpression:
	//	SelectByUniqueAttribute | SelectByPrimaryKeys | Count;
	public PersistenceVerificationExpressionElements getPersistenceVerificationExpressionAccess() {
		return pPersistenceVerificationExpression;
	}
	
	public ParserRule getPersistenceVerificationExpressionRule() {
		return getPersistenceVerificationExpressionAccess().getRule();
	}
	
	//SelectByPrimaryKeys:
	//	'selectByPrimaryKey' '(' attributeAndValues+=AttributeAndValue (',' attributeAndValues+=AttributeAndValue*)? ')'
	//	'shouldBe' expected=SelectByExpectation;
	public SelectByPrimaryKeysElements getSelectByPrimaryKeysAccess() {
		return pSelectByPrimaryKeys;
	}
	
	public ParserRule getSelectByPrimaryKeysRule() {
		return getSelectByPrimaryKeysAccess().getRule();
	}
	
	//SelectByUniqueAttribute:
	//	'selectBy' '(' attributeAndValue=AttributeAndValue ')' 'shouldBe' expected=SelectByExpectation;
	public SelectByUniqueAttributeElements getSelectByUniqueAttributeAccess() {
		return pSelectByUniqueAttribute;
	}
	
	public ParserRule getSelectByUniqueAttributeRule() {
		return getSelectByUniqueAttributeAccess().getRule();
	}
	
	//Count:
	//	'filterAndCountBy' '(' attributeAndValues+=AttributeAndValue (',' attributeAndValues+=AttributeAndValue*)? ')'
	//	'shouldBe' expected=INT;
	public CountElements getCountAccess() {
		return pCount;
	}
	
	public ParserRule getCountRule() {
		return getCountAccess().getRule();
	}
	
	//AttributeAndValue:
	//	attribute=[Attribute|QualifiedName] ':' value=PrimitiveValue;
	public AttributeAndValueElements getAttributeAndValueAccess() {
		return pAttributeAndValue;
	}
	
	public ParserRule getAttributeAndValueRule() {
		return getAttributeAndValueAccess().getRule();
	}
	
	//Verification:
	//	name=ID;
	public VerificationElements getVerificationAccess() {
		return pVerification;
	}
	
	public ParserRule getVerificationRule() {
		return getVerificationAccess().getRule();
	}
	
	//SelectByExpectation:
	//	object=JsonObject | isNotNull?='notNull' | isNull?='null';
	public SelectByExpectationElements getSelectByExpectationAccess() {
		return pSelectByExpectation;
	}
	
	public ParserRule getSelectByExpectationRule() {
		return getSelectByExpectationAccess().getRule();
	}
	
	//DataDefinition:
	//	{DataDefinition} ('uuid' uuid=STRING)? ('systemTime' systemtime=STRING pattern=STRING)?
	//	data=JsonObject?;
	public DataDefinitionElements getDataDefinitionAccess() {
		return pDataDefinition;
	}
	
	public ParserRule getDataDefinitionRule() {
		return getDataDefinitionAccess().getRule();
	}
	
	//Authorization:
	//	'authorization' username=STRING ':' password=STRING;
	public AuthorizationElements getAuthorizationAccess() {
		return pAuthorization;
	}
	
	public ParserRule getAuthorizationRule() {
		return getAuthorizationAccess().getRule();
	}
	
	//Attribute:
	//	unique?='Unique'?
	//	primaryKey?='PrimaryKey'?
	//	notNull?='NotNull'?
	//	list?='List'? (type=Type | model=[Model|QualifiedName]) name=ID ('references' foreignKey=[Attribute|QualifiedName])?
	//	notReplayable?='notReplayable'?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//WriteFunctionType:
	//	'POST' | 'PUT' | 'DELETE';
	public WriteFunctionTypeElements getWriteFunctionTypeAccess() {
		return pWriteFunctionType;
	}
	
	public ParserRule getWriteFunctionTypeRule() {
		return getWriteFunctionTypeAccess().getRule();
	}
	
	//ReadFunctionType:
	//	'GET';
	public ReadFunctionTypeElements getReadFunctionTypeAccess() {
		return pReadFunctionType;
	}
	
	public ParserRule getReadFunctionTypeRule() {
		return getReadFunctionTypeAccess().getRule();
	}
	
	//Type:
	//	'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long';
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//JsonDateTime:
	//	dateTime=STRING pattern=STRING;
	public JsonDateTimeElements getJsonDateTimeAccess() {
		return pJsonDateTime;
	}
	
	public ParserRule getJsonDateTimeRule() {
		return getJsonDateTimeAccess().getRule();
	}
	
	//JsonObject:
	//	{JsonObject} '{'
	//	members+=JsonMember? (',' members+=JsonMember)*
	//	'}';
	public JsonObjectElements getJsonObjectAccess() {
		return pJsonObject;
	}
	
	public ParserRule getJsonObjectRule() {
		return getJsonObjectAccess().getRule();
	}
	
	//JsonMember:
	//	attribute=[Attribute|QualifiedName] ':' value=JsonValue;
	public JsonMemberElements getJsonMemberAccess() {
		return pJsonMember;
	}
	
	public ParserRule getJsonMemberRule() {
		return getJsonMemberAccess().getRule();
	}
	
	//JsonValue:
	//	JsonObject | StringType | JsonArray | BooleanType | NullType | LongType | JsonDateTime;
	public JsonValueElements getJsonValueAccess() {
		return pJsonValue;
	}
	
	public ParserRule getJsonValueRule() {
		return getJsonValueAccess().getRule();
	}
	
	//JsonArray:
	//	{JsonArray} '[' values+=JsonValue? (',' values+=JsonValue)* ']';
	public JsonArrayElements getJsonArrayAccess() {
		return pJsonArray;
	}
	
	public ParserRule getJsonArrayRule() {
		return getJsonArrayAccess().getRule();
	}
	
	//StringType:
	//	string=STRING;
	public StringTypeElements getStringTypeAccess() {
		return pStringType;
	}
	
	public ParserRule getStringTypeRule() {
		return getStringTypeAccess().getRule();
	}
	
	//BooleanType:
	//	boolean=JsonBoolean;
	public BooleanTypeElements getBooleanTypeAccess() {
		return pBooleanType;
	}
	
	public ParserRule getBooleanTypeRule() {
		return getBooleanTypeAccess().getRule();
	}
	
	//NullType:
	//	null=JsonNull;
	public NullTypeElements getNullTypeAccess() {
		return pNullType;
	}
	
	public ParserRule getNullTypeRule() {
		return getNullTypeAccess().getRule();
	}
	
	//LongType:
	//	long=INT;
	public LongTypeElements getLongTypeAccess() {
		return pLongType;
	}
	
	public ParserRule getLongTypeRule() {
		return getLongTypeAccess().getRule();
	}
	
	//JsonBoolean:
	//	'true' | 'false';
	public JsonBooleanElements getJsonBooleanAccess() {
		return pJsonBoolean;
	}
	
	public ParserRule getJsonBooleanRule() {
		return getJsonBooleanAccess().getRule();
	}
	
	//JsonNull:
	//	'null';
	public JsonNullElements getJsonNullAccess() {
		return pJsonNull;
	}
	
	public ParserRule getJsonNullRule() {
		return getJsonNullAccess().getRule();
	}
	
	//PrimitiveValue:
	//	string=STRING | long=INT;
	public PrimitiveValueElements getPrimitiveValueAccess() {
		return pPrimitiveValue;
	}
	
	public ParserRule getPrimitiveValueRule() {
		return getPrimitiveValueAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
