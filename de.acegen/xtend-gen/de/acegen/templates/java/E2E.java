/**
 * Copyright (c) 2020 Annette Pohl
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 * 
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */
package de.acegen.templates.java;

import de.acegen.extensions.CommonExtension;
import javax.inject.Inject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class E2E {
  @Inject
  @Extension
  private CommonExtension _commonExtension;
  
  public CharSequence generate() {
    StringConcatenation _builder = new StringConcatenation();
    String _copyright = this._commonExtension.copyright();
    _builder.append(_copyright);
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("package de.acegen;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.append("import java.util.HashMap;");
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.append("import java.util.Map;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import java.time.LocalDateTime;");
    _builder.newLine();
    _builder.append("import org.slf4j.Logger;");
    _builder.newLine();
    _builder.append("import org.slf4j.LoggerFactory;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class E2E {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private boolean sessionIsRunning;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private LocalDateTime sessionStartedAt;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Map<String, AceOperation> timeline;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private List<String> uuidList;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private int index;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("static final Logger LOG = LoggerFactory.getLogger(E2E.class);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public E2E() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.sessionIsRunning = false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.sessionStartedAt = null;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.timeline = null;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.index = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public boolean isSessionRunning() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.sessionIsRunning;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public LocalDateTime getSessionStartedAt() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.sessionStartedAt;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void reset() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.sessionIsRunning = false;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.sessionStartedAt = null;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.timeline = null;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.index = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void init(List<ITimelineItem> initialTimeline) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("timeline = new HashMap<>();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("uuidList = new ArrayList<>();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("for (ITimelineItem timelineItem : initialTimeline) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("String uuid = timelineItem.getUuid();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (!uuidList.contains(uuid)) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("uuidList.add(uuid);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("AceOperation aceOperation = timeline.get(uuid);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (aceOperation == null) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("aceOperation = new AceOperation(uuid);");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("timeline.put(uuid, aceOperation);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (\"action\".equals(timelineItem.getType())) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("aceOperation.setAction(timelineItem);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("} else if (\"command\".equals(timelineItem.getType())) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("aceOperation.setCommand(timelineItem);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("} else if (\"event\".equals(timelineItem.getType())) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("aceOperation.setEvent(timelineItem);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.sessionIsRunning = true;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.sessionStartedAt = LocalDateTime.now();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.index = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ITimelineItem selectNextAction() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (index < uuidList.size()) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("String uuid = uuidList.get(index);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("index++;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return timeline.get(uuid).getAction();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ITimelineItem selectAction(String uuid) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return timeline.get(uuid).getAction();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ITimelineItem selectCommand(String uuid) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return timeline.get(uuid).getCommand();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public ITimelineItem selectEvent(String uuid) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return timeline.get(uuid).getEvent();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    String _sdg = this._commonExtension.sdg();
    _builder.append(_sdg);
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
}
