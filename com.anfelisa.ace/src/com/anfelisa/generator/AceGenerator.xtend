/*
 * generated by Xtext 2.10.0
 */
package com.anfelisa.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import com.anfelisa.ace.Project
import javax.inject.Inject
import org.eclipse.xtext.generator.IFileSystemAccess
import com.anfelisa.extensions.ActionExtension
import com.anfelisa.extensions.CommandExtension
import com.anfelisa.extensions.EventExtension
import com.anfelisa.extensions.ViewExtension
import com.anfelisa.extensions.ProjectExtension

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class AceGenerator extends AbstractGenerator {

	@Inject
	ES6Template es6Template;

	@Inject
	JavaTemplate javaTemplate;

	@Inject
	extension ActionExtension

	@Inject
	extension CommandExtension

	@Inject
	extension EventExtension

	@Inject
	extension ViewExtension

	@Inject
	extension ProjectExtension

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		if (resource != null && resource.contents != null && resource.contents.size > 0) {
			val project = resource.contents.get(0) as Project

			if (project.target == 'ES6') {
				for (action : project.actions) {
					fsa.generateFile(project.name + '/actions/' + action.abstractActionName + '.es6',
						IFileSystemAccess.DEFAULT_OUTPUT, es6Template.generateAbstractActionFile(action));
					fsa.generateFile(project.name + '/actions/' + action.actionName + '.es6',
						ACEOutputConfigurationProvider.DEFAULT_JAVASCRIPT_OUTPUT_ONCE,
						es6Template.generateInitialActionFile(action));
				}
				for (command : project.commands) {
					fsa.generateFile(project.name + '/commands/' + command.abstractCommandName + '.es6',
						IFileSystemAccess.DEFAULT_OUTPUT, es6Template.generateAbstractCommandFile(command));
					fsa.generateFile(project.name + '/commands/' + command.commandName + '.es6',
						ACEOutputConfigurationProvider.DEFAULT_JAVASCRIPT_OUTPUT_ONCE,
						es6Template.generateInitialCommandFile(command));
				}
				fsa.generateFile(project.name + '/EventListenerRegistration.es6', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateEventListenerRegistration(project));
				for (event : project.events) {
					fsa.generateFile(project.name + '/events/' + event.abstractEventName + '.es6',
						IFileSystemAccess.DEFAULT_OUTPUT, es6Template.generateAbstractEventFile(event));
					fsa.generateFile(project.name + '/events/' + event.eventName + '.es6',
						ACEOutputConfigurationProvider.DEFAULT_JAVASCRIPT_OUTPUT_ONCE, es6Template.generateInitialEventFile(event));
				}
				for (view : project.views) {
					fsa.generateFile(project.name + '/' + view.viewName + '.es6',
						ACEOutputConfigurationProvider.DEFAULT_JAVASCRIPT_OUTPUT_ONCE, es6Template.generateView(view));
				}
				fsa.generateFile(project.name + '/htmlDev.snippet', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateHtmlDevSnippet(project));
				fsa.generateFile('ace/Action.es6', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateAction());
				fsa.generateFile('ace/Command.es6', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateCommand());
				fsa.generateFile('ace/Event.es6', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateEvent());
				fsa.generateFile('ace/ACEController.es6', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateACEController());
				fsa.generateFile('ace/TriggerAction.es6', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateTriggerAction());
				fsa.generateFile('ace/UUID.js', IFileSystemAccess.DEFAULT_OUTPUT,
					es6Template.generateUUID());
			} else if (project.target == 'JAVA') {
				for (action : project.actions) {
					fsa.generateFile(project.packageFolder + '/actions/' + action.abstractActionName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT,
						javaTemplate.generateAbstractActionFile(action, project));
					fsa.generateFile(project.packageFolder + '/actions/' + action.actionName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT_ONCE,
						javaTemplate.generateInitialActionFile(action, project));
					fsa.generateFile(project.packageFolder + '/resources/' + action.resourceName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT_ONCE,
						javaTemplate.generateInitialResourceFile(action, project));
				}
				for (command : project.commands) {
					fsa.generateFile(project.packageFolder + '/commands/' + command.abstractCommandName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT,
						javaTemplate.generateAbstractCommandFile(command, project));
					fsa.generateFile(project.packageFolder + '/commands/' + command.commandName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT_ONCE,
						javaTemplate.generateInitialCommandFile(command, project));
				}
				for (event : project.events) {
					fsa.generateFile(project.packageFolder + '/events/' + event.abstractEventName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT,
						javaTemplate.generateAbstractEventFile(event, project));
					fsa.generateFile(project.packageFolder + '/events/' + event.eventName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT_ONCE,
						javaTemplate.generateInitialEventFile(event, project));
				}
				for (view : project.views) {
					fsa.generateFile(project.packageFolder + '/views/' + view.viewName + '.java',
						ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT_ONCE, javaTemplate.generateView(view, project));
				}
				fsa.generateFile(project.packageFolder + '/AppRegistration.java',
					ACEOutputConfigurationProvider.DEFAULT_JAVA_OUTPUT, javaTemplate.generateAppRegistration(project));
			}
		}
	}
}
