grammar com.anfelisa.Ace with org.eclipse.xtext.common.Terminals

generate ace "http://www.anfelisa.com/Ace"

Project: 
	{Project} 'ES6' es6 = ES6 ? | 'JAVA' java = JAVA ?
;

ES6: 
	name = QualifiedName
	('ACE' (aceOperations += ES6_ACE)*)?
	('views' (views += ES6_View)* )?
	('models' (models += ES6_StateElement)* )?
;

ES6_ACE: 
	name = ID  ('<' input += ID (',' input += ID)* '>')?  
	('preCall' '(' (preCall += [ES6_ViewFunction | QualifiedName])* ')')? 
	('call' serverCall = [JAVA_ACE | QualifiedName] )? 
	('postCall' '(' (postCall += [ES6_ViewFunction | QualifiedName])* ')')? 
	(outcomes += ES6_Outcome)*
;

ES6_Outcome:
	'on' name = ID 
	('(' (listeners += [ES6_ViewFunction | QualifiedName])* ')')? 
	('triggers' '(' (aceOperations += [ES6_ACE | QualifiedName])* ')')? 
;

ES6_View: 
	name = ID ('{'
		(renderFunctions += ES6_ViewFunction)*
	'}')*
;

ES6_ViewFunction:
	name = ID
;

ES6_StateElement:
	name = ID ('extends' superModels+=[Model|QualifiedName] (',' superModels+=[Model|QualifiedName])* )? ('{'
		elements += ES6_StateElementDefinition* 
	'}')?
;

ES6_StateElementDefinition:
	list ?= 'List'? name = ID ('{' types += [ES6_StateElement | QualifiedName] ('|' types += [ES6_StateElement | QualifiedName])* '}')?
;

JAVA:
	name = QualifiedName
	('Authorization' authUser = AuthUser)?
	('import' authUserRef = [AuthUser | QualifiedName])?
	('ACE' (aceOperations += JAVA_ACE)*	)?
	('views' (views += JAVA_View)* )?
	('models' 'schema' schema = ID (models += Model)*)?
;

JAVA_ACE: 
	name = ID '<' model = [ Model | QualifiedName ] '>' 
	type = FunctionType
	url = STRING
	authorize ?= 'authorize'? 
	('pathParams' (pathParams += [Attribute | QualifiedName])*)?
	('queryParams' (queryParams += [Attribute | QualifiedName])*)?
	('payload' (payload += [Attribute | QualifiedName])*)?
	('response' (response += [Attribute | QualifiedName])*)?
	(outcomes += JAVA_Outcome)*
;

JAVA_Outcome:
	'on' name = ID 
	('('(listeners += [JAVA_ViewFunction | QualifiedName])*')')* 
;

JAVA_View: 
	external ?= 'external'? name = ID 
	('{'
		(renderFunctions += JAVA_ViewFunction)*
	'}')?		
;

JAVA_ViewFunction:
	name = ID '(' model = [ Model | QualifiedName ] ')'
;

AuthUser: 
	name = ID
	 ('{'
		attributes += Attribute*
	'}')
;

Model:
	persistent ?= 'persistent'? name = ID ('extends' superModels+=[Model|QualifiedName] (',' superModels+=[Model|QualifiedName])* )? ('{'
		attributes += Attribute*
	'}')?
;

Attribute:
	unique ?= 'Unique'? primaryKey ?= 'PrimaryKey'? (constraint = Constraint)? list ?= 'List'? (type = Type | model = [Model | QualifiedName]) name = ID ('references' foreignKey = [Attribute | QualifiedName])? (notReplayable ?= 'notReplayable')?
;

QualifiedName:
  ID ('.' ID)*
;

FunctionType:
	'POST' | 'PUT' | 'DELETE' | 'GET'
;

Type:
	'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long'
;

Constraint:
	'NotEmpty' | 'NotNull'
;

