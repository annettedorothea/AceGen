/*
 * generated by Xtext 2.10.0
 */
package com.anfelisa.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AceGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQualifiedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cTargetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cTargetAlternatives_2_0 = (Alternatives)cTargetAssignment_2.eContents().get(0);
		private final Keyword cTargetES6Keyword_2_0_0 = (Keyword)cTargetAlternatives_2_0.eContents().get(0);
		private final Keyword cTargetJAVAKeyword_2_0_1 = (Keyword)cTargetAlternatives_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cModelsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cModelsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cModelsModelParserRuleCall_3_2_0 = (RuleCall)cModelsAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDataKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDataAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDataDataParserRuleCall_4_2_0 = (RuleCall)cDataAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cActionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cActionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_5_2_0 = (RuleCall)cActionsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommandsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cCommandsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cCommandsCommandParserRuleCall_6_2_0 = (RuleCall)cCommandsAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cEventsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cEventsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cEventsEventParserRuleCall_7_2_0 = (RuleCall)cEventsAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cViewsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cViewsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cViewsViewParserRuleCall_8_2_0 = (RuleCall)cViewsAssignment_8_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//Project:
		//	name=QualifiedName
		//	'target' target=('ES6' | 'JAVA') ('models' '{'
		//	models+=Model*
		//	'}')* ('data' '{'
		//	data+=Data*
		//	'}')* ('actions' '{'
		//	actions+=Action*
		//	'}')* ('commands' '{'
		//	commands+=Command*
		//	'}')* ('events' '{'
		//	events+=Event*
		//	'}')* ('views' '{'
		//	views+=View*
		//	'}')*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QualifiedName 'target' target=('ES6' | 'JAVA') ('models' '{' models+=Model* '}')* ('data' '{' data+=Data* '}')*
		//('actions' '{' actions+=Action* '}')* ('commands' '{' commands+=Command* '}')* ('events' '{' events+=Event* '}')*
		//('views' '{' views+=View* '}')*
		public Group getGroup() { return cGroup; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0_0() { return cNameQualifiedNameParserRuleCall_0_0; }
		
		//'target'
		public Keyword getTargetKeyword_1() { return cTargetKeyword_1; }
		
		//target=('ES6' | 'JAVA')
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//('ES6' | 'JAVA')
		public Alternatives getTargetAlternatives_2_0() { return cTargetAlternatives_2_0; }
		
		//'ES6'
		public Keyword getTargetES6Keyword_2_0_0() { return cTargetES6Keyword_2_0_0; }
		
		//'JAVA'
		public Keyword getTargetJAVAKeyword_2_0_1() { return cTargetJAVAKeyword_2_0_1; }
		
		//('models' '{' models+=Model* '}')*
		public Group getGroup_3() { return cGroup_3; }
		
		//'models'
		public Keyword getModelsKeyword_3_0() { return cModelsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//models+=Model*
		public Assignment getModelsAssignment_3_2() { return cModelsAssignment_3_2; }
		
		//Model
		public RuleCall getModelsModelParserRuleCall_3_2_0() { return cModelsModelParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
		
		//('data' '{' data+=Data* '}')*
		public Group getGroup_4() { return cGroup_4; }
		
		//'data'
		public Keyword getDataKeyword_4_0() { return cDataKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//data+=Data*
		public Assignment getDataAssignment_4_2() { return cDataAssignment_4_2; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_2_0() { return cDataDataParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
		
		//('actions' '{' actions+=Action* '}')*
		public Group getGroup_5() { return cGroup_5; }
		
		//'actions'
		public Keyword getActionsKeyword_5_0() { return cActionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//actions+=Action*
		public Assignment getActionsAssignment_5_2() { return cActionsAssignment_5_2; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_5_2_0() { return cActionsActionParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
		
		//('commands' '{' commands+=Command* '}')*
		public Group getGroup_6() { return cGroup_6; }
		
		//'commands'
		public Keyword getCommandsKeyword_6_0() { return cCommandsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//commands+=Command*
		public Assignment getCommandsAssignment_6_2() { return cCommandsAssignment_6_2; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_6_2_0() { return cCommandsCommandParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }
		
		//('events' '{' events+=Event* '}')*
		public Group getGroup_7() { return cGroup_7; }
		
		//'events'
		public Keyword getEventsKeyword_7_0() { return cEventsKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//events+=Event*
		public Assignment getEventsAssignment_7_2() { return cEventsAssignment_7_2; }
		
		//Event
		public RuleCall getEventsEventParserRuleCall_7_2_0() { return cEventsEventParserRuleCall_7_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }
		
		//('views' '{' views+=View* '}')*
		public Group getGroup_8() { return cGroup_8; }
		
		//'views'
		public Keyword getViewsKeyword_8_0() { return cViewsKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//views+=View*
		public Assignment getViewsAssignment_8_2() { return cViewsAssignment_8_2; }
		
		//View
		public RuleCall getViewsViewParserRuleCall_8_2_0() { return cViewsViewParserRuleCall_8_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_3() { return cRightCurlyBracketKeyword_8_3; }
	}
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPersistentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPersistentPersistentKeyword_0_0 = (Keyword)cPersistentAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Model:
		//	persistent?='persistent'? name=ID '('
		//	attributes+=Attribute*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//persistent?='persistent'? name=ID '(' attributes+=Attribute* ')'
		public Group getGroup() { return cGroup; }
		
		//persistent?='persistent'?
		public Assignment getPersistentAssignment_0() { return cPersistentAssignment_0; }
		
		//'persistent'
		public Keyword getPersistentPersistentKeyword_0_0() { return cPersistentPersistentKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cModelsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cModelsModelCrossReference_3_0 = (CrossReference)cModelsAssignment_3.eContents().get(0);
		private final RuleCall cModelsModelQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cModelsModelCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Data:
		//	name=ID ':' '('
		//	models+=[Model|QualifiedName]*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' '(' models+=[Model|QualifiedName]* ')'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//models+=[Model|QualifiedName]*
		public Assignment getModelsAssignment_3() { return cModelsAssignment_3; }
		
		//[Model|QualifiedName]
		public CrossReference getModelsModelCrossReference_3_0() { return cModelsModelCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getModelsModelQualifiedNameParserRuleCall_3_0_1() { return cModelsModelQualifiedNameParserRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cUniqueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cUniqueUniqueKeyword_0_0 = (Keyword)cUniqueAssignment_0.eContents().get(0);
		private final Assignment cPrimaryKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPrimaryKeyPrimaryKeyKeyword_1_0 = (Keyword)cPrimaryKeyAssignment_1.eContents().get(0);
		private final Assignment cConstraintAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConstraintConstraintParserRuleCall_2_0 = (RuleCall)cConstraintAssignment_2.eContents().get(0);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeModelTypeParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cReferencesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cForeignKeyAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cForeignKeyAttributeCrossReference_5_1_0 = (CrossReference)cForeignKeyAssignment_5_1.eContents().get(0);
		private final RuleCall cForeignKeyAttributeQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cForeignKeyAttributeCrossReference_5_1_0.eContents().get(1);
		
		//Attribute:
		//	unique?='Unique'? primaryKey?='PrimaryKey'? constraint=Constraint? type=ModelType name=ID ('references'
		//	foreignKey=[Attribute|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//unique?='Unique'? primaryKey?='PrimaryKey'? constraint=Constraint? type=ModelType name=ID ('references'
		//foreignKey=[Attribute|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//unique?='Unique'?
		public Assignment getUniqueAssignment_0() { return cUniqueAssignment_0; }
		
		//'Unique'
		public Keyword getUniqueUniqueKeyword_0_0() { return cUniqueUniqueKeyword_0_0; }
		
		//primaryKey?='PrimaryKey'?
		public Assignment getPrimaryKeyAssignment_1() { return cPrimaryKeyAssignment_1; }
		
		//'PrimaryKey'
		public Keyword getPrimaryKeyPrimaryKeyKeyword_1_0() { return cPrimaryKeyPrimaryKeyKeyword_1_0; }
		
		//constraint=Constraint?
		public Assignment getConstraintAssignment_2() { return cConstraintAssignment_2; }
		
		//Constraint
		public RuleCall getConstraintConstraintParserRuleCall_2_0() { return cConstraintConstraintParserRuleCall_2_0; }
		
		//type=ModelType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//ModelType
		public RuleCall getTypeModelTypeParserRuleCall_3_0() { return cTypeModelTypeParserRuleCall_3_0; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('references' foreignKey=[Attribute|QualifiedName])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'references'
		public Keyword getReferencesKeyword_5_0() { return cReferencesKeyword_5_0; }
		
		//foreignKey=[Attribute|QualifiedName]
		public Assignment getForeignKeyAssignment_5_1() { return cForeignKeyAssignment_5_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getForeignKeyAttributeCrossReference_5_1_0() { return cForeignKeyAttributeCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getForeignKeyAttributeQualifiedNameParserRuleCall_5_1_0_1() { return cForeignKeyAttributeQualifiedNameParserRuleCall_5_1_0_1; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeFunctionTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cUsesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDataAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cDataDataCrossReference_2_1_0 = (CrossReference)cDataAssignment_2_1.eContents().get(0);
		private final RuleCall cDataDataQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cDataDataCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExecutesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommandAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cCommandCommandCrossReference_3_1_0 = (CrossReference)cCommandAssignment_3_1.eContents().get(0);
		private final RuleCall cCommandCommandQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cCommandCommandCrossReference_3_1_0.eContents().get(1);
		
		//Action:
		//	type=FunctionType? name=ID ('uses' data=[Data|QualifiedName])? ('executes' command=[Command|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=FunctionType? name=ID ('uses' data=[Data|QualifiedName])? ('executes' command=[Command|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//type=FunctionType?
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//FunctionType
		public RuleCall getTypeFunctionTypeParserRuleCall_0_0() { return cTypeFunctionTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('uses' data=[Data|QualifiedName])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'uses'
		public Keyword getUsesKeyword_2_0() { return cUsesKeyword_2_0; }
		
		//data=[Data|QualifiedName]
		public Assignment getDataAssignment_2_1() { return cDataAssignment_2_1; }
		
		//[Data|QualifiedName]
		public CrossReference getDataDataCrossReference_2_1_0() { return cDataDataCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getDataDataQualifiedNameParserRuleCall_2_1_0_1() { return cDataDataQualifiedNameParserRuleCall_2_1_0_1; }
		
		//('executes' command=[Command|QualifiedName])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'executes'
		public Keyword getExecutesKeyword_3_0() { return cExecutesKeyword_3_0; }
		
		//command=[Command|QualifiedName]
		public Assignment getCommandAssignment_3_1() { return cCommandAssignment_3_1; }
		
		//[Command|QualifiedName]
		public CrossReference getCommandCommandCrossReference_3_1_0() { return cCommandCommandCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getCommandCommandQualifiedNameParserRuleCall_3_1_0_1() { return cCommandCommandQualifiedNameParserRuleCall_3_1_0_1; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cUsesKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDataAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cDataDataCrossReference_1_1_0 = (CrossReference)cDataAssignment_1_1.eContents().get(0);
		private final RuleCall cDataDataQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cDataDataCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cEventsOnOutcomeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cEventsOnOutcomeEventOnOutcomeParserRuleCall_2_1_0 = (RuleCall)cEventsOnOutcomeAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//Command:
		//	name=ID ('uses' data=[Data|QualifiedName])? ('{'
		//	eventsOnOutcome+=EventOnOutcome*
		//	'}')*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('uses' data=[Data|QualifiedName])? ('{' eventsOnOutcome+=EventOnOutcome* '}')*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('uses' data=[Data|QualifiedName])?
		public Group getGroup_1() { return cGroup_1; }
		
		//'uses'
		public Keyword getUsesKeyword_1_0() { return cUsesKeyword_1_0; }
		
		//data=[Data|QualifiedName]
		public Assignment getDataAssignment_1_1() { return cDataAssignment_1_1; }
		
		//[Data|QualifiedName]
		public CrossReference getDataDataCrossReference_1_1_0() { return cDataDataCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getDataDataQualifiedNameParserRuleCall_1_1_0_1() { return cDataDataQualifiedNameParserRuleCall_1_1_0_1; }
		
		//('{' eventsOnOutcome+=EventOnOutcome* '}')*
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//eventsOnOutcome+=EventOnOutcome*
		public Assignment getEventsOnOutcomeAssignment_2_1() { return cEventsOnOutcomeAssignment_2_1; }
		
		//EventOnOutcome
		public RuleCall getEventsOnOutcomeEventOnOutcomeParserRuleCall_2_1_0() { return cEventsOnOutcomeEventOnOutcomeParserRuleCall_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}
	public class EventOnOutcomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.EventOnOutcome");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOutcomeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOutcomeIDTerminalRuleCall_1_0 = (RuleCall)cOutcomeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPublishesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cEventsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cEventsEventCrossReference_2_2_0 = (CrossReference)cEventsAssignment_2_2.eContents().get(0);
		private final RuleCall cEventsEventQualifiedNameParserRuleCall_2_2_0_1 = (RuleCall)cEventsEventCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTriggersKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cActionsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cActionsActionCrossReference_3_2_0 = (CrossReference)cActionsAssignment_3_2.eContents().get(0);
		private final RuleCall cActionsActionQualifiedNameParserRuleCall_3_2_0_1 = (RuleCall)cActionsActionCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//EventOnOutcome:
		//	'on' outcome=ID ('publishes' '(' events+=[Event|QualifiedName]* ')')? ('triggers' '(' actions+=[Action|QualifiedName]*
		//	')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'on' outcome=ID ('publishes' '(' events+=[Event|QualifiedName]* ')')? ('triggers' '(' actions+=[Action|QualifiedName]*
		//')')?
		public Group getGroup() { return cGroup; }
		
		//'on'
		public Keyword getOnKeyword_0() { return cOnKeyword_0; }
		
		//outcome=ID
		public Assignment getOutcomeAssignment_1() { return cOutcomeAssignment_1; }
		
		//ID
		public RuleCall getOutcomeIDTerminalRuleCall_1_0() { return cOutcomeIDTerminalRuleCall_1_0; }
		
		//('publishes' '(' events+=[Event|QualifiedName]* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'publishes'
		public Keyword getPublishesKeyword_2_0() { return cPublishesKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//events+=[Event|QualifiedName]*
		public Assignment getEventsAssignment_2_2() { return cEventsAssignment_2_2; }
		
		//[Event|QualifiedName]
		public CrossReference getEventsEventCrossReference_2_2_0() { return cEventsEventCrossReference_2_2_0; }
		
		//QualifiedName
		public RuleCall getEventsEventQualifiedNameParserRuleCall_2_2_0_1() { return cEventsEventQualifiedNameParserRuleCall_2_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//('triggers' '(' actions+=[Action|QualifiedName]* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'triggers'
		public Keyword getTriggersKeyword_3_0() { return cTriggersKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//actions+=[Action|QualifiedName]*
		public Assignment getActionsAssignment_3_2() { return cActionsAssignment_3_2; }
		
		//[Action|QualifiedName]
		public CrossReference getActionsActionCrossReference_3_2_0() { return cActionsActionCrossReference_3_2_0; }
		
		//QualifiedName
		public RuleCall getActionsActionQualifiedNameParserRuleCall_3_2_0_1() { return cActionsActionQualifiedNameParserRuleCall_3_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cUsesKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDataAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cDataDataCrossReference_1_1_0 = (CrossReference)cDataAssignment_1_1.eContents().get(0);
		private final RuleCall cDataDataQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cDataDataCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cListenedToByKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cListenersAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cListenersViewFunctionCrossReference_2_2_0 = (CrossReference)cListenersAssignment_2_2.eContents().get(0);
		private final RuleCall cListenersViewFunctionQualifiedNameParserRuleCall_2_2_0_1 = (RuleCall)cListenersViewFunctionCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//Event:
		//	name=ID ('uses' data=[Data|QualifiedName])? ('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('uses' data=[Data|QualifiedName])? ('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('uses' data=[Data|QualifiedName])?
		public Group getGroup_1() { return cGroup_1; }
		
		//'uses'
		public Keyword getUsesKeyword_1_0() { return cUsesKeyword_1_0; }
		
		//data=[Data|QualifiedName]
		public Assignment getDataAssignment_1_1() { return cDataAssignment_1_1; }
		
		//[Data|QualifiedName]
		public CrossReference getDataDataCrossReference_1_1_0() { return cDataDataCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getDataDataQualifiedNameParserRuleCall_1_1_0_1() { return cDataDataQualifiedNameParserRuleCall_1_1_0_1; }
		
		//('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'listenedToBy'
		public Keyword getListenedToByKeyword_2_0() { return cListenedToByKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//listeners+=[ViewFunction|QualifiedName]*
		public Assignment getListenersAssignment_2_2() { return cListenersAssignment_2_2; }
		
		//[ViewFunction|QualifiedName]
		public CrossReference getListenersViewFunctionCrossReference_2_2_0() { return cListenersViewFunctionCrossReference_2_2_0; }
		
		//QualifiedName
		public RuleCall getListenersViewFunctionQualifiedNameParserRuleCall_2_2_0_1() { return cListenersViewFunctionQualifiedNameParserRuleCall_2_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
	}
	public class ViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.View");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRenderFunctionsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRenderFunctionsViewFunctionParserRuleCall_1_1_0 = (RuleCall)cRenderFunctionsAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//View:
		//	name=ID ('{'
		//	renderFunctions+=ViewFunction*
		//	'}')*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('{' renderFunctions+=ViewFunction* '}')*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('{' renderFunctions+=ViewFunction* '}')*
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//renderFunctions+=ViewFunction*
		public Assignment getRenderFunctionsAssignment_1_1() { return cRenderFunctionsAssignment_1_1; }
		
		//ViewFunction
		public RuleCall getRenderFunctionsViewFunctionParserRuleCall_1_1_0() { return cRenderFunctionsViewFunctionParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ViewFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.ViewFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDataAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cDataDataCrossReference_1_1_0 = (CrossReference)cDataAssignment_1_1.eContents().get(0);
		private final RuleCall cDataDataQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cDataDataCrossReference_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//ViewFunction:
		//	name=ID ('(' data=[Data|QualifiedName] ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('(' data=[Data|QualifiedName] ')')?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('(' data=[Data|QualifiedName] ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//data=[Data|QualifiedName]
		public Assignment getDataAssignment_1_1() { return cDataAssignment_1_1; }
		
		//[Data|QualifiedName]
		public CrossReference getDataDataCrossReference_1_1_0() { return cDataDataCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getDataDataQualifiedNameParserRuleCall_1_1_0_1() { return cDataDataQualifiedNameParserRuleCall_1_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class FunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.FunctionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPOSTKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPUTKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDELETEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGETKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//FunctionType:
		//	'POST' | 'PUT' | 'DELETE' | 'GET';
		@Override public ParserRule getRule() { return rule; }
		
		//'POST' | 'PUT' | 'DELETE' | 'GET'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'POST'
		public Keyword getPOSTKeyword_0() { return cPOSTKeyword_0; }
		
		//'PUT'
		public Keyword getPUTKeyword_1() { return cPUTKeyword_1; }
		
		//'DELETE'
		public Keyword getDELETEKeyword_2() { return cDELETEKeyword_2; }
		
		//'GET'
		public Keyword getGETKeyword_3() { return cGETKeyword_3; }
	}
	public class ModelTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.ModelType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSerialKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cIntegerKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cStringKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFloatKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cBooleanKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cDateTimeKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cLongKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//ModelType:
		//	'Serial' | 'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long';
		@Override public ParserRule getRule() { return rule; }
		
		//'Serial' | 'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Serial'
		public Keyword getSerialKeyword_0() { return cSerialKeyword_0; }
		
		//'Integer'
		public Keyword getIntegerKeyword_1() { return cIntegerKeyword_1; }
		
		//'String'
		public Keyword getStringKeyword_2() { return cStringKeyword_2; }
		
		//'Float'
		public Keyword getFloatKeyword_3() { return cFloatKeyword_3; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_4() { return cBooleanKeyword_4; }
		
		//'DateTime'
		public Keyword getDateTimeKeyword_5() { return cDateTimeKeyword_5; }
		
		//'Long'
		public Keyword getLongKeyword_6() { return cLongKeyword_6; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Constraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cNotEmptyKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNotNullKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Constraint:
		//	'NotEmpty' | 'NotNull';
		@Override public ParserRule getRule() { return rule; }
		
		//'NotEmpty' | 'NotNull'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'NotEmpty'
		public Keyword getNotEmptyKeyword_0() { return cNotEmptyKeyword_0; }
		
		//'NotNull'
		public Keyword getNotNullKeyword_1() { return cNotNullKeyword_1; }
	}
	
	
	private final ProjectElements pProject;
	private final ModelElements pModel;
	private final DataElements pData;
	private final AttributeElements pAttribute;
	private final ActionElements pAction;
	private final CommandElements pCommand;
	private final EventOnOutcomeElements pEventOnOutcome;
	private final EventElements pEvent;
	private final ViewElements pView;
	private final ViewFunctionElements pViewFunction;
	private final QualifiedNameElements pQualifiedName;
	private final FunctionTypeElements pFunctionType;
	private final ModelTypeElements pModelType;
	private final ConstraintElements pConstraint;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AceGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProject = new ProjectElements();
		this.pModel = new ModelElements();
		this.pData = new DataElements();
		this.pAttribute = new AttributeElements();
		this.pAction = new ActionElements();
		this.pCommand = new CommandElements();
		this.pEventOnOutcome = new EventOnOutcomeElements();
		this.pEvent = new EventElements();
		this.pView = new ViewElements();
		this.pViewFunction = new ViewFunctionElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pFunctionType = new FunctionTypeElements();
		this.pModelType = new ModelTypeElements();
		this.pConstraint = new ConstraintElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.anfelisa.Ace".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Project:
	//	name=QualifiedName
	//	'target' target=('ES6' | 'JAVA') ('models' '{'
	//	models+=Model*
	//	'}')* ('data' '{'
	//	data+=Data*
	//	'}')* ('actions' '{'
	//	actions+=Action*
	//	'}')* ('commands' '{'
	//	commands+=Command*
	//	'}')* ('events' '{'
	//	events+=Event*
	//	'}')* ('views' '{'
	//	views+=View*
	//	'}')*;
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//Model:
	//	persistent?='persistent'? name=ID '('
	//	attributes+=Attribute*
	//	')';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Data:
	//	name=ID ':' '('
	//	models+=[Model|QualifiedName]*
	//	')';
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}
	
	//Attribute:
	//	unique?='Unique'? primaryKey?='PrimaryKey'? constraint=Constraint? type=ModelType name=ID ('references'
	//	foreignKey=[Attribute|QualifiedName])?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Action:
	//	type=FunctionType? name=ID ('uses' data=[Data|QualifiedName])? ('executes' command=[Command|QualifiedName])?;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Command:
	//	name=ID ('uses' data=[Data|QualifiedName])? ('{'
	//	eventsOnOutcome+=EventOnOutcome*
	//	'}')*;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//EventOnOutcome:
	//	'on' outcome=ID ('publishes' '(' events+=[Event|QualifiedName]* ')')? ('triggers' '(' actions+=[Action|QualifiedName]*
	//	')')?;
	public EventOnOutcomeElements getEventOnOutcomeAccess() {
		return pEventOnOutcome;
	}
	
	public ParserRule getEventOnOutcomeRule() {
		return getEventOnOutcomeAccess().getRule();
	}
	
	//Event:
	//	name=ID ('uses' data=[Data|QualifiedName])? ('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//View:
	//	name=ID ('{'
	//	renderFunctions+=ViewFunction*
	//	'}')*;
	public ViewElements getViewAccess() {
		return pView;
	}
	
	public ParserRule getViewRule() {
		return getViewAccess().getRule();
	}
	
	//ViewFunction:
	//	name=ID ('(' data=[Data|QualifiedName] ')')?;
	public ViewFunctionElements getViewFunctionAccess() {
		return pViewFunction;
	}
	
	public ParserRule getViewFunctionRule() {
		return getViewFunctionAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//FunctionType:
	//	'POST' | 'PUT' | 'DELETE' | 'GET';
	public FunctionTypeElements getFunctionTypeAccess() {
		return pFunctionType;
	}
	
	public ParserRule getFunctionTypeRule() {
		return getFunctionTypeAccess().getRule();
	}
	
	//ModelType:
	//	'Serial' | 'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long';
	public ModelTypeElements getModelTypeAccess() {
		return pModelType;
	}
	
	public ParserRule getModelTypeRule() {
		return getModelTypeAccess().getRule();
	}
	
	//Constraint:
	//	'NotEmpty' | 'NotNull';
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
