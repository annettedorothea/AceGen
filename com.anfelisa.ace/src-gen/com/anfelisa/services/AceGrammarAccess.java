/*
 * generated by Xtext 2.10.0
 */
package com.anfelisa.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AceGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQualifiedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cTargetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cTargetAlternatives_2_0 = (Alternatives)cTargetAssignment_2.eContents().get(0);
		private final Keyword cTargetES6Keyword_2_0_0 = (Keyword)cTargetAlternatives_2_0.eContents().get(0);
		private final Keyword cTargetJAVAKeyword_2_0_1 = (Keyword)cTargetAlternatives_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cActionsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cActionsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_3_2_0 = (RuleCall)cActionsAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommandsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCommandsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCommandsCommandParserRuleCall_4_2_0 = (RuleCall)cCommandsAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEventsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cEventsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cEventsEventParserRuleCall_5_2_0 = (RuleCall)cEventsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cViewsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cViewsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cViewsViewParserRuleCall_6_2_0 = (RuleCall)cViewsAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//Project:
		//	name=QualifiedName
		//	'target' target=('ES6' | 'JAVA') ('actions' '{'
		//	actions+=Action*
		//	'}')* ('commands' '{'
		//	commands+=Command*
		//	'}')* ('events' '{'
		//	events+=Event*
		//	'}')* ('views' '{'
		//	views+=View*
		//	'}')*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=QualifiedName 'target' target=('ES6' | 'JAVA') ('actions' '{' actions+=Action* '}')* ('commands' '{'
		//commands+=Command* '}')* ('events' '{' events+=Event* '}')* ('views' '{' views+=View* '}')*
		public Group getGroup() { return cGroup; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0_0() { return cNameQualifiedNameParserRuleCall_0_0; }
		
		//'target'
		public Keyword getTargetKeyword_1() { return cTargetKeyword_1; }
		
		//target=('ES6' | 'JAVA')
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//('ES6' | 'JAVA')
		public Alternatives getTargetAlternatives_2_0() { return cTargetAlternatives_2_0; }
		
		//'ES6'
		public Keyword getTargetES6Keyword_2_0_0() { return cTargetES6Keyword_2_0_0; }
		
		//'JAVA'
		public Keyword getTargetJAVAKeyword_2_0_1() { return cTargetJAVAKeyword_2_0_1; }
		
		//('actions' '{' actions+=Action* '}')*
		public Group getGroup_3() { return cGroup_3; }
		
		//'actions'
		public Keyword getActionsKeyword_3_0() { return cActionsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//actions+=Action*
		public Assignment getActionsAssignment_3_2() { return cActionsAssignment_3_2; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_3_2_0() { return cActionsActionParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
		
		//('commands' '{' commands+=Command* '}')*
		public Group getGroup_4() { return cGroup_4; }
		
		//'commands'
		public Keyword getCommandsKeyword_4_0() { return cCommandsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//commands+=Command*
		public Assignment getCommandsAssignment_4_2() { return cCommandsAssignment_4_2; }
		
		//Command
		public RuleCall getCommandsCommandParserRuleCall_4_2_0() { return cCommandsCommandParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
		
		//('events' '{' events+=Event* '}')*
		public Group getGroup_5() { return cGroup_5; }
		
		//'events'
		public Keyword getEventsKeyword_5_0() { return cEventsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//events+=Event*
		public Assignment getEventsAssignment_5_2() { return cEventsAssignment_5_2; }
		
		//Event
		public RuleCall getEventsEventParserRuleCall_5_2_0() { return cEventsEventParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
		
		//('views' '{' views+=View* '}')*
		public Group getGroup_6() { return cGroup_6; }
		
		//'views'
		public Keyword getViewsKeyword_6_0() { return cViewsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//views+=View*
		public Assignment getViewsAssignment_6_2() { return cViewsAssignment_6_2; }
		
		//View
		public RuleCall getViewsViewParserRuleCall_6_2_0() { return cViewsViewParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeFunctionTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExecutesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommandAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cCommandCommandCrossReference_2_1_0 = (CrossReference)cCommandAssignment_2_1.eContents().get(0);
		private final RuleCall cCommandCommandQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cCommandCommandCrossReference_2_1_0.eContents().get(1);
		
		//Action:
		//	type=FunctionType? name=ID ('executes' command=[Command|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=FunctionType? name=ID ('executes' command=[Command|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//type=FunctionType?
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//FunctionType
		public RuleCall getTypeFunctionTypeParserRuleCall_0_0() { return cTypeFunctionTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('executes' command=[Command|QualifiedName])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'executes'
		public Keyword getExecutesKeyword_2_0() { return cExecutesKeyword_2_0; }
		
		//command=[Command|QualifiedName]
		public Assignment getCommandAssignment_2_1() { return cCommandAssignment_2_1; }
		
		//[Command|QualifiedName]
		public CrossReference getCommandCommandCrossReference_2_1_0() { return cCommandCommandCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getCommandCommandQualifiedNameParserRuleCall_2_1_0_1() { return cCommandCommandQualifiedNameParserRuleCall_2_1_0_1; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Command");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEventsOnOutcomeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEventsOnOutcomeEventOnOutcomeParserRuleCall_1_1_0 = (RuleCall)cEventsOnOutcomeAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Command:
		//	name=ID ('{'
		//	eventsOnOutcome+=EventOnOutcome*
		//	'}')*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('{' eventsOnOutcome+=EventOnOutcome* '}')*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('{' eventsOnOutcome+=EventOnOutcome* '}')*
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//eventsOnOutcome+=EventOnOutcome*
		public Assignment getEventsOnOutcomeAssignment_1_1() { return cEventsOnOutcomeAssignment_1_1; }
		
		//EventOnOutcome
		public RuleCall getEventsOnOutcomeEventOnOutcomeParserRuleCall_1_1_0() { return cEventsOnOutcomeEventOnOutcomeParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class EventOnOutcomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.EventOnOutcome");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOutcomeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOutcomeIDTerminalRuleCall_1_0 = (RuleCall)cOutcomeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPublishesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cEventsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cEventsEventCrossReference_2_2_0 = (CrossReference)cEventsAssignment_2_2.eContents().get(0);
		private final RuleCall cEventsEventQualifiedNameParserRuleCall_2_2_0_1 = (RuleCall)cEventsEventCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTriggersKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cActionsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cActionsActionCrossReference_3_2_0 = (CrossReference)cActionsAssignment_3_2.eContents().get(0);
		private final RuleCall cActionsActionQualifiedNameParserRuleCall_3_2_0_1 = (RuleCall)cActionsActionCrossReference_3_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//EventOnOutcome:
		//	'on' outcome=ID ('publishes' '(' events+=[Event|QualifiedName]* ')')? ('triggers' '(' actions+=[Action|QualifiedName]*
		//	')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'on' outcome=ID ('publishes' '(' events+=[Event|QualifiedName]* ')')? ('triggers' '(' actions+=[Action|QualifiedName]*
		//')')?
		public Group getGroup() { return cGroup; }
		
		//'on'
		public Keyword getOnKeyword_0() { return cOnKeyword_0; }
		
		//outcome=ID
		public Assignment getOutcomeAssignment_1() { return cOutcomeAssignment_1; }
		
		//ID
		public RuleCall getOutcomeIDTerminalRuleCall_1_0() { return cOutcomeIDTerminalRuleCall_1_0; }
		
		//('publishes' '(' events+=[Event|QualifiedName]* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'publishes'
		public Keyword getPublishesKeyword_2_0() { return cPublishesKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//events+=[Event|QualifiedName]*
		public Assignment getEventsAssignment_2_2() { return cEventsAssignment_2_2; }
		
		//[Event|QualifiedName]
		public CrossReference getEventsEventCrossReference_2_2_0() { return cEventsEventCrossReference_2_2_0; }
		
		//QualifiedName
		public RuleCall getEventsEventQualifiedNameParserRuleCall_2_2_0_1() { return cEventsEventQualifiedNameParserRuleCall_2_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//('triggers' '(' actions+=[Action|QualifiedName]* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'triggers'
		public Keyword getTriggersKeyword_3_0() { return cTriggersKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//actions+=[Action|QualifiedName]*
		public Assignment getActionsAssignment_3_2() { return cActionsAssignment_3_2; }
		
		//[Action|QualifiedName]
		public CrossReference getActionsActionCrossReference_3_2_0() { return cActionsActionCrossReference_3_2_0; }
		
		//QualifiedName
		public RuleCall getActionsActionQualifiedNameParserRuleCall_3_2_0_1() { return cActionsActionQualifiedNameParserRuleCall_3_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cListenedToByKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cListenersAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cListenersViewFunctionCrossReference_1_2_0 = (CrossReference)cListenersAssignment_1_2.eContents().get(0);
		private final RuleCall cListenersViewFunctionQualifiedNameParserRuleCall_1_2_0_1 = (RuleCall)cListenersViewFunctionCrossReference_1_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//Event:
		//	name=ID ('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'listenedToBy'
		public Keyword getListenedToByKeyword_1_0() { return cListenedToByKeyword_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//listeners+=[ViewFunction|QualifiedName]*
		public Assignment getListenersAssignment_1_2() { return cListenersAssignment_1_2; }
		
		//[ViewFunction|QualifiedName]
		public CrossReference getListenersViewFunctionCrossReference_1_2_0() { return cListenersViewFunctionCrossReference_1_2_0; }
		
		//QualifiedName
		public RuleCall getListenersViewFunctionQualifiedNameParserRuleCall_1_2_0_1() { return cListenersViewFunctionQualifiedNameParserRuleCall_1_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
	}
	public class ViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.View");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRenderFunctionsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRenderFunctionsViewFunctionParserRuleCall_1_1_0 = (RuleCall)cRenderFunctionsAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//View:
		//	name=ID ('{'
		//	renderFunctions+=ViewFunction*
		//	'}')*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('{' renderFunctions+=ViewFunction* '}')*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('{' renderFunctions+=ViewFunction* '}')*
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//renderFunctions+=ViewFunction*
		public Assignment getRenderFunctionsAssignment_1_1() { return cRenderFunctionsAssignment_1_1; }
		
		//ViewFunction
		public RuleCall getRenderFunctionsViewFunctionParserRuleCall_1_1_0() { return cRenderFunctionsViewFunctionParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ViewFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.ViewFunction");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//ViewFunction:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class FunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.anfelisa.Ace.FunctionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPOSTKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPUTKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDELETEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGETKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//FunctionType:
		//	'POST' | 'PUT' | 'DELETE' | 'GET';
		@Override public ParserRule getRule() { return rule; }
		
		//'POST' | 'PUT' | 'DELETE' | 'GET'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'POST'
		public Keyword getPOSTKeyword_0() { return cPOSTKeyword_0; }
		
		//'PUT'
		public Keyword getPUTKeyword_1() { return cPUTKeyword_1; }
		
		//'DELETE'
		public Keyword getDELETEKeyword_2() { return cDELETEKeyword_2; }
		
		//'GET'
		public Keyword getGETKeyword_3() { return cGETKeyword_3; }
	}
	
	
	private final ProjectElements pProject;
	private final ActionElements pAction;
	private final CommandElements pCommand;
	private final EventOnOutcomeElements pEventOnOutcome;
	private final EventElements pEvent;
	private final ViewElements pView;
	private final ViewFunctionElements pViewFunction;
	private final QualifiedNameElements pQualifiedName;
	private final FunctionTypeElements pFunctionType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AceGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProject = new ProjectElements();
		this.pAction = new ActionElements();
		this.pCommand = new CommandElements();
		this.pEventOnOutcome = new EventOnOutcomeElements();
		this.pEvent = new EventElements();
		this.pView = new ViewElements();
		this.pViewFunction = new ViewFunctionElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pFunctionType = new FunctionTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.anfelisa.Ace".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Project:
	//	name=QualifiedName
	//	'target' target=('ES6' | 'JAVA') ('actions' '{'
	//	actions+=Action*
	//	'}')* ('commands' '{'
	//	commands+=Command*
	//	'}')* ('events' '{'
	//	events+=Event*
	//	'}')* ('views' '{'
	//	views+=View*
	//	'}')*;
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//Action:
	//	type=FunctionType? name=ID ('executes' command=[Command|QualifiedName])?;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Command:
	//	name=ID ('{'
	//	eventsOnOutcome+=EventOnOutcome*
	//	'}')*;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//EventOnOutcome:
	//	'on' outcome=ID ('publishes' '(' events+=[Event|QualifiedName]* ')')? ('triggers' '(' actions+=[Action|QualifiedName]*
	//	')')?;
	public EventOnOutcomeElements getEventOnOutcomeAccess() {
		return pEventOnOutcome;
	}
	
	public ParserRule getEventOnOutcomeRule() {
		return getEventOnOutcomeAccess().getRule();
	}
	
	//Event:
	//	name=ID ('listenedToBy' '(' listeners+=[ViewFunction|QualifiedName]* ')')?;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//View:
	//	name=ID ('{'
	//	renderFunctions+=ViewFunction*
	//	'}')*;
	public ViewElements getViewAccess() {
		return pView;
	}
	
	public ParserRule getViewRule() {
		return getViewAccess().getRule();
	}
	
	//ViewFunction:
	//	name=ID;
	public ViewFunctionElements getViewFunctionAccess() {
		return pViewFunction;
	}
	
	public ParserRule getViewFunctionRule() {
		return getViewFunctionAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//FunctionType:
	//	'POST' | 'PUT' | 'DELETE' | 'GET';
	public FunctionTypeElements getFunctionTypeAccess() {
		return pFunctionType;
	}
	
	public ParserRule getFunctionTypeRule() {
		return getFunctionTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
