/**
 * generated by Xtext 2.10.0
 */
package com.anfelisa.ace.impl;

import com.anfelisa.ace.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AceFactoryImpl extends EFactoryImpl implements AceFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AceFactory init()
  {
    try
    {
      AceFactory theAceFactory = (AceFactory)EPackage.Registry.INSTANCE.getEFactory(AcePackage.eNS_URI);
      if (theAceFactory != null)
      {
        return theAceFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AceFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AceFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AcePackage.PROJECT: return createProject();
      case AcePackage.MODEL: return createModel();
      case AcePackage.DATA: return createData();
      case AcePackage.MODEL_REF: return createModelRef();
      case AcePackage.DATA_REF: return createDataRef();
      case AcePackage.ATTRIBUTE: return createAttribute();
      case AcePackage.ACTION: return createAction();
      case AcePackage.COMMAND: return createCommand();
      case AcePackage.EVENT_ON_OUTCOME: return createEventOnOutcome();
      case AcePackage.EVENT: return createEvent();
      case AcePackage.VIEW: return createView();
      case AcePackage.VIEW_FUNCTION: return createViewFunction();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Project createProject()
  {
    ProjectImpl project = new ProjectImpl();
    return project;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Data createData()
  {
    DataImpl data = new DataImpl();
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelRef createModelRef()
  {
    ModelRefImpl modelRef = new ModelRefImpl();
    return modelRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataRef createDataRef()
  {
    DataRefImpl dataRef = new DataRefImpl();
    return dataRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Command createCommand()
  {
    CommandImpl command = new CommandImpl();
    return command;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EventOnOutcome createEventOnOutcome()
  {
    EventOnOutcomeImpl eventOnOutcome = new EventOnOutcomeImpl();
    return eventOnOutcome;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Event createEvent()
  {
    EventImpl event = new EventImpl();
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public View createView()
  {
    ViewImpl view = new ViewImpl();
    return view;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ViewFunction createViewFunction()
  {
    ViewFunctionImpl viewFunction = new ViewFunctionImpl();
    return viewFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AcePackage getAcePackage()
  {
    return (AcePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AcePackage getPackage()
  {
    return AcePackage.eINSTANCE;
  }

} //AceFactoryImpl
