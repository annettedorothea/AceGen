/**
 * generated by Xtext 2.10.0
 */
package com.anfelisa.ace.impl;

import com.anfelisa.ace.AcePackage;
import com.anfelisa.ace.Action;
import com.anfelisa.ace.Event;
import com.anfelisa.ace.EventOnOutcome;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Event On Outcome</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.anfelisa.ace.impl.EventOnOutcomeImpl#getOutcome <em>Outcome</em>}</li>
 *   <li>{@link com.anfelisa.ace.impl.EventOnOutcomeImpl#getEvents <em>Events</em>}</li>
 *   <li>{@link com.anfelisa.ace.impl.EventOnOutcomeImpl#getActions <em>Actions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EventOnOutcomeImpl extends MinimalEObjectImpl.Container implements EventOnOutcome
{
  /**
   * The default value of the '{@link #getOutcome() <em>Outcome</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutcome()
   * @generated
   * @ordered
   */
  protected static final String OUTCOME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOutcome() <em>Outcome</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutcome()
   * @generated
   * @ordered
   */
  protected String outcome = OUTCOME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEvents() <em>Events</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvents()
   * @generated
   * @ordered
   */
  protected EList<Event> events;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected EList<Action> actions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EventOnOutcomeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AcePackage.Literals.EVENT_ON_OUTCOME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOutcome()
  {
    return outcome;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOutcome(String newOutcome)
  {
    String oldOutcome = outcome;
    outcome = newOutcome;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AcePackage.EVENT_ON_OUTCOME__OUTCOME, oldOutcome, outcome));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Event> getEvents()
  {
    if (events == null)
    {
      events = new EObjectResolvingEList<Event>(Event.class, this, AcePackage.EVENT_ON_OUTCOME__EVENTS);
    }
    return events;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Action> getActions()
  {
    if (actions == null)
    {
      actions = new EObjectResolvingEList<Action>(Action.class, this, AcePackage.EVENT_ON_OUTCOME__ACTIONS);
    }
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AcePackage.EVENT_ON_OUTCOME__OUTCOME:
        return getOutcome();
      case AcePackage.EVENT_ON_OUTCOME__EVENTS:
        return getEvents();
      case AcePackage.EVENT_ON_OUTCOME__ACTIONS:
        return getActions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AcePackage.EVENT_ON_OUTCOME__OUTCOME:
        setOutcome((String)newValue);
        return;
      case AcePackage.EVENT_ON_OUTCOME__EVENTS:
        getEvents().clear();
        getEvents().addAll((Collection<? extends Event>)newValue);
        return;
      case AcePackage.EVENT_ON_OUTCOME__ACTIONS:
        getActions().clear();
        getActions().addAll((Collection<? extends Action>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AcePackage.EVENT_ON_OUTCOME__OUTCOME:
        setOutcome(OUTCOME_EDEFAULT);
        return;
      case AcePackage.EVENT_ON_OUTCOME__EVENTS:
        getEvents().clear();
        return;
      case AcePackage.EVENT_ON_OUTCOME__ACTIONS:
        getActions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AcePackage.EVENT_ON_OUTCOME__OUTCOME:
        return OUTCOME_EDEFAULT == null ? outcome != null : !OUTCOME_EDEFAULT.equals(outcome);
      case AcePackage.EVENT_ON_OUTCOME__EVENTS:
        return events != null && !events.isEmpty();
      case AcePackage.EVENT_ON_OUTCOME__ACTIONS:
        return actions != null && !actions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (outcome: ");
    result.append(outcome);
    result.append(')');
    return result.toString();
  }

} //EventOnOutcomeImpl
