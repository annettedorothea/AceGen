/*
 * generated by Xtext 2.10.0
 */
grammar InternalAce;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.anfelisa.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.anfelisa.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.anfelisa.services.AceGrammarAccess;

}

@parser::members {

 	private AceGrammarAccess grammarAccess;

    public InternalAceParser(TokenStream input, AceGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Project";
   	}

   	@Override
   	protected AceGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	iv_ruleProject=ruleProject
	{ $current=$iv_ruleProject.current; }
	EOF;

// Rule Project
ruleProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getProjectAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='target'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectAccess().getTargetKeyword_1());
		}
		(
			(
				(
					lv_target_2_1='PHP'
					{
						newLeafNode(lv_target_2_1, grammarAccess.getProjectAccess().getTargetPHPKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProjectRule());
						}
						setWithLastConsumed($current, "target", lv_target_2_1, null);
					}
					    |
					lv_target_2_2='ES6'
					{
						newLeafNode(lv_target_2_2, grammarAccess.getProjectAccess().getTargetES6Keyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProjectRule());
						}
						setWithLastConsumed($current, "target", lv_target_2_2, null);
					}
				)
			)
		)
		(
			otherlv_3='actions'
			{
				newLeafNode(otherlv_3, grammarAccess.getProjectAccess().getActionsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectAccess().getActionsActionParserRuleCall_3_2_0());
					}
					lv_actions_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"com.anfelisa.Ace.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_3_3());
			}
		)*
		(
			otherlv_7='commands'
			{
				newLeafNode(otherlv_7, grammarAccess.getProjectAccess().getCommandsKeyword_4_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectAccess().getCommandsCommandParserRuleCall_4_2_0());
					}
					lv_commands_9_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectRule());
						}
						add(
							$current,
							"commands",
							lv_commands_9_0,
							"com.anfelisa.Ace.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_4_3());
			}
		)*
		(
			otherlv_11='events'
			{
				newLeafNode(otherlv_11, grammarAccess.getProjectAccess().getEventsKeyword_5_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectAccess().getEventsEventParserRuleCall_5_2_0());
					}
					lv_events_13_0=ruleEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectRule());
						}
						add(
							$current,
							"events",
							lv_events_13_0,
							"com.anfelisa.Ace.Event");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_5_3());
			}
		)*
		(
			otherlv_15='views'
			{
				newLeafNode(otherlv_15, grammarAccess.getProjectAccess().getViewsKeyword_6_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectAccess().getViewsViewParserRuleCall_6_2_0());
					}
					lv_views_17_0=ruleView
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectRule());
						}
						add(
							$current,
							"views",
							lv_views_17_0,
							"com.anfelisa.Ace.View");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_6_3());
			}
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getTypeFunctionTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleFunctionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"com.anfelisa.Ace.FunctionType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='executes'
			{
				newLeafNode(otherlv_2, grammarAccess.getActionAccess().getExecutesKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getActionAccess().getCommandCommandCrossReference_2_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getEventsOnOutcomeEventOnOutcomeParserRuleCall_1_1_0());
					}
					lv_eventsOnOutcome_2_0=ruleEventOnOutcome
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"eventsOnOutcome",
							lv_eventsOnOutcome_2_0,
							"com.anfelisa.Ace.EventOnOutcome");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_1_2());
			}
		)*
	)
;

// Entry rule entryRuleEventOnOutcome
entryRuleEventOnOutcome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventOnOutcomeRule()); }
	iv_ruleEventOnOutcome=ruleEventOnOutcome
	{ $current=$iv_ruleEventOnOutcome.current; }
	EOF;

// Rule EventOnOutcome
ruleEventOnOutcome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventOnOutcomeAccess().getOnKeyword_0());
		}
		(
			(
				lv_outcome_1_0=RULE_ID
				{
					newLeafNode(lv_outcome_1_0, grammarAccess.getEventOnOutcomeAccess().getOutcomeIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventOnOutcomeRule());
					}
					setWithLastConsumed(
						$current,
						"outcome",
						lv_outcome_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='publishes'
			{
				newLeafNode(otherlv_2, grammarAccess.getEventOnOutcomeAccess().getPublishesKeyword_2_0());
			}
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getEventOnOutcomeAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventOnOutcomeRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEventOnOutcomeAccess().getEventsEventCrossReference_2_2_0());
					}
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getEventOnOutcomeAccess().getRightParenthesisKeyword_2_3());
			}
		)?
		(
			otherlv_6='triggers'
			{
				newLeafNode(otherlv_6, grammarAccess.getEventOnOutcomeAccess().getTriggersKeyword_3_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getEventOnOutcomeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventOnOutcomeRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getEventOnOutcomeAccess().getActionsActionCrossReference_3_2_0());
					}
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getEventOnOutcomeAccess().getRightParenthesisKeyword_3_3());
			}
		)?
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='listenedToBy'
			{
				newLeafNode(otherlv_1, grammarAccess.getEventAccess().getListenedToByKeyword_1_0());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getEventAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEventAccess().getListenersRenderFunctionCrossReference_1_2_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getEventAccess().getRightParenthesisKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleView
entryRuleView returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getViewRule()); }
	iv_ruleView=ruleView
	{ $current=$iv_ruleView.current; }
	EOF;

// Rule View
ruleView returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getViewAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getViewRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getViewAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getViewAccess().getRenderFunctionsRenderFunctionParserRuleCall_1_1_0());
					}
					lv_renderFunctions_2_0=ruleRenderFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getViewRule());
						}
						add(
							$current,
							"renderFunctions",
							lv_renderFunctions_2_0,
							"com.anfelisa.Ace.RenderFunction");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getViewAccess().getRightCurlyBracketKeyword_1_2());
			}
		)*
	)
;

// Entry rule entryRuleRenderFunction
entryRuleRenderFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRenderFunctionRule()); }
	iv_ruleRenderFunction=ruleRenderFunction
	{ $current=$iv_ruleRenderFunction.current; }
	EOF;

// Rule RenderFunction
ruleRenderFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getRenderFunctionAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRenderFunctionRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleFunctionType
entryRuleFunctionType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTypeRule()); }
	iv_ruleFunctionType=ruleFunctionType
	{ $current=$iv_ruleFunctionType.current.getText(); }
	EOF;

// Rule FunctionType
ruleFunctionType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='CREATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFunctionTypeAccess().getCREATEKeyword_0());
		}
		    |
		kw='READ'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFunctionTypeAccess().getREADKeyword_1());
		}
		    |
		kw='UPDATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFunctionTypeAccess().getUPDATEKeyword_2());
		}
		    |
		kw='DELETE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFunctionTypeAccess().getDELETEKeyword_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
